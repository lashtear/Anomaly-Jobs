Developer notes on cross-platform compatibility
-----------------------------------------------

This document is intended to highlight differences in supported servers and
identify standard coding practices to avoid compatibility issues.

1. Iteration

TinyMUSH level numbering for iter() is opposite MUX/Rhost/Penn (i.e., itext(0)
refers to the outermost iter(), while itext(ilev()) refers to the innermost.)
Avoid nested iter()s by using filter() or map() (See note) and appropriate 
registers. Use single-level iter() sparingly in top-level (command) attributes
or hooks; do not use it in functions. Use itext(0) in preference to ##.

Note: TinyMUSH's interpretation of filter(), map(), fold(), mix(), and 
foreach() retrieves and evaluates the text of its attribute, rather than 
passing list elements to the attribute, essentially evaluating get_eval() 
rather than u().  For compatibility, attributes called by these functions which
use subsequent attribute calls must explicitly identify the object dbref.

2. Booleans

Server and/or configuration differences may cause non-negative db#'s and
nonempty strings to be evaluated as "false". For boolean evaluations (t(),
ifelse, or, and, etc.) use the appropriate function (e.g., isdbref(), strlen(),
etc.) to ensure the evaluation is either 0 or a non-zero number.

3. Empty attributes

Tiny/Rhost/MUX evaluate hasattr() on an empty attribute (e.g., "&FOO me=") as 0,
while PennMUSH returns 1. PennMUSH requires hasattrval() for the same behavior.
%va/FN_HASATTR and %va/FN_HASATTRP resolve this difference.

4. Null

In many math functions, TinyMUSH and MUX treat null (or a space) as zero (e.g.,
add(1,) --> 1); PennMUSH treats it as null (--> #-1 ARGUMENTS MUST BE NUMBERS).
Always explicitly use 0 in math functions (or base case for fold.)

In sort(), iter(), and other functions with an output delimiter, TinyMUSH and
MUX treat a space as a real space (e.g., sort(3 2 1,n, , ) --> 1 2 3);  PennMUSH
and RhostMUSH treat it as null (--> 123).  Always explicitly identify spaces
used as delimiters with %b.

In map() and filter(), MUX accepts @@ as a null delimeter, but Penn/Rhost do
not. Creativity may be required to obtain the output you need, either by using
iter() with a null delimiter (see note 1), a version switch on the odelim,
editing the output, or wrapping the undesired output in null().

5. Special characters

Different servers treat \ differently when parsing. Use % as a preferred escape
character when possible. Never use \ or % as a delimiter. TM3.1 does not have
chr(), so all special characters must be escaped.

6. Math

In MUX, div(foo,bar) accepts floating point arguments and returns an integer. In
PennMUSH the arguments must also be integers.  div(trunc(),trunc()) would
exactly emulate MUX behavior, but round(fdiv(foo,bar),0) is probably preferred
to avoid intermediate roundoff errors.

MUX/Rhost/Tiny have list math functions such as ladd(<list>). Penn has a single
function lmath with the math operator as an argument, (e.g., lmath(add,<list>)).
Use %va/FN_LADD or similar.

7. Strings

PennMUSH and MUX operate identically on single-argument trim(foo), but have
different order of second and third arguments (delimiter & left or right).
Default Penn trim() behavior matches MUX but can be configured otherwise. 
While trim() will work cross-platform if only one argument is included, for
consistency use %va/FN_TRIM.

Many PennMUSH functions which operate on strings (e.g., ansi(), pemit(), etc.)
do not require commas in the second argument to be escaped.  To retain MUX
compatibility, escape commas in strings: ansi(h,foo,bar) --> ansi(h,foo\,bar)

MUX doesn't care about negative integers on repeat(). Rhost and Penn do. Use
max(0,<calculation>) if it's possible the calculation will be negative.

MUX center(), ljust(), and rjust() truncate their content. Use FN_STRTRUNC prior
to passing to these functions if the argument has a chance of exceeding the
specified length.

8. Searching

On MUX, search() may fail on large chunks.  Do not do searches with results that
may exceed buffer size (approx 1000 dbrefs). On Rhost, search() can return
garbage objects; use searchng() instead.  On Penn, evaluating searches require
\[ \] around the argument.

9. Attribute sorting

MUX stores attributes by creation time. PennMUSH stores attributes in an
alphabetically-sorted list.  When attribute order matters (e.g., list of
comments) use a sort.

10. Non-existent functions

MUX columns() --> no direct equivalent in Penn. Alternate code using align() is
installed in %va/FN_COLUMNS.  Use table() if no indent required.

MUX strtrunc() --> Penn left().  Installed in %va/FN_STRTRUNC

MUX & Penn itemize() --> Rhost elist() with different order of arguments.
Installed in %va/FN_ITEMIZE which also calls FN_PRETTY as a final backup.

TinyMUSH 3.1 doesn't have if(). Use ifelse(foo,bar,) in place of if(foo,bar).

11. Misc. functions/flags

MUX/TM3/Penn WIZARD Flag --> Rhost bittype() = 5

MUX/TM3 ROYALTY Flag = Z --> Penn Flag = r --> Rhost bittype() = 2

TinyMUSH: COMMANDS --> Penn: !NO_COMMAND --> MUX/Rhost: either.

HALT flag is cross-platform (don't use HALTED)

@lock/speech is cross-platform (don't use @lock/speechlock)

ansi() is cross-platform (don't use %x or %c codes)

@Desc is cross-platform (don't use @Describe)

wrap() arguments differ between servers.  A generic FN_WRAP conversion for all 8
arguments is possible but impractical; it is better to code alternate versions
with fewer arguments for specific desired formats.

lcon() and children() return #-1 rather than an empty list.  If there is a 
chance that list will return empty, use remove(lcon(),#-1) to produce 
cross-platform behavior.

12. Queue

MUX: Permits fractional-second @wait. Processes @tr's (puts on queue with
evaluation of current state of attributes) before processing additional 
commands in the original thread which might change the attributes.

Penn: @wait must be integer. @tr's take a queue cycle and might not be 
processed before additional commands in the earlier thread change attributes.
Use long enough @waits for the @tr's to propogate, or pass any needed values as
arguments to the @tr.

@wait me={foo};@notify me is subject to interference/mis-synchronization with
multiple simultaneous uses of the same object during the @wait, and/or a coding
error causing a stray @wait me (or several) elsewhere. Use semaphores with
caution.  @wait 0={foo} will wait until previous commands have executed and will
generally suffice.

13. Destroying objects

TinyMUSH/MUX has @destroy/instant.  PennMUSH default configuration has @destroy
disabled, only @nuke is config-independent. Rhost has @destroy (accepting
/instant for compatibility, but it does nothing), but RECOVER items immediately
disappear from lcon(), etc.  Additionally on Rhost, this garbage is not
automatically removed by default, but must be @purged periodically.

14. Installation notes

PennMUSH's default @pemit configuration is noisy (emitting player gets
feedback). Use 'think' in installation files to prevent double messages.

PennMUSH's @attribute/access implementation does NOT save between resets.  The
installing wizard should use @attribute/access/retroactive and add the
@attribute/access commands to a wizard @startup.

Rhost requires installing wizard set SIDEFX to use create(), and most objects
that use side effects must also be set this way.

PennMUSH can't handle the large number of [ symbols in the pie chart map.  These
have been moved out to be re-merged via foreach() when needed.