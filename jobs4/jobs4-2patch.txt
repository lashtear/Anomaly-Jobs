@pemit %#=[ansi(hc,ANOMALY JOBS:)] Working. Please wait.
@@ ===============================================================================
@@ 
@@ Anomaly Jobs
@@ Superior Task Tracking Technology
@@ Version 4.2 PATCH from Version 4.0 14Jan2004
@@
@@ Written by: Starfleet @ Anomaly (station419@earthlink.net)
@@
@@ Platforms supported: MUX 2.x, MUSH 3
@@
@@ This code is provided as-is and expresses no guarantee or warranty. Use it
@@ entirely at your own risk. Author is not liable for any damages, real or
@@ implied. It is available free to benefit the online text game community at
@@ large.
@@
@@ ===============================================================================
@@ Installation instructions
@@ 
@@ This patch REQUIRES Anomaly Jobs 4.0. If you do not have 4.0 installed, this
@@ version will not work. Please get the jobs-v4-0.txt file and quote that for
@@ a fresh installation. If you are running an earlier version, please patch up to
@@ 4.0, then run the 4.2 patch. For versions earlier than 2.3, please contact the
@@ author. 
@@
@@ This patch will also work on the few random games that are using 4.1.
@@ 
@@ It requires no unformatting or alteration of any kind. Simply quote it into 
@@ your favorite client, and it will tidy everything up on its own.
@@
@@ Note that there are new commands. Please make sure you are using the most
@@ recent version of the help file, found in the zip file.
@@
@@ What's new?
@@ 
@@ +jobs/new
@@ +job/query
@@ Bug fixes
@@ If connected twice for some reason, jobs will only broadcast once.
@@
@@ ===============================================================================
@@
@@ This will likely be the last version of the Jobs code unless significant bugs
@@ are introduced by this patch.
@@
@@ ===============================================================================
@set me=quiet
@fo me={@tel [search(object=Job Global Object <JGO>)]}
@pemit %#=[repeat(=,79)]%r%r[center(ansi(hc,Patching Anomaly Jobs to 4.2),79)]%r%r[repeat(=,79)]
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting up commands.
@@
&CMD_JOBS/ALL here=$+jobs/*:@switch [u(#1430/HAS_ACCESS,%#)][ucstr(secure(first(%0)))]=0*,{@pemit %#=Permission denied.},1ALL,{@pemit %#=[u(#1430/JOBS_HEADER)];@dolist filter(#1430/FIL_GOING,revwords(lcon(#1430)))=@pemit %#=[ifelse(u(#1430/FN_ACCESSCHECK,[get(##/BUCKET)],%#),u(#1430/DISPLAY_JOB,##),)];@wait me={@pemit %#=[repeat(=,79)]};@wait 0=@notify me},1PRI,{@@},1NEW,{@@},1SEARCH,{@@},1COMPRESS,{@@},1MINE,{@@},1CREDITS,{@pemit %#=[center(| [ansi(hy,Anomaly Jobs)] |,79,=)]%r%rVersion: [u(#1430/VERSION)][space(5)]Release: [u(#1430/RELEASE)]%r%rAuthor: [u(#1430/CREDITS)]%r%r[u(#1430/LICENSE)]%r%r[repeat(=,79)]},{@switch [match(u(#1430/BUCKETS),secure(%0))]=0,{@pemit %#=That is not a valid job type. Valid job types are: [u(#1430/FN_PRETTY,u(#1430/BUCKETS))]},{@wait me=@pemit %#=[u(#1430/JOBS_HEADER)];@dolist revwords(lcon(#1430))={@pemit %#=[ifelse(and(u(#1430/FN_ACCESSCHECK,[get(##/BUCKET)],%#),switch(ucstr(secure(%0)),u(##/BUCKET),1,0)),u(#1430/DISPLAY_JOB,##),)]};@wait .1={@pemit %#=[repeat(=,79)]};@wait 0=@notify me}}
&CMD_JOB/ACT here=$+job/act *:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][or(orflags(%#,WZ),u(#1430/ACCESS_[u(%q0/BUCKET)],%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list by type.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=[center(| [ansi(hy,View Job Number %0)] |,79,=)]%r[ulocal(#1430/DISPLAY_HEADERS,%q0)]%r[repeat(-,79)];@dolist lattr(%q0/COMMENT_*)={@pemit %#=[rest(convsecs(extract(get(%q0/##),2,1,|)))] [first(get(%q0/##),|)] [ljust(strtrunc(extract(get(%q0/##),4,1,|),15),15)] [ljust(strtrunc(trim(edit(edit(last(get(%q0/##),|),%r,%b),%t,%b),b),35),35)]};@wait me={@pemit %#=[repeat(=,79)]};@notify me}
&CMD_JOB/CLONE here=$+job/clone *:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You do not have access to that job.},{@pemit [setq(1,inc(get(#1430/JOBS_NUM)))]%#=Job copied as Job %q1.;&JOBS_NUM #1430=%q1;@clone %q0=Job %q1;@pemit me=[setq(2,num(Job %q1))];@tel %q2=#1430;@trigger #1430/TRIG_ADD=%q2,Cloned job.,%#,CLN;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Job %0 Cloned by %n. New job is %q1.}
&CMD_JOB/ASSIGN here=$+job/assign *=*:@switch [u(#1430/HAS_ACCESS,%#)][setq(1,num(*%1))][setq(2,switch(ucstr(%1),NONE,1,0))][or(isdbref(%q1),%q2)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no player by that name.},110*,{@pemit %#=That is not a valid job number.},1110*,{@pemit %#=You do not have access to that job.},11110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have assigned Job number %0 to [ifelse(isdbref(%q1),name(%q1),nobody)].;&ASSIGNED_TO %q0=[ifelse(%q2,,%q1)];@trigger #1430/TRIG_ADD=%q0,[ifelse(%q2,Assignment removed.,Assigned to [name(%q1)])].,%#,ASN;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Job %0 has been assigned to [ifelse(%q2,nobody,name(%q1))] by %n.}
&CMD_BUCKET/HIDE here=$+bucket/hide *:@switch [orflags(%#,WZ)][not(hasattr(#1430,HIDDEN_%0))][member(get(#1430/BUCKETS),ucstr(%0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That bucket is already on the hidden list. Use '[ansi(h,+bucket/show <bucket>)]' to take the bucket off of the hidden list.},110*,{@pemit %#=There is no bucket by that name. Use '[ansi(h,+buckets)]' for a list of valid buckets.},{@pemit %#=You have placed bucket [ucstr(%0)] on the list of hidden buckets. Jobs in this bucket will not show on the standard '[ansi(h,+jobs)]' list.;&HIDDEN_%0 #1430=1}
&CMD_TYPO here=$+typo *:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission denied.},{@pemit [setq(0,add(get(#1430/JOBS_NUM),1))]%#=You have notified production staff of the typo, with the details '[strtrunc(%0,get(#1430/BUFFER))]';@trigger #1430/TRIG_CREATE=%#,BUILD,2,Typo Reported,[strtrunc(%0,get(#1430/BUFFER))]}
&CMD_JOBS/NEW here=$+jobs/new:@switch [setq(0,%#)][u(#1430/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=[u(#1430/JOBS_HEADER)];@dolist filter(#1430/FIL_NEW,revwords(lcon(#1430)))={@pemit %#=[ifelse(u(#1430/FN_ACCESSCHECK,get(##/BUCKET),%#),u(#1430/DISPLAY_JOB,##),)]};@wait me={@pemit %#=[center(| [ansi(hr,*)] Denotes New Activity |,79,=)]};@wait 0=@notify me}
&CMD_PITCH here=$+pitch *=*:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission Denied.},{@pemit %#=You have pitched your idea to staff about '[secure(%0)]'. Please remember that this is merely an idea [ansi(hu,pitch)], and not a request. Staff, for one reason or many, may decide not to go with the idea.;@trigger #1430/TRIG_CREATE=%#,PITCH,1,[strtrunc(secure(%0),20)],%1}
&CMD_JOB/QUERY here=$+job/query */*=*:@switch [map(#1430/MAP_ISPLAYER,%0)]=*0*,{@pemit %#=There is a problem with the player list.},{@pemit %#=You have sent a query to '%0' regarding '%1'.;@trigger #895/TRIG_MAIL=%0 %#,Query: %1,[u(#1430/FN_QUERY,%#,7)]%r%r%2;@trigger #1430/TRIG_CREATE=%#,QUERY,2,[strtrunc(secure(%1),30)],Queried [secure(%0)]%r%r[strtrunc(%2,get(#1430/BUFFER))],[add(secs(),604800)]}
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Creating QUERY bucket. The bucket locks will be set to WIZARD and ROYALTY automatically, so ignore the response it gives you.
@@
+bucket/create QUERY=Player Query bucket.
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting functions and data.
@startup here=@drain me;@notify me
@@
&FN_ACCESSCHECK Job Database <JD>=[and(or(orflags(%1,W),switch([u(#1430/ACCESS_%0,%1)][gt(member(get(%1/JOBSB),%0),0)],01,1,10,1,11,0,0)),u(#1430/HAS_ACCESS,%1))]
&FIL_NEW Job Database <JD>=[gt(get(%0/MODIFIED_ON),get(%q0/LAST_CONN))]
&ACCESS_QUERY Job Database <JD>=[orflags(%0,WZ)]
&MAP_ISPLAYER Job Database <JD>=[isdbref(num(*%0))]
@@ -------------------------------------------
@@
@@ This is the default query message. Change it if you wish. The default # of days
@@ for response (as passed to it by cMD_JOB/QUERY) is 7 days, which is more than fair
@@ considering staff has a turnaround time of 3 days for requests.
@@
@@ -------------------------------------------
&FN_QUERY Job Database <JD>=You have been issued an official query by the Jobs system, requested by [name(%0)]. To respond to this query, you must submit a +request within %1 days, otherwise staff may need to make a decision regarding this query arbitrarily without your input.%%r[repeat(-,75)]
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting triggers.
@@
&TRIG_BROADCAST Job Database <JD>=@pemit/list [setq(0,%0)][filter(#1430/FIL_BROADCAST,setunion(lwho(),))]=[ansi(hc,JOBS:)] %1
&TRIG_APPROVE Job Tracker=+bbpost %vb/A: %3=[space(10)]%xhJob:%xn #%0%r[space(8)]%xhTitle:%xn [get(%q0/TITLE)]%r[space(4)]%xhOpened By:%xn [name(get(%q0/OPENED_BY))]%r[space(4)]%xhOpened On:%xn [convsecs(get(%q0/OPENED_ON))]%r%b%xhCompleted By:%xn [name(%1)]%r%b%xhCompleted On:%xn [time()]%r%r[last(get(%q0/COMMENT_1),|)]%r[repeat(-,78)]%r[ansi(h,Comments from [name(%1)]:)] %2%r%rThis request was approved.;@mail/quick [get(%q0/OPENED_BY)]/Approved: %3=Your request for %3 has been approved: [last(get(%q0/COMMENT_1),|)]%r[repeat(-,75)]%r[ansi(h,Comments added by [name(%1)]:)] %2
&TRIG_DENY Job Tracker=+bbpost %vb/D: %3=[space(10)]%xhJob:%xn #%0%r[space(8)]%xhTitle:%xn [get(%q0/TITLE)]%r[space(4)]%xhOpened By:%xn [name(get(%q0/OPENED_BY))]%r[space(4)]%xhOpened On:%xn [convsecs(get(%q0/OPENED_ON))]%r%b%xhCompleted By:%xn [name(%1)]%r%b%xhCompleted On:%xn [time()]%r%r[last(get(%q0/COMMENT_1),|)]%r[repeat(-,78)]%r[ansi(h,Comments from [name(%1)]:)] %2%r%rThis request was denied.;@mail/quick [get(%q0/OPENED_BY)]/Denied: %3=Your request for %3 has been denied: [last(get(%q0/COMMENT_1),|)]%r[repeat(-,75)]%r[ansi(h,Comments added by [name(%1)]:)] %2
&TRIG_COMPLETE Job Tracker=+bbpost [default(#1430/POSTTO_%3,%va)]/Completed Job #%0 %([get(%q0/TITLE)]%)=Job #%0 has been completed by [name(%1)]: %r%r[last(get(%q0/COMMENT_1),|)]%r[repeat(-,78)]%r[ansi(h,Comments from [name(%1)]:)] %2
@@
&VERSION Job Database <JD>=v4.2
&RELEASE Job Database <JD>=Jan 14, 2004
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Cleaning up attributes. You may see 'Created: Permission denied.' errors, these are normal.
@@
@fo me=@edit here/*=#1430,[num(Job Database <JD>)]
@fo me=@edit here/*=#895,[num(Job Tracker)]
@fo me=@edit Job Database <JD>/*=#1430,[num(Job Database <JD>)]
@fo me=@edit Job Tracker/*=#1430,[num(Job Database <JD>)]
@fo me=@edit Job Database <JD>/*=#895,[num(Job Tracker)]
@wait 2={@pemit %#=[ansi(hc,ANOMALY JOBS:)] Patch complete! Thanks for using Anomaly Jobs!;home;@set me=!quiet}
