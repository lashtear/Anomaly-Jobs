@@
@@ Anomaly Jobs 6.4 Patch Installer
@@ Patch from 6.3 to 6.4.  For earlier versions use the full install.
@@ Quote this file from your client with a 1-second delay
@@
think [repeat(=,77)]%r%r[center(ansi(hc,Setting up Anomaly Jobs v6.4),77)]%r%r[repeat(=,77)]
@set me=quiet
think [ansi(hc,ANOMALY JOBS:)] Checking current installation.
@switch [ifelse(isdbref(setr(0,switch(first(version()),PennMUSH,lsearch(all,eobjects,\[strmatch(name(##),Job Global Object <JGO>)\]),RhostMUSH,searchng(object=Job Global Object <JGO>),search(object=Job Global Object <JGO>)))),setq(1,get(%q0/VA)),[setq(1,switch(first(version()),PennMUSH,lsearch(all,eobjects,\[strmatch(name(##),Job Database <JD>)\]),RhostMUSH,searchng(object=Job Database <JD>),search(object=Job Database <JD>)))][setq(0,loc(%q1))])][isdbref(%q0)][and(isdbref(%q1),gte(edit(default(%q1/version,0),v,),6.3))]=0*,{think [ansi(hc,ANOMALY JOBS:)] No previous jobs 6.3 installation found.  [ansi(hr,Aborting. Cancel this script in your client.)];&JOB_GO %#=#-1;&JOB_VA %#=#-1;&JOB_VB %#=#-1;&JOB_VC %#=#-1;&JOB_PATCH %#=1;},10*,{think [ansi(hc,ANOMALY JOBS:)] [ansi(hr,Not a valid Jobs 5 or later installation.)];think [ansi(hc,ANOMALY JOBS:)] [ansi(hr,Aborting. Cancel this script in your client.)];&JOB_GO %#=#-1;&JOB_VA %#=#-1;&JOB_VB %#=#-1;&JOB_VC %#=#-1;&JOB_PATCH %#=1;},{think [ansi(hc,ANOMALY JOBS:)] Current installation found.  Updating.;&JOB_GO %#=%q0;&JOB_VA %#=%q1;&JOB_VB %#=get(%q0/VB);&JOB_VC %#=get(%q0/VC);&JOB_PATCH %#=1;}
think [ansi(hc,ANOMALY JOBS:)] Setting up commands.
@aconnect [v(JOB_GO)]=@switch [default(%#/JOBS_LOGIN,1)][u(%va/HAS_ACCESS,%#)][u(%va/FN_GUEST,%#)]=110,{@force %#=+jobs/new},100,{@force %#=+myjobs}
&CMD_BUG [v(JOB_GO)]=$+bug *=*:@switch [u(%va/FN_GUEST,%#)]=1,{@pemit %#=This command is not available to guests.},{@pemit %#=You have notified production staff of the [secure(u(%va/FN_STRTRUNC,trim(%0),30))] bug, with the details '[secure(u(%va/FN_STRTRUNC,trim(%1),get(%va/BUFFER)))]';@trigger %va/TRIG_CREATE=%#,u(%va/FN_FIND-BUCKET,CODE),3,BUG: [u(%va/FN_STRTRUNC,trim(%0),30)],[u(%va/FN_STRTRUNC,trim(%1),get(%va/BUFFER))],,,5}
&CMD_JOB/ACCESS [v(JOB_GO)]=$+job/access *=*:@switch [u(%va/GIVE_ACCESS,%#)][setq(0,switch(trim(%0),me,%#,pmatch(trim(%1))))][setq(1,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][isdbref(%q1)][u(%va/FN_WIZONLY,%q0)][u(%va/FN_ACCESSCHECK,parent(%q1),%q0,%q1)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no player by that name.},110*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},11111*,{@pemit %#=That player can always access all jobs.},111100*,{@pemit %#=You have given [name(%q0)] access to [name(%q1)].;&JOBACCESS %q1=[ifelse(member(get(%q1/JOBACCESS),u(%va/FN_OBJID,%q0)),remove(get(%q1/JOBACCESS),u(%va/FN_OBJID,%q0)),setunion(get(%q1/JOBACCESS),u(%va/FN_OBJID,%q0)))]},{@pemit %#=You have removed [name(%q0)]'s access to [name(%q1)].;&JOBACCESS %q1=[ifelse(member(get(%q1/JOBACCESS),u(%va/FN_OBJID,%q0)),remove(get(%q1/JOBACCESS),u(%va/FN_OBJID,%q0)),setunion(get(%q1/JOBACCESS),u(%va/FN_OBJID,%q0)))]}
&CMD_JOB/SET [v(JOB_GO)]=$+job/set *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#,%q0)][setq(a,trim(%1))][setq(2,after(first(filter(%va/FIL_STATUS,lattr(%va/STATUS_*))),STATUS_))][gt(strlen(%q2),0)][not(u(%va/IS_LOCKED,%q0,%#))][udefault(%q0/STA_ACCESS,1,%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That is an invalid setting. Valid job settings are:%r[u(%va/FN_ITEMIZE,iter(lattr(%va/STATUS_*),last(get(%va/[itext(0)]),|),%b,|),|)].},11110*,{@pemit %#=That job is presently [ifelse(u(%va/FN_HASATTRP,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},111110*,{@pemit %#=That action is not available for that job.},{@pemit %#=You set [name(%q0)] to [setr(1,last(get(%va/STATUS_%q2),|))] status.;&STATUS %q0=%q2;@trigger %va/TRIG_ADD=%q0,Set to %q1.,%#,STA;@trigger %va/TRIG_BROADCAST=%q0,%#,STA,%q1}
&CMD_JOB/SUMSET [v(JOB_GO)]=$+job/sumset */*=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_HASATTRP,parent(%q0),ACCESS_[trim(%1)])][and(u(%va/CONFIG_ACCESS,%#),u(parent(%q0)/ACCESS_[trim(%1)],%#))][not(u(%va/IS_LOCKED,%q0,%#))][u(parent(%q0)/PROCESS_[trim(%1)],trim(%2),%q0,%#)][udefault(%q0/SUM_ACCESS,1,%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no such job. See '[ansi(h,+jobs)]' for a list of valid jobs.},110*,{@pemit %#='[trim(%1)]' is not a valid parameter. Valid parameters for [name(%q0)] are [u(%va/FN_ITEMIZE,map(%va/MAP_PARAMS,lattr(parent(%q0)/PROCESS_*)))].},1110*,{@pemit %#=You either can not use the +job/sumset command, or set that parameter.},11110*,{@pemit %#=That job is presently [ifelse(u(%va/FN_HASATTRP,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},111110*,{@pemit %#=[u(%q0/ERROR_[trim(%1)]%q2)]},1111110*,{@pemit %#=That action is not available for that job.},{@trigger %va/TRIG_BROADCAST=%q0,%#,SUM,[ucstr(trim(%1))];&%q3 %q0=%q1;@trigger %va/TRIG_ADD=%q0,[ucstr(trim(%1))] parameter updated to '[trim(%2)]',%#,SUM}
&CMD_JOBS/SEARCH [v(JOB_GO)]=$+jobs/search *:@force %#=+jobs/select search="%0"
&CMD_MYJOB/ADD [v(JOB_GO)]=$+myjob/add *=*:@switch [not(u(%va/FN_GUEST,%#))][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][or(and(u(%va/IS_PUBLIC,%q0),match(get(%q0/OPENED_BY),%#)),u(%va/FN_MYACCESSCHECK,parent(%q0),%#,%q0),)][not(u(%va/FN_HASATTR,%q0,LOCKED))]=0*,@pemit %#=This command is not available to guests.,10*,@pemit %#=That is an invalid job number.,110*,@pemit %#=[name(%q0)] is not yours. You can only modify your own jobs.,1110*,@pemit %#=That job is locked and cannot be changed at this time.,{@pemit %#=Comments to [name(%q0)] added.;@trigger %va/TRIG_ADD=%q0,trim(%1),%#,ADD;@trigger %va/TRIG_BROADCAST=%q0,%#,ADD}
&CMD_MYJOB/SUMSET [v(JOB_GO)]=$+myjob/sumset */*=*:@switch [not(u(%va/FN_GUEST,%#))][isdbref(setr(0,u(%va/FN_FIND-JOB,%0)))][u(%va/FN_HASATTRP,parent(%q0),MYACCESS_[trim(%1)])][and(u(%va/CONFIG_ACCESS,%#),u(parent(%q0)/MYACCESS_[trim(%1)],%#))][not(u(%va/IS_LOCKED,%q0,%#))][u(parent(%q0)/MYPROCESS_[trim(%1)],trim(%2),%q0,%#)]=0*,{@pemit %#=This command is not available to guests.},10*,{@pemit %#=There is no such job. See '[ansi(h,+jobs)]' for a list of valid jobs.},110*,{@pemit %#='[trim(%1)]' is not a valid parameter. Valid parameters for [name(%q0)] are [u(%va/FN_ITEMIZE,map(%va/MAP_PARAMS,lattr(parent(%q0)/MYPROCESS_*)))].},1110*,{@pemit %#=You either can not use the +myjob/sumset command, or set that parameter.},11110*,{@pemit %#=That job is presently [ifelse(u(%va/FN_HASATTRP,%q0,CHECKOUT),checked out to%b[name(first(get(%q0/CHECKOUT)))],locked)]},111110*,{@pemit %#=[u(%q0/MYERROR_[trim(%1)]%q2)]},{@trigger %va/TRIG_BROADCAST=%q0,%#,MYS,[ucstr(trim(%1))];&%q3 %q0=%q1;@trigger %va/TRIG_ADD=%q0,[ucstr(trim(%1))] parameter updated to '[trim(%2)]',%#,MYS}
&CMD_MYJOB/VIEW [v(JOB_GO)]=$+myjob *:@switch [not(u(%va/FN_GUEST,%#))][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][or(u(%va/FN_MYACCESSCHECK,parent(%q0),%#,%q0),u(%va/IS_TRANSPARENT,%q0),and(get(%q0/PUBLIC),match(get(%q0/OPENED_BY),%#)))]=0*,{@pemit %#=This command is not available to guests.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=[name(%q0)] is not yours. You can only view your own jobs.},{@pemit %#=[u(%va/FN_READERS,%q0,%#,1)][u(%va/FN_HEADER,View [name(%q0)])]%r[u(%va/FN_MYBANNER,%q0)][ifelse(u(%va/FN_HASATTRP,%q0,MYSUMMARY),[ulocal(%va/FN_MYSUMMARY,%q0,%#)],)];@dolist [filter(%va/FIL_PUBLISHED,filter(%va/FIL_COMMENTS,sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))))]={@pemit %#=[u(%va/FN_READJOB,##,%q0)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER)]}
&CMD_MYJOB/LAST [v(JOB_GO)]=$+myjob/last *=*:@switch [not(u(%va/FN_GUEST,%#))][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][or(u(%va/FN_MYACCESSCHECK,parent(%q0),%#,%q0),u(%va/IS_TRANSPARENT,%q0),and(get(%q0/PUBLIC),match(get(%q0/OPENED_BY),%#)))]=0*,{@pemit %#=This command is not available to guests.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=[name(%q0)] is not yours. You can only view your own jobs.},{@pemit %#=[u(%va/FN_READERS,%q0,%#,1)][u(%va/FN_HEADER,View [name(%q0)])]%r[u(%va/FN_MYBANNER,%q0)][ifelse(u(%va/FN_HASATTRP,%q0,MYSUMMARY),[ulocal(%va/FN_MYSUMMARY,%q0,%#)],)];@dolist [extract(setr(1,filter(%va/FIL_PUBLISHED,filter(%va/FIL_COMMENTS,sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))))),ifelse(lt(sub(words(%q1),trim(%1)),1),1,inc(sub(words(%q1),trim(%1)))),inc(trim(%1)))]={@pemit %#=[u(%va/FN_READJOB,##,%q0)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER)]}
&CMD_MYJOBS [v(JOB_GO)]=$+myjobs:@switch [u(%va/FN_GUEST,%#)][words(setr(0,filter(%va/FIL_MYJOBS,revwords(lcon(%va)))))]=1*,@pemit %#=This command is not available to guests.,00,@pemit %#=You have no +myjobs.,{@pemit %#=[u(%va/FN_MYJOBSHEADER,%#)];@dolist %q0=@pemit %#=[u(%va/FN_MYJOBLIST,##,%#)];@wait 0=@pemit %#=[u(%va/FN_FOOTER,[ansi(hr,*)] [ansi(hy,Denotes New Activity)])]}
&CMD_PITCH [v(JOB_GO)]=$+pitch *=*:@switch [u(%va/FN_GUEST,%#)]=1,{@pemit %#=This command is not available to guests.},{@pemit %#=You have pitched your idea to staff about '[trim(secure(%0))]'. Please remember that this is merely an idea [ansi(hu,pitch)], and not a request. Staff, for one reason or many, may decide not to go with the idea.;@trigger %va/TRIG_CREATE=%#,u(%va/FN_FIND-BUCKET,PITCH),1,[u(%va/FN_STRTRUNC,trim(secure(%0)),30)],trim(%1),,,3}
&CMD_REQUEST [v(JOB_GO)]=$+request *=*:@switch [u(%va/FN_GUEST,%#)]=1,{@pemit %#=This command is not available to guests.},{@pemit %#=You have requested [secure(u(%va/FN_STRTRUNC,trim(%0),30))] from staff. Please allow for some time to process it. Do not page staff about it - you will hear back soon.;@trigger %va/TRIG_CREATE=%#,u(%va/FN_FIND-BUCKET,REQ),2,[u(%va/FN_STRTRUNC,trim(secure(%0)),30)],[u(%va/FN_STRTRUNC,trim(%1),get(%va/BUFFER))],,,2}
&CMD_TYPO [v(JOB_GO)]=$+typo *:@switch [u(%va/FN_GUEST,%#)]=1,{@pemit %#=This command is not available to guests.},{@pemit %#=You have notified production staff of the typo, with the details '[u(%va/FN_STRTRUNC,trim(%0),get(%va/BUFFER))]';@trigger %va/TRIG_CREATE=%#,u(%va/FN_FIND-BUCKET,BUILD),2,Typo Reported at %L,[u(%va/FN_STRTRUNC,trim(%0),get(%va/BUFFER))],,,4}
&MAP_JOBSELECT [v(JOB_VA)]=switch(1,t(match(and or not %( %) | & !,%0)),%0,u(%va/FN_HASATTR,%#,JOBSELECT_%0),u(%va/FN_TOKENLIST,get(%#/JOBSELECT_%0)),%0)
&RELEASE [v(JOB_VA)]=March 18, 2011
&VERSION [v(JOB_VA)]=v6.4
&VERSION [v(JOB_VC)]=v6.4
@switch first(version())=RhostMUSH,{&FN_GUEST [v(JOB_VA)]=lit([eq(bittype(%0),0)])},{&FN_GUEST [v(JOB_VA)]=lit([haspower(%0,Guest)])}
@wait 10={think [ansi(hc,ANOMALY JOBS:)] Script complete. Thanks for using Anomaly Jobs!;@set me=!quiet}
