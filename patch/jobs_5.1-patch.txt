@pemit %#=[ansi(hc,ANOMALY JOBS:)] Working. Please wait.
@@ ===============================================================================
@@ 
@@ Anomaly Jobs
@@ Superior Task Tracking Technology
@@ Version 5.2 PATCH from Version 5.1 9 Jan 2007
@@
@@    Written by: Starfleet @ Anomaly (eye1movies@aol.com)
@@ Maintained by: Halmar@Gamma One (grey419@gmail.com)
@@  Contributors: Firestorm @ Ephemera (+myjobs, /tags)
@@                Ian @ MUX (Pies)
@@
@@ Platforms supported: MUX 2.x, MUSH 3
@@ Requirements: Myrddin's BBS, @mail system, Jobs 5.1
@@
@@ This code is provided as-is and expresses no guarantee or warranty. Use it
@@ entirely at your own risk. Author is not liable for any damages, real or
@@ implied. It is available free to benefit the online text game community at
@@ large.
@@
@@ ===============================================================================
@@ Installation instructions
@@
@@ DO NOT run this script if you have renamed any of the Job objects. It won't
@@ work. The default object names are:
@@
@@             Job Database <JD>
@@             Job Global Object <JGO>
@@             Job Parent Object <JPO>
@@             Job Tracker
@@ 
@@ Further, the Job Database <JD>, Job Parent Object <JPO> and Job Tracker must
@@ be in the Job Global Object <JGO>'s inventory.
@@ 
@@ BE SURE TO READ ALL OF THIS DOCUMENT, as there are configuration options that
@@ you may want to alter.
@@
@@ This installation file requires no unformatting or alteration of any kind. 
@@ Simply quote it into your favorite client, and it will tidy everything up on 
@@ its own.
@@
@@
@@ ===============================================================================
@@
@fo me={@tel [search(object=Job Global Object <JGO>)]}
&CMD_JOB/APPROVE here=$+job/approve *=*:@switch [setq(0,locate(%va,Job %0,i))][isdbref(%q0)][u(%va/HAS_ACCESS,%#)][u(%va/APPROVE_ACCESS,%#)][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=There is no job by that number.},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have approved job #%0, adding the comments: %1;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been approved by %n.;@trigger %va/TRIG_ADD=%q0,[strtrunc(%1,get(%va/BUFFER))],%#,APR;@trigger [parent(%q0)]/HOOK_APPROVE=%q0,%#;@trigger %va/TRIG_DESTROY=%q0}
&CMD_JOB/COMPLETE Job Global Object <JGO>=$+job/complete *=*:@switch [u(%va/COMPLETE_ACCESS,%#)][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job #. See '+jobs/all' for valid jobs.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have completed job # %0.;@trigger %va/TRIG_ADD=%q0,[strtrunc(%1,get(%va/BUFFER))],%#,COM;@trigger %q0/HOOK_COMPLETE=%q0,%#;@trigger %vb/TRIG_COMPLETE=%0,%#,%1,[parent(%q0)];@trigger %va/TRIG_APPROVE=%q0}
&CMD_JOB/DELETE Job Global Object <JGO>=$+job/delete *:@switch [or(u(%va/DELETE_ACCESS,%#),u(%va/FN_WIZONLY,%#),switch(%#,%va,1,0))][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have deleted job # %0.;@trigger %va/TRIG_ADD=%q0,Job %0 Deleted,%#,DEL;@trigger [parent(%q0)]/HOOK_DELETE=%q0,%#;@trigger %va/TRIG_DESTROY=%q0}
&CMD_JOB/DENY Job Global Object <JGO>=$+job/deny *=*:@switch [or(u(%va/DENY_ACCESS,%#),u(%va/FN_STAFFALL,%#))][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You cannot access that job.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have denied job #%0.;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been denied by %n.;@trigger %va/TRIG_ADD=%q0,[strtrunc(%1,get(%va/BUFFER))],%#,DNY;@trigger [parent(%q0)]/HOOK_DENY=%q0,%#;@trigger %vb/TRIG_DENY=%0,%#,%1,[get(%q0/TITLE)];@trigger %va/TRIG_DESTROY=%q0}
&CMD_JOB/MERGE Job Global Object <JGO>=$+job/merge *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,locate(%va,Job %1,i))][setq(1,locate(%va,Job %0,i))][isdbref(%q1)][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][u(%va/FN_ACCESSCHECK,parent(%q1),%#)][setq(2,u(%q0/NUM_COMMENT))][setq(3,u(%q1/NUM_COMMENT))][and(not(u(%va/IS_LOCKED,%q0)),not(hasattrp(%q1,LOCKED)))][not(eq(%0,%1))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job number %0.},110*,{@pemit %#=There is no job number %1.},1110*,{@pemit %#=You do not have access to [name(%q0)].},11110*,{@pemit %#=You do not have access to [name(%q1)].},111110*,{@pemit %#=One of the jobs is locked. It must be unlocked before modifications can be made.},1111110*,{@pemit %#=Sort of like a Klein bottle, eh?},{@trigger %va/TRIG_ADD=%q0,Job [secure(%0)] merged into this one.,%#,MRG;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been merged into Job %1 by %n;@wait me={@dolist [lattr(%q1/COMMENT_*)]={@cpattr %q1/##=%q0/COMMENT_[get(%q0/NUM_COMMENT)];&NUM_COMMENT %q0=[inc(get(%q0/NUM_COMMENT))]};@trigger %va/TRIG_DESTROY=%q1}};@notify me
&CMD_JOB/TRANS Job Global Object <JGO>=$+job/trans *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][isdbref(setr(1,locate(%vc,%1,i)))][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=There is no bucket by that name. Type '[ansi(h,+buckets)]' for a list of valid buckets.},11110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have transferred the job from [u(%va/FN_BUCKETNAME,%q0)] to [name(%q1)].;@set %q0=!going;&going %q0;@parent %q0=%q1;@trigger %va/TRIG_ADD=%q0,Transferred to [name(%q1)].,%#,TRN;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 transferred to [name(%q1)] by [name(%#)].}
&CMD_MYJOB/ADD here=$+myjob/add *=*:@switch [not(haspower(%#,guest))][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][and(u(%va/IS_PUBLIC,%q0),match(get(%q0/opened_by),%#))][not(hasattr(%q0,LOCKED))]=0*,@pemit %#={This command is not available to guests.},10*,@pemit %#={That is an invalid job number.},110*,{@pemit %#=Job %0 is not yours. You can only modify your own jobs.},1110*,{@pemit %#=That job is locked and cannot be changed at this time.},{@pemit %#=Comments to job number %0 added.;@trigger %va/TRIG_ADD=%q0,%1,%#,ADD;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Comments added to job %0 by %n.}
&CMD_MYJOB/VIEW here=$+myjob *:@switch [not(haspower(%#,guest))][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][or(gt(member(get(%q0/TAGGED_FOR),%#),0),u(%va/IS_TRANSPARENT,%q0),and(get(%q0/PUBLIC),match(get(%q0/OPENED_BY),%#)))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=Job %0 is not yours. You can only view your own jobs.},{@pemit %#=[center(| [ansi(hy,View Job Number %0)] |,79,=)]%r[ulocal(%va/DISPLAY_MYHEADERS,%q0)];@dolist [trim(squish(iter(filter(%va/FIL_COMMENTS,lattr(%q0/COMMENT_*)),switch(or(u(%q0/PUBLISH),hasflag(%q0/##,no_inherit),gt(member(get(%q0/TAGGED_FOR),%#),0),strmatch(extract(get(%q0/##),3,1,|),%#)),1,##))))]=@pemit %#={[repeat(-,79)]%r[ansi(h,[extract(get(%q0/##),4,1,|)] added on [convsecs(extract(get(%q0/##),2,1,|))]:)] [edit(last(get(%q0/##),|),@@PIPE@@,|)]};@wait .1=@pemit %#=[repeat(=,79)]}
&CMD_JOB/SUMSET here=$+job/sumset */*=*:@switch [setq(5,0)][setq(0,locate(%va,Job %0,i))][u(%va/HAS_ACCESS,%#)][isdbref(%q0)][hasattrp(%q0,ACCESS_%1)][and(u(%va/CONFIG_ACCESS,%#),u(%q0/ACCESS_%1,%#))][not(u(%va/IS_LOCKED,%q0))][u(%q0/PROCESS_%1,%2,%q0,%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no such job. See '[ansi(h,+jobs)]' for a list of valid jobs.},110*,{@pemit %#='%1' is not a valid parameter. Valid parameters for [name(%q0)] are [u(%va/FN_PRETTY,map(%va/MAP_PARAMS,lattr(parent(%q0)/PROCESS_*)))].},1110*,{@pemit %#=You either can not use the +job/sumset command, or set that parameter.},11110*,{@pemit %#=That job is locked. It cannot be modified until it is unlocked.},111110*,{@pemit %#=[u(%q0/ERROR_%1%q2)]},{@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)]'s [ucstr(%1)] parameter updated by %n.;&%q3 %q0=%q1;@trigger %va/TRIG_ADD=%q0,[ucstr(%1)] parameter updated to '%2',%#,SUM}
&CMD_JOBS/CREDITS here=$+jobs/credits:@pemit %#=[u(%va/FN_HEADER,Anomaly Jobs)]%r%rVersion: [u(%va/VERSION)][space(5)]Release: [u(%va/RELEASE)]%r%rAuthor: [u(%va/CREDITS)]%r%rMaintainer: [u(%va/MAINTAINER)]%r%r[u(%va/LICENSE)]%r%r[u(%va/FN_FOOTER)]
&FIL_GOING Job Database <JD>=[not(default(%0/GOING,0))]
&FN_BUCKETNAME Job Database <JD>=[ifelse(get(%0/GOING),GOING,ifelse(isdbref(parent(%0)),name(parent(%0)),ERROR))]
&TRIG_DESTROY Job Database <JD>=&going %0=1;@wait 60={@swi get(%0/GOING)=1,{@parent %0;@dest/instant %0}}
@swi first(version())=RhostMUSH,{&TRIG_MAIL Job Tracker=mail %[remove%(%%0,owner%(me%)%)%]=%%1//%%2},{&TRIG_MAIL Job Tracker=@mail/quick %[remove%(%%0,owner%(me%)%)%]/%%1=%%2}
@swi first(version())=RhostMUSH,{&FN_WIZONLY Job Database <JD>=%[gte%(bittype%(%%0%),5%)%]},{&FN_WIZONLY Job Database <JD>=%[hasflag%(%%0,WIZARD%)%]}
@swi first(version())=RhostMUSH,{&FN_STAFFALL Job Database <JD>=%[gte%(bittype%(%%0%),2%)%]},{&FN_STAFFALL Job Database <JD>=%[orflags%(%%0,WZ%)%]}

@@ -------------------------------------------------------------------
@@ Version/Etc
@@
@@ -------------------------------------------------------------------
&CREDITS Job Database <JD>=Starfleet@Anomaly (eye1movies@aol.com)
&MAINTAINER Job Database <JD>=Halmar@Gamma One (grey419@gmail.com)
&LICENSE Job Database <JD>=Contributors: Firestorm@Ephemera, Grey@Anomaly, Ian@MUX%r%rYou may port this code to any game provided that these credits remain intact. Please report any and all bugs, feedback or whatnot to the email address provided above. The most recent version of this code can be found at project's home: http://code.google.com/p/anomalyjobs/
&RELEASE Job Database <JD>=Jan 9, 2007
&VERSION Job Database <JD>=v5.2
&VERSION Job Parent Object <JPO>=v5.2
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Upgrade Complete.
