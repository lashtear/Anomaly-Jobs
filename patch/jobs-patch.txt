@pemit %#=[ansi(hc,ANOMALY JOBS:)] Working. Please wait.

@@ ===============================================================================

@@ 

@@ Anomaly Jobs

@@ Superior Task Tracking Technology

@@ Version 5.2 PATCH from Version 5.1 9 Jan 2007

@@

@@    Written by: Starfleet @ Anomaly (eye1movies@aol.com)

@@ Maintained by: Halmar@Gamma One (grey419@gmail.com)

@@  Contributors: Firestorm @ Ephemera (+myjobs, /tags)

@@                Ian @ MUX (Pies)

@@

@@ Platforms supported: MUX 2.x, MUSH 3

@@ Requirements: Myrddin's BBS, @mail system, Jobs 5.1

@@

@@ This code is provided as-is and expresses no guarantee or warranty. Use it

@@ entirely at your own risk. Author is not liable for any damages, real or

@@ implied. It is available free to benefit the online text game community at

@@ large.

@@

@@ ===============================================================================

@@ Installation instructions

@@

@@ DO NOT run this script if you have renamed any of the Job objects. It won't

@@ work. The default object names are:

@@

@@             Job Database <JD>

@@             Job Global Object <JGO>

@@             Job Parent Object <JPO>

@@             Job Tracker

@@ 

@@ Further, the Job Database <JD>, Job Parent Object <JPO> and Job Tracker must

@@ be in the Job Global Object <JGO>'s inventory.

@@ 

@@ BE SURE TO READ ALL OF THIS DOCUMENT, as there are configuration options that

@@ you may want to alter.

@@

@@ This installation file requires no unformatting or alteration of any kind. 

@@ Simply quote it into your favorite client, and it will tidy everything up on 

@@ its own.

@@

@@

@@ ===============================================================================

@@

@fo me={@tel [search(object=Job Global Object <JGO>)]}

&CMD_BUCKET/SET Job Global Object <JGO>=$+bucket/set */*=*:@switch [setq(0,locate(%vc,%0,i))][and(u(%va/HAS_ACCESS,%#),u(%va/CONFIG_ACCESS,%#),u(%q0/ACCESS_%1,%#))][isdbref(%q0)][hasattrp(%q0,ACCESS_%1)][u(%q0/PROCESS_%1,%2,%q0,%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no bucket by that name. See '[ansi(h,+buckets)]' for a list of valid buckets.},110*,{@pemit %#='%1' is not a valid parameter. Valid parameters for [name(%q0)] are [u(%va/FN_PRETTY,map(%va/MAP_PARAMS,lattr(%vc/PROCESS_*)))].},1110*,{@pemit %#=[u(%q0/ERROR_%1%q2)]},{@pemit %#=[name(%q0)]'s [ucstr(%1)] successfully updated to: '%2'.;&%q3 %q0=%q1}

&CMD_JOB/APPROVE here=$+job/approve *=*:@switch [setq(0,locate(%va,Job %0,i))][isdbref(%q0)][u(%va/HAS_ACCESS,%#)][u(%va/APPROVE_ACCESS,%#)][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=There is no job by that number.},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have approved job #%0, adding the comments: %1;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been approved by %n.;@trigger %va/TRIG_ADD=%q0,[strtrunc(%1,get(%va/BUFFER))],%#,APR;@trigger [parent(%q0)]/HOOK_APPROVE=%q0,%#;@trigger %va/TRIG_DESTROY=%q0}

&CMD_JOB/CLONE Job Global Object <JGO>=$+job/clone *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You do not have access to that job.},{@pemit [setq(1,inc(get(%va/JOBS_NUM)))]%#=Job copied as Job %q1.;&JOBS_NUM %va=%q1;@clone %q0=Job %q1;@pemit me=[setq(2,num(Job %q1))];@tel %q2=%va;@trigger %va/TRIG_ADD=%q2,Cloned job.,%#,CLN,%q0;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 Cloned by %n. New job is %q1.}

&CMD_JOB/COMPLETE Job Global Object <JGO>=$+job/complete *=*:@switch [u(%va/COMPLETE_ACCESS,%#)][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job #. See '+jobs/all' for valid jobs.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have completed job # %0.;@trigger %va/TRIG_ADD=%q0,[strtrunc(%1,get(%va/BUFFER))],%#,COM;@trigger %q0/HOOK_COMPLETE=%q0,%#;@trigger %vb/TRIG_COMPLETE=%0,%#,%1,[parent(%q0)];@trigger %va/TRIG_APPROVE=%q0}

&CMD_JOB/DELETE Job Global Object <JGO>=$+job/delete *:@switch [or(u(%va/DELETE_ACCESS,%#),u(%va/FN_WIZONLY,%#),switch(%#,%va,1,0))][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have deleted job # %0.;@trigger %va/TRIG_ADD=%q0,Job %0 Deleted,%#,DEL;@trigger [parent(%q0)]/HOOK_DELETE=%q0,%#;@trigger %va/TRIG_DESTROY=%q0}

&CMD_JOB/DENY Job Global Object <JGO>=$+job/deny *=*:@switch [or(u(%va/DENY_ACCESS,%#),u(%va/FN_STAFFALL,%#))][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You cannot access that job.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have denied job #%0.;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been denied by %n.;@trigger %va/TRIG_ADD=%q0,[strtrunc(%1,get(%va/BUFFER))],%#,DNY;@trigger [parent(%q0)]/HOOK_DENY=%q0,%#;@trigger %vb/TRIG_DENY=%0,%#,%1,[get(%q0/TITLE)];@trigger %va/TRIG_DESTROY=%q0}

&CMD_JOB/DUE2 Job Global Object <JGO>=$+job/due *=*/*/*:@switch[u(%va/HAS_ACCESS,%#)][isdbref(setr(0,locate(%va,Job %0,i)))][setq(1,convtime(XXX[switch([rjust(%1,2,0)],01,Jan,02,Feb,03,Mar,04,Apr,05,May,06,Jun,07,Jul,08,Aug,09,Sep,10,Oct,11,Nov,12,Dec)] [rjust(%2,2,0)] 23:59:00 [switch(strlen(%3),2,20[rjust(%3,2,0)],%3)]))][gt(%q1,0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=Invalid date. Use date formatting as 'MM/DD/YY', '[rest(time())]', 'none' to clear.},1110*,{@pemit %#=You do not have access to that job.},{@pemit %#=You have set Job Number %0's date to [convsecs(%q1)].;&DUE_ON %q0=%q1;@trigger %va/TRIG_ADD=%q0,Due on [convsecs(%q1)].,%#,DUE;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Due date for job %0 set by %n.}

&CMD_JOB/MERGE Job Global Object <JGO>=$+job/merge *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,locate(%va,Job %1,i))][setq(1,locate(%va,Job %0,i))][isdbref(%q1)][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][u(%va/FN_ACCESSCHECK,parent(%q1),%#)][setq(2,u(%q0/NUM_COMMENT))][setq(3,u(%q1/NUM_COMMENT))][and(not(u(%va/IS_LOCKED,%q0)),not(hasattrp(%q1,LOCKED)))][not(eq(%0,%1))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job number %0.},110*,{@pemit %#=There is no job number %1.},1110*,{@pemit %#=You do not have access to [name(%q0)].},11110*,{@pemit %#=You do not have access to [name(%q1)].},111110*,{@pemit %#=One of the jobs is locked. It must be unlocked before modifications can be made.},1111110*,{@pemit %#=Sort of like a Klein bottle, eh?},{@trigger %va/TRIG_ADD=%q0,Job [secure(%0)] merged into this one.,%#,MRG;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been merged into Job %1 by %n;@wait me={@dolist [lattr(%q1/COMMENT_*)]={@cpattr %q1/##=%q0/COMMENT_[get(%q0/NUM_COMMENT)];&NUM_COMMENT %q0=[inc(get(%q0/NUM_COMMENT))]};@trigger %va/TRIG_DESTROY=%q1}};@notify me

&CMD_JOB/TRANS Job Global Object <JGO>=$+job/trans *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][isdbref(setr(1,locate(%vc,%1,i)))][not(u(%va/IS_LOCKED,%q0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=There is no bucket by that name. Type '[ansi(h,+buckets)]' for a list of valid buckets.},11110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have transferred the job from [u(%va/FN_BUCKETNAME,%q0)] to [name(%q1)].;@set %q0=!going;&going %q0;@parent %q0=%q1;@trigger %va/TRIG_ADD=%q0,Transferred to [name(%q1)].,%#,TRN;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 transferred to [name(%q1)] by [name(%#)].}

&CMD_JOBS/CLEAN Job Global Object <JGO>=$+jobs/clean:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@trigger %va/TRIG_CLEAN;@pemit %#=Removing all non-player entries from Job Data.}

&CMD_MYJOB/ADD here=$+myjob/add *=*:@switch [not(haspower(%#,guest))][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][and(u(%va/IS_PUBLIC,%q0),match(get(%q0/opened_by),%#))][not(hasattr(%q0,LOCKED))]=0*,@pemit %#={This command is not available to guests.},10*,@pemit %#={That is an invalid job number.},110*,{@pemit %#=Job %0 is not yours. You can only modify your own jobs.},1110*,{@pemit %#=That job is locked and cannot be changed at this time.},{@pemit %#=Comments to job number %0 added.;@trigger %va/TRIG_ADD=%q0,%1,%#,ADD;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Comments added to job %0 by %n.}

&CMD_MYJOB/VIEW here=$+myjob *:@switch [not(haspower(%#,guest))][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][or(gt(member(get(%q0/TAGGED_FOR),%#),0),u(%va/IS_TRANSPARENT,%q0),and(get(%q0/PUBLIC),match(get(%q0/OPENED_BY),%#)))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=Job %0 is not yours. You can only view your own jobs.},{@pemit %#=[center(| [ansi(hy,View Job Number %0)] |,79,=)]%r[ulocal(%va/DISPLAY_MYHEADERS,%q0)];@dolist [trim(squish(iter(filter(%va/FIL_COMMENTS,lattr(%q0/COMMENT_*)),switch(or(u(%q0/PUBLISH),hasflag(%q0/##,no_inherit),gt(member(get(%q0/TAGGED_FOR),%#),0),strmatch(extract(get(%q0/##),3,1,|),%#)),1,##))))]=@pemit %#={[repeat(-,79)]%r[ansi(h,[extract(get(%q0/##),4,1,|)] added on [convsecs(extract(get(%q0/##),2,1,|))]:)] [edit(last(get(%q0/##),|),@@PIPE@@,|)]};@wait .1=@pemit %#=[repeat(=,79)]}

&CMD_JOB/SUMSET Job Global Object <JGO>=$+job/sumset */*=*:@switch [u(%va/HAS_ACCESS,%#)][isdbref(setr(0,locate(%va,Job %0,i)))][hasattrp(%q0,ACCESS_%1)][and(u(%va/CONFIG_ACCESS,%#),u(%q0/ACCESS_%1,%#))][not(u(%va/IS_LOCKED,%q0))][u(%q0/PROCESS_%1,%2,%q0,%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no such job. See '[ansi(h,+jobs)]' for a list of valid jobs.},110*,{@pemit %#='%1' is not a valid parameter. Valid parameters for [name(%q0)] are [u(%va/FN_PRETTY,map(%va/MAP_PARAMS,lattr(parent(%q0)/PROCESS_*)))].},1110*,{@pemit %#=You either can not use the +job/sumset command, or set that parameter.},11110*,{@pemit %#=That job is locked. It cannot be modified until it is unlocked.},111110*,{@pemit %#=[u(%q0/ERROR_%1%q2)]},{@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)]'s [ucstr(%1)] parameter updated by %n.;&%q3 %q0=%q1;@trigger %va/TRIG_ADD=%q0,[ucstr(%1)] parameter updated to '%2',%#,SUM}

&CMD_JOBS/CREDITS here=$+jobs/credits:@pemit %#=[u(%va/FN_HEADER,Anomaly Jobs)]%r%rVersion: [u(%va/VERSION)][space(5)]Release: [u(%va/RELEASE)]%r%rAuthor: [u(%va/CREDITS)]%r%rMaintainer: [u(%va/MAINTAINER)]%r%r[u(%va/LICENSE)]%r%r[u(%va/FN_FOOTER)]

&CMD_BUCKET/CHECK here=$+bucket/check *:@switch [isdbref(setr(0,pmatch(%0)))]=0,{@pemit %#=There is no such player.},{@pemit %#=[u(%va/FN_HEADER,Bucket Information For [name(%q0)])]%r%r%xh[ljust(Bucket,15)]%bHas Access?%xn%r[iter(lcon(%VC),[ljust(name(itext()),15)]%b[ifelse(u(%VA/fn_accesscheck,itext(),%q0),Yes,No)],%b,%r)];@pemit %#=%r[u(%va/FN_FOOTER)]}

&CHROME_READ Job Database <JD>=%r[ansi(u,[ifelse(u(%va/EDIT_ACCESS,%#),[ansi(Xh,%b[rest(%0,_)]:%b)],[ansi(Xh,%b)])]|[ansi(Xhc,%b[extract(get(%1/%0),4,1,|)])]%b|[ansi(Xhu,repeat(%b,sub(28,strlen(extract(get(%1/%0),4,1,|)))))][ifelse(and(or(u(%va/IS_PUBLISHED,%1),switch(extract(get(%1/%0),3,1,|),u(%1/OPENED_BY),1,0),hasflag(%1/%0,no_inherit)),u(%va/IS_PUBLIC,%1)),|[ansi(Xc,%b+Published+%b)][ansi(Xh,|___)],[ansi(Xhu,repeat(%b,17))])][ansi(Xhu,[convsecs(extract(get(%1/%0),2,1,|))]%b)])]%r[space(4)][edit(last(get(%1/%0),|),@@PIPE@@,|)]

&FIL_GOING Job Database <JD>=[not(default(%0/GOING,0))]

&FIL_ISPLAYER Job Database <JD>=[hastype(%0,player)]

&FIL_NOTPLAYER Job Database <JD>=[not(hastype(%0,player))]

&FN_BUCKETNAME Job Database <JD>=[ifelse(get(%0/GOING),GOING,ifelse(isdbref(parent(%0)),name(parent(%0)),ERROR))]

&FN_CLEANFIND Job Database <JD>=t(words(filter(FIL_NOTPLAYER,get(%0/%1))))

&FN_CLEANFIX Job Database <JD>=[setq(0,filter(FIL_ISPLAYER,get(%0/%1)))][ifelse(words(%q0),%q0,owner(me))]

&REPORT_BUCKETS Job Database <JD>=[localize([ulocal(FN_BARGRAPH,iter(sortby(SORTBY_NAME,lcon(%vc)),words(children(##))),15,2,16,#)])]%r[space(4)][iter(sortby(SORTBY_NAME,lcon(%vc)),mid([name(##)]%b,0,2))]%r%r[center(# of Jobs in Buckets,79)]

&TRIG_APPLY Job Database <JD>=@trigger %va/TRIG_CREATE=%0,[locate(%vc,APPS,i)],2,Application by [name(%0)],

&TRIG_CLEAN Job Database <JD>=@dolist lcon(me)={@switch [u(FN_CLEANFIND,##,OPENED_BY)][u(FN_CLEANFIND,##,ASSIGNED_TO)][u(FN_CLEANFIND,##,TAGGED_FOR)][u(FN_CLEANFIND,##,PLAYERS)][u(FN_CLEANFIND,##,WRITER)]=1????,{&OPENED_BY ##=U(FN_CLEANFIX,##,OPENED_BY)},?1???,{&ASSIGNED_TO ##=U(FN_CLEANFIX,##,ASSIGNED_TO)},??1??,{&TAGGED_FOR ##=U(FN_CLEANFIX,##,TAGGED_FOR)},???1?,{&PLAYERS ##=U(FN_CLEANFIX,##,PLAYERS)},????1,{&WRITER ##=U(FN_CLEANFIX,##,WRITER)}}

&TRIG_DESTROY Job Database <JD>=&going %0=1;@wait 60={@swi get(%0/GOING)=1,{@parent %0;@dest/instant %0}}

&WHITEBG_SKIN Job Database <JD>=1

&WHITEBG_JOBLIST Job Database <JD>=[setq(0,secure(ifelse(hasattrp(%1,JOBS),lcstr(mid(get(%1/JOBS),0,20)),get(%va/JOBS_DEFAULT))))][setq(1,ifelse(get(%0/DUE_ON),ifelse(gt(secs(),get(%0/DUE_ON)),r,switch(get(%0/PRIORITY),1,g,2,y,3,r,g)),switch(get(%0/PRIORITY),1,g,2,y,3,r)))][ifelse(u(%va/FN_ISNEW,%0,%1),[ansi(hr,*)]%b,%b%b)][ansi(%q1,[rjust([last(name(%0))],5)]%b[iter(lnum(strlen(%q0)),[u(%va/DISPLAY_[mid(%q0,##,1)],%0,%1)])])]

&WHITEBG_FOOTER Job Database <JD>=[ansi(x,switch(%0,,repeat(=,79),center(| [stripansi(%0)] |,79,=)))]

&WHITEBG_JOBSHEADER Job Database <JD>=[localize([u(FN_HEADER,Anomaly Jobs [u(VERSION)])]%r[setq(1,[secure(switch(hasattrp(%0,JOBS),1,lcstr(mid(get(%0/JOBS),0,20)),u(JOBS_DEFAULT)))])][ansi(c,*%b%b[ljust(Job#,5)][iter(lnum(strlen(%q1)),u(HEADER_[mid(%q1,##,1)]))])]%r[u(FN_BREAK)])]

&WHITEBG_HEADER Job Database <JD>=[ansi(x,switch(%0,,[repeat(=,79)],[center(| [stripansi(%0)] |,79,=)]))]

&WHITEBG_READ Job Database <JD>=[repeat(-,79)]%r[ifelse(u(%va/EDIT_ACCESS,%#),[ansi(x,%[)][ifelse(and(or(u(%va/IS_PUBLISHED,%1),switch(extract(get(%1/%0),3,1,|),u(%1/OPENED_BY),1,0),hasflag(%1/%0,no_inherit)),u(%va/IS_PUBLIC,%1)),ansi(c,[rest(%0,_)]+),ansi(c,[rest(%0,_)]-))][ansi(x,%])]%b,)][ansi(x,[extract(get(%1/%0),4,1,|)] added on [convsecs(extract(get(%1/%0),2,1,|))]:%b )][edit(last(get(%1/%0),|),@@PIPE@@,|)]

&WHITEBG_BUCKETHEADER Job Database <JD>=[u(FN_HEADER,Bucket List)]%r[ifelse(u(%va/FN_WIZONLY,%#),[ansi(c,[ljust(Name,9)][ljust(Flags,6)]%b%b[ljust(Description,30)][rjust(#Jobs,5)][rjust(Pct,5)][space(3)]C%b%bA%b%bD%b%bDue[space(3)]ARTS)],[ansi(c,[ljust(NAME,8)][ljust(Description,50)]%b[rjust(Viewing,20)])])]%r[u(FN_BREAK)]

&WHITEBG_STAFFSUM Job Database <JD>=[localize(%r[repeat(-,79)]%r[rjust(ansi(c,DB#:),10)] %0[space(10)][rjust(ansi(c,Comments:),10)] [setr(z,words(lattr(%0/COMMENT_*)))]%r%r[rjust(ansi(c,Players:),10)] %(Players contributing to this job%)%r[setq(y,setunion(iter(lattr(%0/COMMENT_*),extract(get(%0/##),4,1,|),%b,|),,|))][columns(%qy,20,|,11)][ifelse(hasattr(%0,LIST_READERS),%r[rjust(ansi(c,Readers:),10)] %(Players who have read this job in the past%)%r[setq(z,iter(get(%0/LIST_READERS),first(##,|)))][columns(map(%va/MAP_NAME,%qz,%b,|),20,|,11)],)][ifelse(hasattr(%0,TAGGED_FOR),%r[rjust(ansi(c,Tags:),10)] %(Players this job has been tagged for%)%r[columns(map(%va/MAP_NAME,get(%0/TAGGED_FOR),%b,|),20,|,11)],)]%r[rjust(ansi(c,Stats:),10)]%r[columns(iter(ifelse(hasattr(%0,LIST_STATS),sort(get(%0/LIST_STATS)),),[first(##,|)] [last(##,|)],%b,|),20,|,11)]%r)]

&WHITEBG_BANNER Job Database <JD>=[setq(0,%0)][setq(x,itemize(map(MAP_NAME,get(%q0/OPENED_BY),%b,|),|))][ljust([rjust(ansi(c,Bucket:),10)] [u(%va/FN_BUCKETNAME,%q0)],40)][rjust(ansi(c,Due On:),12)] [ifelse(get(%q0/DUE_ON),ifelse(gt(secs(),get(%q0/DUE_ON)),OVERDUE!,convsecs(get(%q0/DUE_ON))),-)]%r[ljust([rjust(ansi(c,Title:),10)] [get(%q0/TITLE)],40)][rjust(ansi(c,Status:),12)] [switch(get(%q0/PRIORITY),1,Green,2,Yellow,3,Red)] %([switch(get(%q0/STATUS),0,On Hold,1,New,2,Underway,3,25%%,4,50%%,5,75%%,6,100%%,?)]%)%r[ljust([rjust(ansi(c,Opened On:),10)] [convsecs(get(%q0/OPENED_ON))],40)][rjust(ansi(c,Assigned To:),12)] [ifelse(isdbref(get(%q0/ASSIGNED_TO)),name(get(%q0/ASSIGNED_TO)),Nobody)]%r[rjust(ansi(c,Opened By:),10)] %qx

@swi first(version())=RhostMUSH,{&TRIG_MAIL Job Tracker=mail %[remove%(%%0,owner%(me%)%)%]=%%1//%%2},{&TRIG_MAIL Job Tracker=@mail/quick %[remove%(%%0,owner%(me%)%)%]/%%1=%%2}

@swi first(version())=RhostMUSH,{&FN_WIZONLY Job Database <JD>=%[gte%(bittype%(%%0%),5%)%]},{&FN_WIZONLY Job Database <JD>=%[hasflag%(%%0,WIZARD%)%]}

@swi first(version())=RhostMUSH,{&FN_STAFFALL Job Database <JD>=%[gte%(bittype%(%%0%),2%)%]},{&FN_STAFFALL Job Database <JD>=%[orflags%(%%0,WZ%)%]}



@@ -------------------------------------------------------------------

@@ Version/Etc

@@

@@ -------------------------------------------------------------------

&CREDITS Job Database <JD>=Starfleet@Anomaly (eye1movies@aol.com)

&MAINTAINER Job Database <JD>=Halmar@Gamma One (grey419@gmail.com)

&LICENSE Job Database <JD>=Contributors: Firestorm@Ephemera, Grey@Anomaly, Ian@MUX%r%rYou may port this code to any game provided that these credits remain intact. Please report any and all bugs, feedback or whatnot to the email address provided above. The most recent version of this code can be found at project's home: http://code.google.com/p/anomalyjobs/

&RELEASE Job Database <JD>=Jan 9, 2007

&VERSION Job Database <JD>=v5.2

&VERSION Job Parent Object <JPO>=v5.2

@pemit %#=[ansi(hc,ANOMALY JOBS:)] Upgrade Complete.

