@pemit %#=[ansi(hc,ANOMALY JOBS:)] Working. Please wait.
@@ ===============================================================================
@@ 
@@ Anomaly Jobs
@@ Superior Task Tracking Technology
@@ Version 5.2 PATCH from Version 5.1 ?? Dec 2009
@@
@@    Written by: Starfleet @ Anomaly (eye1movies@aol.com)
@@ Maintained by: Halmar@Gamma One (grey419@gmail.com)
@@  Contributors: Firestorm @ Ephemera (+myjobs, /tags)
@@                Ian @ MUX (Pies)
@@
@@ Platforms supported: MUX 2.x, MUSH 3, PennMUSH, RhostMUSH
@@ Requirements: Myrddin's BBS, @mail system, Jobs 5.1
@@
@@ This code is provided as-is and expresses no guarantee or warranty. Use it
@@ entirely at your own risk. Author is not liable for any damages, real or
@@ implied. It is available free to benefit the online text game community at
@@ large.
@@
@@ ===============================================================================
@@ Installation instructions
@@
@@ DO NOT run this script if you have renamed any of the Job objects. It won't
@@ work. The default object names are:
@@
@@             Job Database <JD>
@@             Job Global Object <JGO>
@@             Job Parent Object <JPO>
@@             Job Tracker
@@ 
@@ Further, the Job Database <JD>, Job Parent Object <JPO> and Job Tracker must
@@ be in the Job Global Object <JGO>'s inventory.
@@ 
@@ BE SURE TO READ ALL OF THIS DOCUMENT, as there are configuration options that
@@ you may want to alter.
@@
@@ This installation file requires no unformatting or alteration of any kind. 
@@ Simply quote it into your favorite client, and it will tidy everything up on 
@@ its own.
@@
@@
@@ ===============================================================================
@@
@fo me={@tel [switch(first(version()),PennMUSH,lsearch(all,eobjects,\[strmatch(name(##),Job Global Object <JGO>)\]),search(object=Job Global Object <JGO>))]}
@@
@set me=quiet
@Desc here=%r[u(%va/fn_columns,sort(lattr(me/*)),18)]%r%r[center(Please do not rename this object.,79)]
@Desc Job Database <JD>=%r[u(%va/fn_columns,sort(lattr(me/*)),18)]%r%r[center(Please do not rename this object.,79)]
@Desc Job Parent Object <JPO>=%r[u(%va/fn_columns,sort(lattr(me/*)),18)]%r%r[center(Please do not rename this object.,79)]
@Desc Job Tracker=%r[u(%va/fn_columns,sort(lattr(me/*)),18)]%r%r[center(Please do not rename this object.,79)]
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting up commands.
@@
&CMD_BUCKET/ACCESS here=$+bucket/access *=*:@switch [u(%va/GIVE_ACCESS,%#)][setq(0,num(*%0))][setq(1,u(%va/FN_FIND-BUCKET,%1))][isdbref(%q0)][isdbref(%q1)][u(%va/HAS_ACCESS,%q0)][u(%va/FN_WIZONLY,%q0)]			[u(%va/FN_ACCESSCHECK,%q1,%q0)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no player by that name.},110*,{@pemit %#=There is no bucket by that name.},1110*,{@pemit %#=That player does not have +jobs access.},11111*,{@pemit %#=That player can always access all buckets.},111100*,{@pemit %#=You have given [name(%q0)] access to the [name(%q1)] bucket.;&JOBSB %q0=[ifelse(member(get(%q0/JOBSB),%q1),remove(get(%q0/JOBSB),%q1),setunion(get(%q0/JOBSB),%q1))]},{@pemit %#=You have removed [name(%q0)]'s access to the [name(%q1)] bucket.;&JOBSB %q0=[ifelse(member(get(%q0/JOBSB),%q1),remove(get(%q0/JOBSB),%q1),setunion(get(%q0/JOBSB),%q1))]}
&CMD_BUCKET/CHECK here=$+bucket/check *:@switch [isdbref(setr(0,pmatch(%0)))]=0,{@pemit %#=There is no such player.},{@pemit %#=[u(%va/FN_HEADER,Bucket Information For [name(%q0)])]%r%r[ansi(h,[ljust(Bucket,15)]%bHas Access?)]%r[iter(lcon(%VC),[ljust(name(itext(0)),15)]%b[ifelse(u(%VA/fn_accesscheck,itext(0),%q0),Yes,No)],%b,%r)];@pemit %#=%r[u(%va/FN_FOOTER)]}
&CMD_BUCKET/CREATE here=$+bucket/create *=*:@switch [setq(0,u(%va/FN_FIND-BUCKET,%0))][u(%va/FN_WIZONLY,%#)][not(isdbref(%q0))][not(gt(strlen(%0),5))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is already a bucket by that name.},110*,{@pemit %#=The name of a bucket is limited to five letters.},{@pemit %#=You have created a bucket named [ucstr(%0)].[setq(0,create(ucstr(%0),10))] Be sure to change %q0/ACCESS to establish who can access the bucket. Presently, it is set to 1, which means that anyone who can access +jobs can access the bucket.;@tel %q0=%vc;@parent %q0=%vc;@desc %q0=[secure(%1)];@set %q0=inherit !safe !halted !no_command;&ACCESS %q0=1;@lock/speech %q0=ACCESS/1}
@switch [first(version())]=PennMUSH,{@edit here/CMD_BUCKET/CREATE=inherit !safe !halted,wizard !safe !halt},TinyMUSH,{@edit here/CMD_BUCKET/CREATE=!no_command,commands};
&CMD_BUCKET/DELETE here=$+bucket/delete *:@switch [u(%va/FN_WIZONLY,%#)][setq(0,u(%va/FN_FIND-BUCKET,%0))][isdbref(%q0)][eq(words(children(%q0)),0)][not(hasflag(%q0,SAFE))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no bucket by that name.},110*,{@pemit %#=The bucket is not empty, and cannot be deleted.},1110*,{@pemit %#=That bucket is required for the system to operate properly.},{@pemit %#=You have deleted the bucket named [ucstr(%0)].;@set %q0=DESTROY_OK;@nuke %q0;@dolist [switch(first(version()),PennMUSH,lsearch(all,type,player),search(type=player))]={&JOBSH ##=[remove(get(##/JOBSH),%q0)];&JOBSB ##=[remove(get(##/JOBSB),%q0)]}}
&CMD_BUCKET/HELP here=$+bucket/help *:@switch [setq(0,u(%va/FN_FIND-BUCKET,%0))][u(%va/FN_ACCESSCHECK,%q0,%#)][isdbref(%q0)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid bucket. Type '[ansi(h,+buckets)]' for a list of valid buckets.},{@pemit %#=[u(%va/FN_HEADER,Bucket Help For [name(%q0)])];@pemit %#=[u(%q0/HELP)];@pemit %#=[u(%va/FN_FOOTER)]}
&CMD_BUCKET/INFO here=$+bucket/info *:@switch [u(%va/FN_STAFFALL,%#)][setq(0,u(%va/FN_FIND-BUCKET,%0))][isdbref(%q0)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no bucket by that name.},{@pemit %#=[u(%va/FN_HEADER,Bucket Information For [name(%q0)])]%r[u(%va/DISPLAY_BUCKET)];@pemit %#=[u(%va/DISPLAY_BUCKET2)];@pemit %#=[u(%va/FN_FOOTER)]}
&CMD_BUCKET/MONITOR here=$+bucket/monitor *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-BUCKET,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,%q0,%#)][u(%va/FN_MONITORCHECK,%q0,%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no bucket by that name.},110*,{@pemit %#=You do not have access to that bucket.},1110*,{@pemit %#=You have added bucket [name(%q0)] to your monitored list.;&JOBSH %#=[ifelse(u(%va/fn_hasattr,%q0,HIDDEN),setunion(get(%#/JOBSH),%q0),remove(get(%#/JOBSH),%q0))]},{@pemit %#=You have removed bucket [name(%q0)] from your monitored list.;&JOBSH %#=[ifelse(u(%va/fn_hasattr,%q0,HIDDEN),remove(get(%#/JOBSH),%q0),setunion(get(%#/JOBSH),%q0))]}
&CMD_BUCKET/SET here=$+bucket/set */*=*:@switch [setq(0,u(%va/FN_FIND-BUCKET,%0))][and(u(%va/HAS_ACCESS,%#),u(%va/CONFIG_ACCESS,%#),u(%q0/ACCESS_%1,%#))][isdbref(%q0)][u(%va/fn_hasattrp,%q0,ACCESS_%1)][u(%q0/PROCESS_%1,%2,%q0,%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no bucket by that name. See '[ansi(h,+buckets)]' for a list of valid buckets.},110*,{@pemit %#='%1' is not a valid parameter. Valid parameters for [name(%q0)] are [u(%va/FN_ITEMIZE,map(%va/MAP_PARAMS,lattr(%vc/PROCESS_*)))].},1110*,{@pemit %#=[u(%q0/ERROR_%1%q2)]},{@pemit %#=[name(%q0)]'s [ucstr(%1)] successfully updated to: '%2'.;&%q3 %q0=%q1}
&CMD_BUCKETS here=$+buckets:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=[u(%va/FN_BUCKETHEADER)];think [setq(x,sortby(%va/SORTBY_NAME,lcon(%vc)))];@pemit %#=[iter(filter(%va/FIL_ACCESS,%qx),u(%va/FN_BUCKETLIST,##),%B,%R)];@pemit %#=[u(%va/FN_FOOTER,[ifelse(u(%va/FN_STAFFALL,%#),ansi(hy,V=Viewing H=Hidden P=Published M=Myjobs L=Locked S=Summary),)])]}
&CMD_BUG here=$+bug *=*:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission Denied.},{@pemit %#=You have notified production staff of the [secure(u(%va/fn_strtrunc,%0,30))] bug, with the details '[secure(u(%va/fn_strtrunc,%1,get(%va/BUFFER)))]';@trigger %va/TRIG_CREATE=%#,locate(%vc,CODE,i),3,BUG: [u(%va/fn_strtrunc,%0,30)],[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],,,5}
&CMD_JOB/ACT here=$+job/act *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][or(u(%va/FN_STAFFALL,%#),u(%va/FN_ACCESSCHECK,parent(%q0),%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list by type.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=[u(%va/FN_HEADER,View Job Number %0)]%r[ulocal(%va/FN_BANNER,%q0)]%r[u(%va/FN_BREAK)];@dolist sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))={@pemit %#=[rest(convsecs(extract(get(%q0/##),2,1,|)))]%b[first(get(%q0/##),|)]%b[ljust(u(%va/fn_strtrunc,extract(get(%q0/##),4,1,|),15),15)]%b[ljust(u(%va/fn_strtrunc,u(%va/fn_trim,edit(edit(edit(last(get(%q0/##),|),@@PIPE@@,|),%r,%b),%t,%b),b),35),35)]};@wait 0={@pemit %#=[u(%va/FN_FOOTER)]};}
&CMD_JOB/ADD here=$+job/add *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is an invalid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=Comments to job number %0 added.;&tagged_for %q0=[setdiff(get(%q0/tagged_for),%#)];@trigger %va/TRIG_ADD=%q0,%1,%#,ADD;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Comments added to job %0 by %n.}
&CMD_JOB/ALL here=$+job/all *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=[u(%va/FN_READERS,%q0,%#)][u(%va/FN_HEADER,View [name(%q0)])]%r[ulocal(%va/FN_BANNER,%q0,%#)][ifelse(u(%va/fn_hasattrp,%q0,SUMMARY),[ulocal(%va/FN_SUMMARY,%q0,%#)],)];@dolist [sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))]={@pemit %#=[u(%va/FN_READJOB,##,%q0)]};@wait 0={@pemit %#=[u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0))]};}
&CMD_JOB/APPROVE here=$+job/approve *=*:@switch [setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/HAS_ACCESS,%#)][u(%va/APPROVE_ACCESS,%#)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=There is no job by that number.},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have approved job #%0, adding the comments: %1;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been approved by %n.;@trigger %va/TRIG_ADD=%q0,[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],%#,APR;@trigger [parent(%q0)]/HOOK_APPROVE=%q0,%#;@trigger %va/TRIG_DESTROY=%q0}
&CMD_JOB/ASSIGN here=$+job/assign *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(1,num(*%1))][setq(2,switch(ucstr(%1),NONE,1,0))][or(isdbref(%q1),%q2)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))][ifelse(%q2,1,u(%va/FN_ACCESSCHECK,parent(%q0),%q1))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no player by that name.},110*,{@pemit %#=That is not a valid job number.},1110*,{@pemit %#=You do not have access to that job.},11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},111110*,{@pemit %#=[name(%q1)] does not have access to that bucket.},{@pemit %#=You have assigned Job number %0 to [ifelse(isdbref(%q1),name(%q1),nobody)].;&ASSIGNED_TO %q0=[ifelse(%q2,,%q1)];@trigger %va/TRIG_ADD=%q0,[ifelse(%q2,Assignment removed.,Assigned to [name(%q1)])].,%#,ASN,%q1;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been assigned to [ifelse(%q2,nobody,name(%q1))] by %n.}
&CMD_JOB/CHECKOUT here=$+job/checkout *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,secure(%0)))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))][not(u(%va/FN_HASATTR,%q0,CHECKOUT))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)].},11110*,{@pemit %#=That job is already checked out.},{@pemit %#=[u(%va/FN_READERS,%q0,%#)]You have checked out [name(%q0)]. Nobody but you will be able to modify it until you check it back in.;&CHECKOUT %q0=%# [secs()];@trigger %va/TRIG_ADD=%q0,Checked out by [name(%#)].,%#,CKO;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 checked out by [name(%#)].}
&CMD_JOB/CHECKIN here=$+job/checkin *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,secure(%0)))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][u(%va/FN_HASATTR,%q0,CHECKOUT)][or(u(%va/FN_WIZONLY,%#),switch(first(get(%q0/CHECKOUT)),%#,1,0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is not checked out.},11110*,{@pemit %#=You cannot check that job back in.},{@pemit %#=[u(%va/FN_READERS,%q0,%#)]You have checked [name(%q0)] back in.;&CHECKOUT %q0=;@trigger %va/TRIG_ADD=%q0,Checked in by [name(%#)].,%#,CKI;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 checked in by [name(%#)].}
&CMD_JOB/CLONE here=$+job/clone *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You do not have access to that job.},{@pemit [setq(1,inc(get(%va/JOBS_NUM)))]%#=Job copied as Job %q1.;&JOBS_NUM %va=%q1;@clone %q0=Job %q1;@pemit me=[setq(2,num(Job %q1))];@tel %q2=%va;@trigger %va/TRIG_ADD=%q2,Cloned job.,%#,CLN,%q0;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 cloned by %n. New job is %q1.}
&CMD_JOB/COMPLETE here=$+job/complete *=*:@switch [u(%va/COMPLETE_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job #. See '+jobs/all' for valid jobs.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have completed job # %0.;@trigger %va/TRIG_ADD=%q0,[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],%#,COM;@trigger %q0/HOOK_COMPLETE=%q0,%#;@trigger %vb/TRIG_COMPLETE=%0,%#,%1,[parent(%q0)];@trigger %va/TRIG_APPROVE=%q0;@trigger %va/TRIG_DESTROY=%q0}
&CMD_JOB/CREATE here=$+job/create */*=*:@switch [u(%va/CREATE_ACCESS,%#)][setq(0,u(%va/FN_FIND-BUCKET,%0))][u(%va/FN_ACCESSCHECK,%q0,%#)][isdbref(%q0)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=You cannot access that bucket.},110*,{@pemit %#=There is no bucket by that name. Type '[ansi(h,+buckets)]' to get a list of buckets.},{@pemit [setq(1,inc(get(%va/JOBS_NUM)))]%#=You have created job number %q1 entitled '[u(%va/fn_strtrunc,%1,30)]'.;@trigger %va/TRIG_CREATE=%#,%q0,1,[u(%va/fn_strtrunc,%1,30)],[u(%va/fn_strtrunc,%2,u(%va/BUFFER))],,,1}
&CMD_JOB/DELETE here=$+job/delete *:@switch [or(u(%va/DELETE_ACCESS,%#),u(%va/FN_WIZONLY,%#),switch(%#,%va,1,0))][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have deleted job # %0.;@trigger %va/TRIG_ADD=%q0,Job %0 Deleted,%#,DEL;@trigger [parent(%q0)]/HOOK_DELETE=%q0,%#;@trigger %va/TRIG_DESTROY=%q0}
&CMD_JOB/DENY here=$+job/deny *=*:@switch [or(u(%va/DENY_ACCESS,%#),u(%va/FN_STAFFALL,%#))][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You cannot access that job.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have denied job #%0.;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been denied by %n.;@trigger %va/TRIG_ADD=%q0,[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],%#,DNY;@trigger [parent(%q0)]/HOOK_DENY=%q0,%#;@trigger %vb/TRIG_DENY=%0,%#,%1,[get(%q0/TITLE)];@trigger %va/TRIG_DESTROY=%q0}
&CMD_JOB/DUE here=$+job/due *=*:@switch [not(eq(words(%1,/),3))][u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][switch(lcstr(%1),none,2,switch(ifelse(eq(words(%1),4),convtime(XXX %1),convtime(%1)),-1,0,1))]=0*,{@@},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=That is not a valid job number.},1110*,{@pemit %#=You do not have access to that job.},11110*,{@pemit %#=Invalid date. Use date formatting as '[rest(time())]'.},11112*,{@pemit %#=You have cleared Job Number %0's date.;&DUE_ON %q0=;@trigger %va/TRIG_ADD=%q0,Due date cleared.,%#,DUE;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Due date cleared by %n for job [secure(%0)].},{@pemit %#=You have set Job Number %0's date to %1.;&DUE_ON %q0=[ifelse(eq(words(%1),4),convtime(XXX %1),convtime(%1))];@trigger %va/TRIG_ADD=%q0,Due on [secure(%1)].,%#,DUE,[secure(%1)];@trigger %va/TRIG_BROADCAST=[parent(%q0)],Due date for job %0 set by %n.}
&CMD_JOB/DUE2 here=$+job/due *=*/*/*:@switch [u(%va/HAS_ACCESS,%#)][isdbref(setr(0,u(%va/FN_FIND-JOB,%0)))][setq(1,convtime(XXX [switch([rjust(%1,2,0)],01,Jan,02,Feb,03,Mar,04,Apr,05,May,06,Jun,07,Jul,08,Aug,09,Sep,10,Oct,11,Nov,12,Dec)] [rjust(%2,2,0)] 23:59:00 [switch(strlen(%3),2,20[rjust(%3,2,0)],%3)]))][gt(%q1,0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=Invalid date. Use date formatting as 'MM/DD/YY', '[rest(time())]', 'none' to clear.},1110*,{@pemit %#=You do not have access to that job.},{@pemit %#=You have set Job Number %0's date to [convsecs(%q1)].;&DUE_ON %q0=%q1;@trigger %va/TRIG_ADD=%q0,Due on [convsecs(%q1)].,%#,DUE;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Due date for job %0 set by %n.}
&CMD_JOB/EDIT here=$+job/edit */*=*/*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][u(%va/EDIT_ACCESS,%#)][isdbref(%q0)][setq(1,get(%q0/COMMENT_%1))][switch(first(%q1,|),ADD,1,CRE,1,0)][not(u(%va/IS_LOCKED,%q0,%#))][switch(extract(%q1,3,1,|),%#,1,u(%va/FN_WIZONLY,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=That is an invalid job number.},1110*,{@pemit %#=You cannot modify that entry.},11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},111110*,{@pemit %#=You can only edit entries that belong to you.},{&COMMENT_%1 %q0=[extract(%q1,1,4,|)]|[edit(last(%q1,|),edit(%2,|,@@PIPE@@),edit(%3,|,@@PIPE@@))];@pemit %#=Edited: [last(u(%q0/COMMENT_%1),|)];@trigger %va/TRIG_ADD=%q0,Comment %1 edited by %n.,%#,EDT,[secure(%1)];@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 edited by %n.}
&CMD_JOB/ESC here=$+job/esc *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][setq(1,match(green yellow red,%1*))][setq(2,extract(GREEN YELLOW RED,%q1,1))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][gt(%q1,0)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That is not a valid escalation code. Valid codes are red, yellow, and green.},11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=You have escalated job # %0 to %q2 status.;&PRIORITY %q0=%q1;@trigger %va/TRIG_ADD=%q0,Priority To %q2.,%#,ESC,ucstr(secure(%1));@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)] set to %q2 priority by %n.}
&CMD_JOB/LAST here=$+job/last *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list by type.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=[u(%va/FN_HEADER,View [name(%q0)])]%r[ulocal(%va/FN_BANNER,%q0)];@dolist [extract(setr(1,filter(%va/FIL_COMMENTS,sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*)))),ifelse(lt(sub(words(%q1),%1),1),1,inc(sub(words(%q1),%1))),inc(%1))]={@pemit %#=[u(%va/FN_READJOB,##,%q0)]};@wait 0={@pemit %#=[u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0))]};}
&CMD_JOB/LOCK here=$+job/lock *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/fn_hasattr,%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is an invalid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is already locked.},{@pemit %#=You have locked job %0. No further modifications can be made to this job until it is unlocked.;&LOCKED_BY %q0=%#;&LOCKED %q0=1;@trigger %va/TRIG_ADD=%q0,Locked by %n.,%#,LOK;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 locked by %n.}
&CMD_JOB/LOG here=$+job/log *:@switch [and(u(%va/HAS_ACCESS,%#),u(%va/LOG_ACCESS,%#))][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][or(u(%va/FN_STAFFALL,%#),u(%va/ACCESS_[parent(%q0)],%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list by type.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=Logging Job %0 to game/log[switch(first(version()),PennMUSH,/command.log,s/M-[get(%q0/LOGFILE)].log%rNote that if the log file does not exist, then it did not get logged.)];@trigger %va/TRIG_LOG=%q0,%#}
&CMD_JOB/MAIL here=$+job/mail *=*:@switch [setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/HAS_ACCESS,%#)][u(%va/MAIL_ACCESS,%#)][u(%va/IS_PUBLIC,%q0)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=There is no job by that number.},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=+job/mail cannot be used on the job because the bucket in which it is stored is not set PUBLIC %(+myjobs-accessible%).},11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=You have mailed [u(%va/FN_PLAYERLIST,%q0)] about job #%0, with the comments: %1;@trigger %va/TRIG_ADD=%q0,[u(%va/fn_strtrunc,ansi(h,Mail sent to [u(%va/FN_PLAYERLIST,%q0)]:)%r%r%1,get(%va/BUFFER))],%#,MAI;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Mail sent about job #%0 by %n.}
&CMD_JOB/MERGE here=$+job/merge *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%1))][setq(1,u(%va/FN_FIND-JOB,%0))][isdbref(%q1)][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][u(%va/FN_ACCESSCHECK,parent(%q1),%#)][setq(2,u(%q0/NUM_COMMENT))][setq(3,u(%q1/NUM_COMMENT))][and(not(u(%va/IS_LOCKED,%q0,%#)),not(u(%va/fn_hasattrp,%q1,LOCKED)))][not(eq(%0,%1))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job number %0.},110*,{@pemit %#=There is no job number %1.},1110*,{@pemit %#=You do not have access to [name(%q0)].},11110*,{@pemit %#=You do not have access to [name(%q1)].},111110*,{@pemit %#=One of those jobs is locked or checked out.},1111110*,{@pemit %#=Sort of like a Klein bottle, eh?},{@trigger %va/TRIG_ADD=%q0,Job [secure(%0)] merged into this one.,%#,MRG;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been merged into Job %1 by %n;@wait 0={@dolist [sortby(%va/SORTBY_COMMENTS,lattr(%q1/COMMENT_*))]={@cpattr %q1/##=%q0/COMMENT_[get(%q0/NUM_COMMENT)];&NUM_COMMENT %q0=[inc(get(%q0/NUM_COMMENT))]};@trigger %va/TRIG_DESTROY=%q1}};
&CMD_JOB/NAME here=$+job/name *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=You have changed the name of Job %0 to %1.;&TITLE %q0=[secure(%1)];@trigger %va/TRIG_ADD=%q0,Renamed to '[secure(%1)]'.,%#,NAM;@trigger %va/TRIG_BROADCAST=[parent(%q0)],%n has renamed job %0.}
&CMD_JOB/NEW here=$+job/new *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][setq(1,default(%#/LAST_CONN,0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list jobs by type.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=[u(%va/FN_HEADER,View Job Number %0)]%r[ulocal(%va/FN_BANNER,%q0)][ifelse(u(%va/fn_hasattrp,%q0,SUMMARY),[ulocal(%va/FN_SUMMARY,%q0)],)];@dolist [filter(%va/FIL_NEWCOMMENTS[default(%#/JOBSN,0)],sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*)))]={@pemit %#=[u(%va/FN_READJOB,##,%q0)]};@wait 0={@pemit %#=[ifelse(u(%va/IS_LOCKED,%q0,%#),u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0)),[u(%va/FN_FOOTER,New Activity on Job %0 since [convsecs(%q1)])])][u(%va/FN_READERS,%q0,%#)]};}
&CMD_JOB/PUBLISH here=$+job/publish *:@switch [eq(words(%0,=),1)][setq(0,u(%va/FN_FIND-JOB,%0))][u(%va/HAS_ACCESS,%#)][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][u(%va/fn_hasattrp,%q0,PUBLIC)][not(u(%va/IS_LOCKED,%q0,%#))][eq(u(%q0/PUBLISH),1)]=0*,@@,10*,{@pemit %#=Permission denied.},110*,{@pemit %#=There is no job by that number.},1110*,{@pemit %#=You do not have access to that job.},11110*,{@pemit %#=That job is not in a bucket that is accessible to +myjobs, so publication is moot.},111110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},1111110*,{@pemit %#=You have published Job %0.;&PUBLISH %q0=1;@trigger %va/TRIG_ADD=%q0,Published by %n.,%#,PUB;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 published by %n.},{@pemit %#=Job %0 will now no longer be published.;&PUBLISH %q0=0;@trigger %va/TRIG_ADD=%q0,Unpublished by %n.,%#,UNP;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 unpublished by %n.}
&CMD_JOB/PUBLISH2 here=$+job/publish *=*:@switch [setq(0,u(%va/FN_FIND-JOB,%0))][and(u(%va/HAS_ACCESS,%#),u(%va/EDIT_ACCESS,%#))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))][u(%va/IS_PUBLIC,%q0)][u(%va/fn_hasattrp,%q0,COMMENT_%1)][hasflag(%q0/COMMENT_%1,no_inherit)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},11110*,{@pemit %#=That job is not in a bucket that is accessible to +myjobs, so publication is moot.},111110*,{@pemit %#=That is not a valid comment number.},1111110*,{@pemit %#=You have published Comment %1 on Job %0.;@set %q0/COMMENT_%1=no_inherit;@trigger %va/TRIG_ADD=%q0,Comment [secure(%1)] published by %n.,%#,PUB;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job [secure(%0)]/Comment [secure(%1)] published by %n.},{@pemit %#=Job %0/Comment %1 will no longer be published.;@set %q0/COMMENT_%1=!no_inherit;@trigger %va/TRIG_ADD=%q0,Comment [secure(%1)] Unpublished by %n.,%#,UNP;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job [secure(%0)]/Comment [secure(%1)] unpublished by %n.}
&CMD_JOB/QUERY here=$+job/query */*=*:@switch [and(u(%va/HAS_ACCESS,%#),u(%va/MAIL_ACCESS,%#))]=0*,{@pemit %#=Permission denied.},{@switch [map(%va/MAP_ISPLAYER,%0)]=*0*,{@pemit %#=There is a problem with the player list.},{@pemit %#=[setq(a,map(%va/MAP_PMATCH,%0,%b,|))]You have sent a query to '%0' regarding '%1'.;@trigger %va/TRIG_CREATE=%#,locate(%vc,QUERY,i),2,[u(%va/fn_strtrunc,secure(%1),30)],Queried [u(%va/FN_ITEMIZE,map(%va/MAP_NAME,%qa,|,|),|)]:%r%r[u(%va/fn_strtrunc,%2,get(%va/BUFFER))],[edit(%qa,|,%b)],,0}}
&CMD_JOB/SET here=$+job/set *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][setq(2,dec(member(setr(a,HOLD NEW UNDERWAY 25 50 75 100),ucstr(%1))))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][and(isnum(%q2),gt(%q2,-1),lt(%q2,7))][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That is an invalid setting. Valid job settings are:%r[u(%va/FN_ITEMIZE,lcstr(%qa))].},11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=You set Job Number [secure(%0)] to [setq(1,switch(%q2,0,ON HOLD,1,NEW,2,UNDERWAY,3,1/4 COMPLETE,4,1/2 COMPLETE,5,3/4 COMPLETE,COMPLETE))]%q1 status.;&STATUS %q0=%q2;@trigger %va/TRIG_ADD=%q0,Set to %q1.,%#,STA;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Status set to %q1 on Job %0.}
&CMD_JOB/SOURCE here=$+job/source *=*:@switch [setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/HAS_ACCESS,%#)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))][setq(1,map(%va/MAP_SOURCE,secure(%1)))][setq(2,member(%q1,#-1))][ifelse(gt(%q2,0),0,1)]=0*,{@pemit %#=There is no job by that number.},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},11110*,{@pemit %#='[extract(secure(%1),%q2,1)]' is not a valid player.},{&opened_by %q0=%q1;@pemit %#=You have set job #%0 to have a source of [u(%va/FN_PLAYERLIST,%q0)].;@trigger %va/TRIG_ADD=%q0,Source changed to [u(%va/FN_PLAYERLIST,%q0)].,%#,SRC;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 source changed by %n.}
&CMD_JOB/SUMMARY here=$+job/summary *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=[u(%va/FN_HEADER,View [name(%q0)])]%r[ulocal(%va/FN_BANNER,%q0)][ifelse(u(%va/fn_hasattrp,%q0,SUMMARY),[ulocal(%va/FN_SUMMARY,%q0)],)][ifelse(u(%va/FN_WIZONLY,%#),[ulocal(%va/FN_STAFFSUM,%q0)],)];@wait 0={@pemit %#=[u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0))]};}
&CMD_JOB/SUMSET here=$+job/sumset */*=*:@switch [u(%va/HAS_ACCESS,%#)][isdbref(setr(0,u(%va/FN_FIND-JOB,%0)))][u(%va/fn_hasattrp,%q0,ACCESS_%1)][and(u(%va/CONFIG_ACCESS,%#),u(%q0/ACCESS_%1,%#))][not(u(%va/IS_LOCKED,%q0,%#))][u(%q0/PROCESS_%1,%2,%q0,%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no such job. See '[ansi(h,+jobs)]' for a list of valid jobs.},110*,{@pemit %#='%1' is not a valid parameter. Valid parameters for [name(%q0)] are [u(%va/FN_ITEMIZE,map(%va/MAP_PARAMS,lattr(parent(%q0)/PROCESS_*)))].},1110*,{@pemit %#=You either can not use the +job/sumset command, or set that parameter.},11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},111110*,{@pemit %#=[u(%q0/ERROR_%1%q2)]},{@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)]'s [ucstr(%1)] parameter updated by %n.;&%q3 %q0=%q1;@trigger %va/TRIG_ADD=%q0,[ucstr(%1)] parameter updated to '%2',%#,SUM}
&CMD_JOB/TAG here=$+job/tag *:@switch [switch(strmatch(%0,*=*),1,[setq(8,secure(first(%0,=)))][setq(9,secure(rest(%0,=)))],[setq(8,secure(%0))][setq(9,%#)])][setq(7,iter(%q9,pmatch(itext(0))))][setq(6,u(%va/fn_trim,squish(iter(%q9,if(not(isdbref(pmatch(itext(0)))),I don't recognize '##' as a player.)))))][u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%q8))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is an invalid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@switch [gt(strlen(%q6),0)]=1,{@pemit %#=%q6},{@switch [strlen(setdiff(%q7,get(%q0/tagged_for)))]=0,{@pemit %#={[name(%q0)] is already tagged for the named player(s): [iter(%q7,name(##))]}},{&tagged_for %q0=[setunion(get(%q0/tagged_for),%q7)];@trigger %va/TRIG_ADD=%q0,Added tags for [setr(5,iter(%q7,name(##)))],%#,TAG,%q7;@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)] updated - tagged by %n for %q5.;@pemit %#={Job %q8 updated - tags added. Now tagged for: [iter(get(%q0/tagged_for),name(##))]}}}}
&CMD_JOB/TRANS here=$+job/trans *=*:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][isdbref(setr(1,u(%va/FN_FIND-BUCKET,%1)))][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=There is no bucket by that name. Type '[ansi(h,+buckets)]' for a list of valid buckets.},11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@pemit %#=You have transferred the job from [u(%va/FN_BUCKETNAME,%q0)] to [name(%q1)].;@set %q0=!going;&going %q0;@parent %q0=%q1;@trigger %va/TRIG_ADD=%q0,Transferred to [name(%q1)].,%#,TRN;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 transferred to [name(%q1)] by [name(%#)].}
&CMD_JOB/UNLOCK here=$+job/unlock *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][u(%va/fn_hasattrp,%q0,LOCKED)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is an invalid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is not locked.},{@pemit %#=You have unlocked job %0.;&LOCKED %q0=;&LOCKED_BY %q0=;@trigger %va/TRIG_ADD=%q0,Unlocked by %n.,%#,UNL;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 unlocked by %n.}
&CMD_JOB/UNTAG here=$+job/untag *:@switch [switch(strmatch(%0,*=*),1,[setq(8,secure(first(%0,=)))][setq(9,secure(rest(%0,=)))],[setq(8,secure(%0))][setq(9,%#)])][setq(7,iter(%q9,pmatch(##)))][setq(6,u(%va/fn_trim,squish(iter(%q9,if(not(isdbref(pmatch(##))),I don't recognize '##' as a player.)))))][u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%q8))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)][not(u(%va/IS_LOCKED,%q0,%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is an invalid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},{@switch [gt(strlen(%q6),0)]=1,{@pemit %#=%q6},{@switch [strlen(setinter(%q7,get(%q0/tagged_for)))]=0,{@pemit %#={[name(%q0)] is not tagged for any of the named player(s): [iter(%q7,name(##))]}},{&tagged_for %q0=[setdiff(get(%q0/tagged_for),%q7)];@trigger %va/TRIG_ADD=%q0,Removed tags for [setr(5,iter(%q7,name(##)))],%#,TAG;@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)] updated - untagged by %n for %q5.;@pemit %#={Job %q8 updated - tags removed. Now tagged for: [iter(get(%q0/tagged_for),name(##))]}}}}
&CMD_JOB/VIEW here=$+job *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][u(%va/FN_ACCESSCHECK,parent(%q0),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=[u(%va/FN_READERS,%q0,%#)][u(%va/FN_HEADER,View [name(%q0)])]%r[ulocal(%va/FN_BANNER,%q0,%#)][ifelse(u(%va/fn_hasattrp,%q0,SUMMARY),[ulocal(%va/FN_SUMMARY,%q0,%#)],)];@dolist [filter(%va/FIL_COMMENTS,sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*)))]={@pemit %#=[u(%va/FN_READJOB,##,%q0)]};@wait 0={@pemit %#=[u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0))]};}
&CMD_JOBS here=$+jobs:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [revwords(lcon(%va))]={@pemit %#=[ifelse(u(%va/FN_MONITORCHECK,parent(##),%#),[u(%va/FN_JOBLIST,##,%#)],)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/ALL here=$+jobs/all:@switch [u(%va/HAS_ACCESS,%#)]=0,{@pemit %#=Permission denied.},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [filter(%va/FIL_GOING,revwords(lcon(%va)))]={@pemit %#=[ifelse(u(%va/FN_ACCESSCHECK,[parent(##)],%#),u(%va/FN_JOBLIST,##,%#),)];};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/CLEAN here=$+jobs/clean:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@trigger %va/TRIG_CLEAN;@pemit %#=Removing all non-player entries from Job Data.}
&CMD_JOBS/COMPRESS here=$+jobs/compress:@switch [u(%va/FN_WIZONLY,%#)]=0*,{@pemit %#=Permission denied.},{@dolist [lnum(1,words(lcon(%va)))]={@name [extract(revwords(lcon(%va)),##,1)]=Job ##};&JOBS_NUM %va=[words(lcon(%va))];@pemit %#=Compressed. The next job number will be [inc(get(%va/JOBS_NUM))].}
&CMD_JOBS/CREDITS here=$+jobs/credits:@pemit %#=[u(%va/FN_HEADER,Anomaly Jobs)]%r%rVersion: [u(%va/VERSION)][space(5)]Release: [u(%va/RELEASE)]%r%rAuthor: [u(%va/CREDITS)]%r%rMaintainer: [u(%va/MAINTAINER)]%r%rContributors: [u(%va/CONTRIBUTORS)]%r%r[u(%va/LICENSE)]%r%r[u(%va/FN_FOOTER)]
&CMD_JOBS/DATE here=$+jobs/date:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.;},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [sortby(%va/SORTBY_DATE,lcon(%va))]={@pemit %#=[ifelse(u(%va/FN_MONITORCHECK,parent(##),%#),[u(%va/FN_JOBLIST,##,%#)],)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/LIST here=$+jobs/list *:@switch [setq(0,u(%va/FN_FIND-BUCKET,%0))][u(%va/FN_ACCESSCHECK,%q0,%#)][isdbref(%q0)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid bucket. Type '[ansi(h,+buckets)]' for a list of valid buckets.},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [munge(%va/SORTBY_JOB,iter(children(%q0),rest(name(##))),children(%q0))]={@pemit %#=[u(%va/FN_JOBLIST,##,%#)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/MINE here=$+jobs/mine:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [filter(%va/FIL_MINE,revwords(lcon(%va)))]={@pemit %#=[u(%va/FN_JOBLIST,##,%#)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/NEW here=$+jobs/new:@switch [setq(0,%#)][u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [filter(%va/FIL_NEW[default(%#/JOBSN,0)],revwords(lcon(%va)))]={@pemit %#=[ifelse(u(%va/FN_ACCESSCHECK,parent(##),%#),u(%va/FN_JOBLIST,##,%#),)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/OVERDUE here=$+jobs/overdue:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.;},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [filter(%va/FIL_OVERDUE,revwords(lcon(%va)))]={@pemit %#=[ifelse(u(%va/FN_MONITORCHECK,parent(##),%#),[u(%va/FN_JOBLIST,##,%#)],)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/PRI here=$+jobs/pri:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{&JOBS_PRI %va=[sortby(%va/SORTBY_PRI,lcon(%va))];@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [revwords(get(%va/JOBS_PRI))]={@pemit %#=[ifelse(and(u(%va/FN_ACCESSCHECK,[parent(##)],%#),u(%va/FN_MONITORCHECK,parent(##),%#)),u(%va/FN_JOBLIST,##,%#),)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/REPORTS here=$+jobs/reports *:@switch [and(u(%va/HAS_ACCESS,%#),u(%va/STATS_ACCESS,%#))][u(%va/fn_hasattr,%va,REPORT_[first(%0,=)])][eq(words(%0,=),2)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no report by that name. See '[ansi(h,+jobs/reports)]' for a list of valid reports.},110*,{@pemit %#=[u(%va/FN_HEADER,[secure(first(ucstr(%0),=))] Report)]%r;@pemit %#=[u(%va/REPORT_[secure(%0)])];@pemit %#=[u(%va/FN_FOOTER)]},{@pemit %#=[setq(0,first(secure(%0),=))][setq(1,last(secure(%0),=))][u(%va/FN_HEADER,[secure(first(ucstr(%0),=))] Report)]%r;@pemit %#=[u(%va/REPORT_%q0,%q1)];@pemit %#=[u(%va/FN_FOOTER)]}
&CMD_JOBS/REPORTS2 here=$+jobs/reports:@switch [and(u(%va/HAS_ACCESS,%#),u(%va/STATS_ACCESS,%#))]=0,{@pemit %#=Permission denied.},{@pemit %#=[u(%va/FN_HEADER,Available Reports)]%r[ansi(hc,[ljust(Name,10)][ljust(Description,59)][rjust(Type,10)])]%r[u(%va/FN_BREAK)];@pemit %#=[iter(sort(ucstr(map(%va/MAP_REPORTS,lattr(%va/REPORT_*)))),[ljust(##,10)][ljust(rest(get(%va/RTITLE_##),|),59)][rjust(first(get(%va/RTITLE_##),|),10)],%B,%R)];@pemit %#=[u(%va/FN_FOOTER,[ansi(h,+jobs/reports <report>)])]}
&CMD_JOBS/SEARCH here=$+jobs/search *:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist revwords(lcon(%va))={@pemit [setq(0,%b)]%#=ifelse(and(u(%va/FN_ACCESSCHECK,parent(##),%#),gt(words(grepi(##,*,%0)),0)),[u(%va/FN_JOBLIST,##,%#)],)};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/SORT here=$+jobs/sort:@switch [u(%va/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.;},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist sortby(%va/SORTBY_SORT,lcon(%va))={@pemit %#=[ifelse(u(%va/FN_MONITORCHECK,parent(##),%#),[u(%va/FN_JOBLIST,##,%#)],)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_JOBS/WHO here=$+jobs/who *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,pmatch(%0))][or(match(%0,none),isdbref(%q0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#={There is no player by that name. Request must be by player or 'none'.}},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [setq(1,switch(match(%0,none),0,%q0,))][u(%va/fn_trim,squish(iter(revwords(lcon(%va)),switch(u(%va/FIL_WHO,##,%q1),1,##))))]={@pemit %#=[ifelse(u(%va/FN_ACCESSCHECK,parent(##),%#),[u(%va/FN_JOBLIST,##,%#)],)]};@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];}
&CMD_MYJOB/ADD here=$+myjob/add *=*:@switch [not(haspower(%#,guest))][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][and(u(%va/IS_PUBLIC,%q0),match(get(%q0/opened_by),%#))][not(u(%va/fn_hasattr,%q0,LOCKED))]=0*,{@pemit %#={This command is not available to guests.}},10*,{@pemit %#={That is an invalid job number.}},110*,{@pemit %#=Job %0 is not yours. You can only modify your own jobs.},1110*,{@pemit %#=That job is locked and cannot be changed at this time.},{@pemit %#=Comments to job number %0 added.;@trigger %va/TRIG_ADD=%q0,%1,%#,ADD;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Comments added to job %0 by %n.}
&CMD_MYJOB/VIEW here=$+myjob *:@switch [not(haspower(%#,guest))][setq(0,u(%va/FN_FIND-JOB,%0))][isdbref(%q0)][or(gt(member(get(%q0/TAGGED_FOR),%#),0),u(%va/IS_TRANSPARENT,%q0),and(get(%q0/PUBLIC),match(get(%q0/OPENED_BY),%#)))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=Job %0 is not yours. You can only view your own jobs.},{@pemit %#=[center(| [ansi(hy,View Job Number %0)] |,79,=)]%r[ulocal(%va/DISPLAY_MYHEADERS,%q0)];@dolist [u(%va/fn_trim,squish(iter(filter(%va/FIL_COMMENTS,sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))),switch(or(u(%q0/PUBLISH),hasflag(%q0/##,no_inherit),gt(member(get(%q0/TAGGED_FOR),%#),0),strmatch(extract(get(%q0/##),3,1,|),%#)),1,##))))]={@pemit %#=[repeat(-,79)]%r[ansi(h,[extract(get(%q0/##),4,1,|)] added on [convsecs(extract(get(%q0/##),2,1,|))]:)] [edit(last(get(%q0/##),|),@@PIPE@@,|)];@wait 0=@pemit %#=[repeat(=,79)]}}
&CMD_MYJOBS here=$+myjobs:@switch [haspower(%#,guest)]=1,{@pemit %#=Sorry, this command is not available to guests.},{@pemit %#={[u(%va/MYJOBS_HEADER)]};@dolist revwords(lcon(%va))={@pemit %#=[ifelse(or(gt(member(get(##/TAGGED_FOR),%#),0),[or(and(get([parent(##)]/PUBLIC),match(get(##/OPENED_BY),%#)),u(%va/IS_TRANSPARENT,##))]),[u(%va/DISPLAY_MYJOB,##)],)]};@wait 0=@pemit %#=[repeat(=,79)]}
&CMD_PITCH here=$+pitch *=*:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission Denied.},{@pemit %#=You have pitched your idea to staff about '[secure(%0)]'. Please remember that this is merely an idea [ansi(hu,pitch)], and not a request. Staff, for one reason or many, may decide not to go with the idea.;@trigger %va/TRIG_CREATE=%#,locate(%vc,PITCH,i),1,[u(%va/fn_strtrunc,secure(%0),30)],%1,,,3}
&CMD_REQUEST here=$+request *=*:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission denied.},{@pemit %#=You have requested [secure(u(%va/fn_strtrunc,%0,30))] from staff. Please allow for some time to process it. Do not page staff about it - you will hear back soon.;@trigger %va/TRIG_CREATE=%#,[locate(%vc,REQ,i)],2,[u(%va/fn_strtrunc,secure(%0),30)],[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],,,2}
&CMD_TYPO here=$+typo *:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission denied.},{@pemit %#=You have notified production staff of the typo, with the details '[u(%va/fn_strtrunc,%0,get(%va/BUFFER))]';@trigger %va/TRIG_CREATE=%#,locate(%vc,BUILD,i),2,Typo Reported,[u(%va/fn_strtrunc,%0,get(%va/BUFFER))],,,4}
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting controlling attributes.
@@
&BUCKET_HEADER Job Database <JD>
&DISPLAY_F Job Database <JD>=[ifelse(u(me/IS_LOCKED,%0),ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),C,L),-)][ifelse(u(me/IS_PUBLIC,%0),M,-)][ifelse(u(me/IS_TAGGED,%0),T,-)][ifelse(u(me/IS_PUBLISHED,%0),P,-)]
&DISPLAY_P Job Database <JD>=[ifelse(u(me/IS_LOCKED,%0),ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),C,L),-)]
&DISPLAY_S Job Database <JD>=[center(switch([u(%va/fn_hasattrp,%0,LOCKED)][u(%va/fn_hasattrp,%0,CHECKOUT)][get(%0/STATUS)],1*,LOCKED,01*,CHECKED,000,ON HOLD,001,NEW,002,UNDERWAY,003,1/4 DONE,004,1/2 DONE,005,3/4 DONE,006,COMPLETE,NEW),8)]
&DISPLAY_MYHEADERS Job Database <JD>=[setq(0,%0)][setq(x,u(%va/FN_ITEMIZE,map(MAP_NAME,get(%q0/OPENED_BY),%b,|),|))][ljust([rjust(ansi(hc,Bucket:),10)] [u(%va/FN_BUCKETNAME,%q0)],40)][rjust(ansi(hc,Due On:),12)] [ifelse(get(%q0/DUE_ON),ifelse(gt(secs(),get(%q0/DUE_ON)),OVERDUE!,convsecs(get(%q0/DUE_ON))),-)]%r[ljust([rjust(ansi(hc,Title:),10)] [get(%q0/TITLE)],40)][rjust(ansi(hc,Assigned To:),12)] [ifelse(isdbref(get(%q0/ASSIGNED_TO)),name(get(%q0/ASSIGNED_TO)),Nobody)]%r[ljust([rjust(ansi(hc,Opened On:),10)] [convsecs(get(%q0/OPENED_ON))],40)][rjust(ansi(hc,Status:),12)] [switch(get(%q0/PRIORITY),1,Green,2,Yellow,3,Red)]%r[rjust(ansi(hc,Opened By:),10)] %qx
&DISPLAY_BUCKET Job Database <JD>=[rjust(ansi(h,Name:),20)] [name(%q0)] [ifelse(u(%va/FN_STAFFALL,%#),%(%q0%),)] %([words(children(%q0))] jobs in bucket%)%r[rjust(ansi(h,Locked To:),20)] [ifelse(u(%va/fn_hasattrp,%q0,ACCESS),[get(%q0/ACCESS)] [ifelse(u(%va/FN_ACCESSCHECK,%q0,%#),%(You have access%),%(You do not have access%))],*UNLOCKED*)]%r[rjust(ansi(h,Post Data:),20)] %(Job system will post to these boards%)%r[u(%va/fn_columns,Complete: [u(%q0/POST_COMPLETE)]|Approve: [u(%q0/POST_APPROVE)]|Deny: [u(%q0/POST_DENY)],16,|,21)][ifelse(u(%va/fn_hasattrp,%q0,TURNAROUND),%r[rjust(ansi(h,Turnaround:),20)] [get(%q0/TURNAROUND)] hours %([div(get(%q0/TURNAROUND),24)] days%),)][switch(first(version()),PennMUSH,%r[rjust(ansi(h,Logfile:),20)] command.log,ifelse(u(%va/fn_hasattrp,%q0,LOGFILE),%r[rjust(ansi(h,Logfile:),20)] M-[u(%q0/LOGFILE)].log,))]%r[rjust(ansi(h,Hidden Status:),20)] [switch([u(%va/fn_hasattrp,%q0,HIDDEN)][gt(member(u(%#/JOBSH),%q0),0)],00,Unhidden,01,Locally,11,Globally Hidden & Locally Watched,10,Globally,UNKNOWN CASE)]%r[rjust(ansi(h,+Myjobs Status:),20)] [ifelse(u(%va/fn_hasattrp,%q0,PUBLIC),Accessible,Inaccessible)]%r[rjust(ansi(h,Avg Resolve Time:),20)] [u(%va/fn_trim,u(FN_ART,%q0))]%r[rjust(ansi(h,Closure Stats:),20)]%b[ljust(Completed: [after(grab(get(%q0/LIST_STATS),COM|*),|)],16)][ljust(Deleted: [after(grab(get(%q0/LIST_STATS),DEL|*),|)],16)][ljust(Approved: [after(grab(get(%q0/LIST_STATS),APR|*),|)],16)]Denied: [after(grab(get(%q0/LIST_STATS),DNY|*),|)]%r[rjust(ansi(h,Desc:),20)] [get(%q0/DESC)][ifelse(gt(words(setr(x,setdiff(lattr(%q0),u(%va/LIST_BADATTR,%q0)))),0),%r[rjust(ansi(h,Provides:),20)] %(Attributes provided to jobs in the bucket%)%r[u(%va/fn_columns,%qx,16,,21)],)][ifelse(gt(words(lattr(%q0/PROCESS_*)),0),%r[rjust(ansi(h,Settings:),20)] %(+job/sumset settings%)%r[u(%va/fn_columns,map(MAP_SETTINGS,lattr(%q0/PROCESS_*)),16,,21)],)]
&DISPLAY_BUCKET2 Job Database <JD>=[rjust(ansi(h,Players:),20)] %(Connected players with access to this bucket)%r[u(%va/fn_columns,[u(%va/fn_trim,squish(iter(edit(objeval(%#,lwho()),%b,|),ifelse(and(u(%va/HAS_ACCESS,##),u(%va/FN_ACCESSCHECK,%q0,##)),name(##),),|,|),|),b,|)],16,|,21)]
&FIL_BROADCAST Job Database <JD>=[ifelse(u(%va/fn_hasattrp,%0,JOBS_SILENCE),0,u(%va/FN_ACCESSCHECK,%q0,%0))]
&FIL_GOING Job Database <JD>=[not(default(%0/GOING,0))]
&FIL_ISPLAYER Job Database <JD>=[hastype(%0,player)]
&FIL_NEWCOMMENTS1 Job Database <JD>=gt(last(%0,_),last(grab(get(%q0/LIST_READERS),%#|*),|))
&FIL_NOSPAM Job Database <JD>=[not(u(%va/fn_hasattr,%0,JOBS_NOSPAM))]
&FIL_NOTPLAYER Job Database <JD>=[not(hastype(%0,player))]
&FN_ADDSTAT Job Database <JD>=[localize([setq(x,ifelse(u(%va/fn_hasattr,%1,LIST_STATS),get(%1/LIST_STATS),))][setq(0,match(%qx,%0|*))][setq(1,grab(%qx,%0|*))][ifelse(gt(%q0,0),[set(%1,LIST_STATS:[setunion(ldelete(%qx,%q0),[first(%q1,|)]|[inc(rest(%q1,|))])])],[set(%1,LIST_STATS:[setunion(%qx,%0|1)])])])]
&FN_ADDSTAT_ART Job Database <JD>=[set(%0,STAT_ART:[add(first(default(%0/STAT_ART,0 0)),sub(secs(),get(%1/OPENED_ON)))] [inc(last(default(%0/STAT_ART,0 0)))])]
&FN_BUCKETNAME Job Database <JD>=[ifelse(get(%0/GOING),GOING,ifelse(isdbref(parent(%0)),name(parent(%0)),ERROR))]
&FN_CLEANFIND Job Database <JD>=t(words(filter(FIL_NOTPLAYER,get(%0/%1))))
&FN_CLEANFIX Job Database <JD>=[setq(0,filter(FIL_ISPLAYER,get(%0/%1)))][ifelse(words(%q0),%q0,owner(me))]
&FN_COLUMNS Job Database <JD>=[localize(switch([setr(0,[columns(%0,%1,%2,%3)])],#-1*,[align([ifelse(%3,dec(%3),0)] [sub(78,ifelse(%3,dec(%3),0))],%B,[table(%0,%1,sub(78,ifelse(%3,dec(%3),0)),%2)])],%q0))]
&FN_EASYPIE_PENN Job Database <JD>=[setq(0,lmath(add,setr(1,iter(%1,first(rest(%i0,:),:),%2))))][setq(2,fdiv(58,%q0))][setq(2,iter(%q1,ceil(mul(%i0,%q2))))][setq(3,iter(%q2,repeat(left(extract(%1,#@,1,%2),1),%i0),%B,))][setq(4,u(me/penn%0_pie))][foreach(#lambda/setq(4,edit(\%q4,\%0,mid(\%q3,\%1,1))),v(penn_pie))][setq(4,regeditall(%q4,(.)\\1*,ansi(left(after(%2%1,%2$1),2),$0)))][align([setr(5,inc(mul(%0,4)))] [sub(77,%q5)],edit(%q4,_,%B),[repeat(%R,%3)][iter(%1,[ansi(mid(%i0,1,2),left(%i0,1))] [ansi(h,last(%i0,:))],%2,%R)])]
&PENN_PIE Job Database <JD>=0123456789abcdefghijklmnpqrstuvwyzABCDEFGHIJKLMNPQRSTUVWYZ
&PENN10_PIE Job Database <JD>=__________________gfedc__________________%R____________lkjjihgfedcba9987____________%R________nnmmllkjihgfedcba98776655________%R______pppnnmmllkjihfedba98776655444______%R____qqqqpppnnmlkjihgecba9876554443333____%R___rrrqqqqppnnmlkjigeca987655443333222___%R__rrrrrrrqqqppnmlkigeca8765443332222222__%R_ssssssrrrrrqqppnljheb975443322222111111_%R_tsssssssssrrrrqpnliea754322221111111110_%Rtttttttttttsssssrrple74221111100000000000%Ruuuuuuuuuuuuuuuuuuuu000000000000000000000%RuuuuuuuuuuuvvvvvwwzCJRUWWYYYYYZZZZZZZZZZZ%R_uvvvvvvvvvwwwwyzACFJNRTUVWWWWYYYYYYYYYZ_%R_vvvvvvwwwwwyyzzACEGJMPRTUUVVWWWWWYYYYYY_%R__wwwwwwwyyyzzABCDFHJLNQRSTUUVVVWWWWWWW__%R___wwwyyyyzzAABCDEFHJLNPQRSTTUUVVVVWWW___%R____yyyyzzzAABCDEFGHJLMNPQRSTTUUUVVVV____%R______zzzAABBCCDEFGIJKMNPQRRSSTTUUU______%R________AABBCCDEFGHIJKLMNPQRRSSTT________%R____________CDEEFGHIJKLMNPPQR____________%R__________________HIJKL__________________
&PENN12_PIE Job Database <JD>=______________________gfedc______________________%R_______________kkjjihggfedccba9988_______________%R___________mmmllkkjiihgfedcbaa98877666___________%R________ppnnnmmllkjjihgfedcba998776655544________%R______qppppnnnmmllkjihgfedcba98776655544443______%R_____qqqqppppnnmmllkjihfedba9877665544443333_____%R____rrrqqqqqpppnnmlkjihgecba98765544433333222____%R___rrrrrrrqqqqppnnmlkjigeca9876554433332222222___%R__ssssrrrrrrrqqqppnmlkigeca87654433322222221111__%R_ssssssssssrrrrrqqppnljheb9754433222221111111111_%R_tttttsssssssssrrrrqpnliea7543222211111111100000_%Rtttttttttttttttsssssrrple742211111000000000000000%Ruuuuuuuuuuuuuuuuuuuuuuuu0000000000000000000000000%RuuuuuuuuuuuuuuuvvvvvwwzCJRUWWYYYYYZZZZZZZZZZZZZZZ%R_uuuuuvvvvvvvvvwwwwyzACFJNRTUVWWWWYYYYYYYYYZZZZZ_%R_vvvvvvvvvvwwwwwyyzzACEGJMPRTUUVVWWWWWYYYYYYYYYY_%R__vvvvwwwwwwwyyyzzABCDFHJLNQRSTUUVVVWWWWWWWYYYY__%R___wwwwwwwyyyyzzAABCDEFHJLNPQRSTTUUVVVVWWWWWWW___%R____wwwyyyyyzzzAABCDEFGHJLMNPQRSTTUUUVVVVVWWW____%R_____yyyyzzzzAABBCCDEFGIJKMNPQRRSSTTUUUUVVVV_____%R______yzzzzAAABBCCDEFGHIJKLMNPQRRSSTTTUUUUV______%R________zzAAABBCCDEEFGHIJKLMNPPQRRSSTTTUU________%R___________BBBCCDDEFFGHIJKLMNNPQQRRSSS___________%R_______________DDEEFGHHIJKLLMNPPQQ_______________%R______________________HIJKL______________________
&FN_EASYPIE_TINY Job Database <JD>=u(fn_pielegend,eval(edit(u(fn_colorpie,u(fn_cutpie,v(data_31-15),31,15,%0),map(map_easypie,%1,%2),%2,%4),%%r,%\%\)),map(map_easypie2,%1,%2),%2,%3)
&FN_EASYPIE Job Database <JD>=[switch(first(version()),PennMUSH,u(fn_easypie_penn,%0,%1,%2,%3,%4),RhostMUSH,u(fn_easypie_penn,%0,%1,%2,%3,%4),u(fn_easypie_tiny,%0,%1,%2,%3,%4))]
&FN_FIND-BUCKET Job Database <JD>=[localize(ifelse(strmatch(name(setr(0,locate(%vc,%0,i))),%0),%q0,#-1))]
&FN_FIND-JOB Job Database <JD>=[localize(ifelse(strmatch(name(setr(0,locate(%va,Job %0,i))),Job %0),%q0,#-1))]
&FN_HASATTR Job Database <JD>=[switch(first(version()),PennMUSH,hasattrval(%0,%1),hasattr(%0,%1))]
&FN_HASATTRP Job Database <JD>=[switch(first(version()),PennMUSH,hasattrpval(%0,%1),hasattrp(%0,%1))]
&FN_ITEMIZE Job Database <JD>=[localize(switch([setr(0,[itemize(%0,%1)])],#-1*,switch([setr(1,[elist(%0,and,%1)])],#-1,u(fn_pretty,%0,%1),%q1),%q0))]
&FN_MONITORCHECK Job Database <JD>=[and(or(u(%va/FN_ACCESSCHECK,%0,%1),u(%va/FN_WIZONLY,%1)),switch([u(%va/fn_hasattrp,%0,HIDDEN)][gt(member(get(%1/JOBSH),%0),0)],01,0,10,0,11,1,1),isdbref(parent(%0)))]
&FN_PACK Job Database <JD>=[localize(switch([setr(0,[pack(%0,%1)])],#-1*,[setq(0,if(lt(%0,0),sub(0,%0),%0))][setq(r,edit(iter(revwords(iter(iter(lnum(0,32),power(if(%1,%1,64),%i0)),switch([div(%i0,%q0)]:[eq(%i0,%q0)],0:*,%i0,*:1,%i0))),[extract(0 1 2 3 4 5 6 7 8 9 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z @ $,add(div(%q0,%i0),1),1)][setq(0,sub(%q0,mul(%i0,div(%q0,%i0))))]),%b,))][if(lt(%0,0),-%qr,%qr)],%q0))]
&FN_PLAYERLIST Job Database <JD>=[u(%va/FN_ITEMIZE,map(MAP_NAME,get(%0/OPENED_BY),%b,|),|)]
&FN_PRETTY Job Database <JD>=[switch(words(%0,switch(%1,,%b,%1)),0,%0,1,%0,[ldelete(edit(%0,switch(%1,,%b,%1),%,%b),words(%0,switch(%1,,%b,%1)),%,)]%band%b[last(%0,switch(%1,,%b,%1))])]
&FN_SKIN Job Database <JD>=[setq(z,default(%#/JOBSKIN,DEFAULT))][ifelse(and(u(fn_hasattr,me,%qz_SKIN),u(fn_hasattr,me,%qz_%0)),u(%qz_%0,%1,%2,%3,%4),u(DEFAULT_%0,%1,%2,%3,%4))]
&FN_STRTRUNC Job Database <JD>=[localize(switch([setr(0,[strtrunc(%0,%1)])],#-1*,left(%0,%1),%q0))]
&FN_TRIM Job Database <JD>=[switch(first(version()),PennMUSH,trimtiny(%0,%1,%2),trim(%0,%1,%2))]
&IS_LOCKED Job Database <JD>=ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),switch(first(get(%0/CHECKOUT)),%1,0,1),udefault(%0/LOCKED,0))
&IS_SUMMARY Job Database <JD>=[u(%va/fn_hasattrp,%0,SUMMARY)]
&IS_TRANSPARENT Job Database <JD>=[u(%va/fn_hasattrp,%0,TRANSPARENT)]
&JOBS_HEADER2 Job Database <JD>=[u(FN_HEADER)]%r[setq(1,[secure(switch(u(%va/fn_hasattrp,%0,JOBS),1,lcstr(mid(get(%0/JOBS),0,20)),u(JOBS_DEFAULT)))])][ansi(hc,*%b%b[ljust(Job#,5)][iter(lnum(strlen(%q1)),u(HEADER_[mid(%q1,##,1)]))])]%r[u(FN_BREAK)]
&MAP_ARTSGRAPH Job Database <JD>=[setq(0,iter(sortby(%va/SORTBY_NAME,lcon(%vc)),fdiv(first(get(##/STAT_ART)),rest(get(##/STAT_ART)))))]%q0
&MAP_NEW Job Database <JD>=[u(fn_pack,after(%0,#))]:[u(fn_pack,u(%0/NUM_COMMENT))]
&MAP_STAT_ESC Job Database <JD>=[ifelse(and(u(%va/fn_hasattrp,%0,DUE_ON),gt(secs(),get(%0/DUE_ON))),[setq(3,inc(%q3))],[switch(default(%0/PRIORITY,1),1,setq(1,inc(%q1)),2,setq(2,inc(%q2)),3,setq(3,inc(%q3)),setq(0,inc(%q0)))])]
&REPORT_ACTBY Job Database <JD>=[switch(%0,,This report requires you to supply an action code.%r%rUse: '+jobs/reports ACTBY=<action code>'.%r,[setq(0,squish(iter(lcon(%vc),ifelse(eq(words(grab(u(##/LIST_STATS),%0|*)),0),,##))))][setq(1,squish(iter(%q0,rest(grab(u(##/LIST_STATS),%0|*),|))))][ifelse(lt(words(%q1),1),There is no action code '[ucstr(%0)]' presently in the system.%r,[ulocal(FN_BARGRAPH,%q1,10,2,16,#)]%r[space(4)][iter(%q0,[center(u(%va/fn_strtrunc,name(##),2),2)])]%r%r[center([ucstr(%0)] Actions by Bucket,79)])])]
&REPORT_ACTIONS Job Database <JD>=[localize([ulocal(FN_BARGRAPH,setr(0,map(MAP_ACTIONS,v(LIST_STATS))),15,2,16,#)][setq(0,fold(FOLD_ADD,%q0,0))]%r[space(4)][setq(1,map(MAP_ACTIONS2,sort(v(LIST_STATS))))][iter(%q1,[mid(##,0,1)]%b)]%r[space(4)][iter(%q1,[mid(##,1,1)]%b)]%r[space(4)][iter(%q1,[mid(##,2,1)]%b)]%r%r[center(%q0 Actions Performed Since [v(INSTALL_DATE)],79)])]
&REPORT_ARTS Job Database <JD>=[iter(sortby(%va/SORTBY_NAME,lcon(%vc)),[ifelse(u(%va/fn_hasattr,##,STAT_ART),u(%va/FN_TIME,round(fdiv(first(get(##/STAT_ART)),rest(get(##/STAT_ART))),0)),[rjust(-,11)])]%b[ljust(ansi(hc,[name(##)]),20)],%B,%R)]%R[rjust(u(%va/FN_TIME,round(fdiv(first(default(%vc/STAT_ART,0 0)),rest(default(%vc/STAT_ART,0 1))),0)),11)]%b[ansi(hy,Total ART)]%r[center(Average Resolution Times by Bucket,79)]
&REPORT_ARTSGRAPH Job Database <JD>=[setq(0,iter(setr(1,sortby(%va/SORTBY_NAME,lcon(%vc))),ifelse(u(%va/fn_hasattr,##,STAT_ART),[div(round(fdiv(first(get(##/STAT_ART)),rest(get(##/STAT_ART))),0),86400)],0)))][ulocal(%va/FN_BARGRAPH,%q0,15,2,16,#)]%r[space(4)][iter(%q1,mid([name(##)]%B,0,2))]%r%r[center(Average Resolution Time by Bucket %(in days%),79)]
&REPORT_BACT Job Database <JD>=[switch(%0,,This report requires you to supply a bucket name.%r%rUse: '+jobs/reports BACT=<bucket name>' to specify a bucket.%r,[setq(0,u(%va/FN_FIND-BUCKET,%0))][ifelse(isdbref(%q0),[localize([ulocal(FN_BARGRAPH,map(MAP_ACTIONS,get(%q0/LIST_STATS)),15,1,	16,#)]%r[space(4)][setq(1,map(MAP_ACTIONS2,sort(get(%q0/LIST_STATS))))][iter(%q1,mid(##,0,1))]%r[space(4)][iter(%q1,mid(##,1,1))]%r[space(4)][iter(%q1,mid(##,2,1))])]%r%r[center(Number of Actions Performed on Bucket [name(%q0)],79)],That is not a valid bucket name. See '+buckets' for a list of valid buckets.)])]
&REPORT_BUCKETS Job Database <JD>=[localize([ulocal(FN_BARGRAPH,iter(sortby(SORTBY_NAME,lcon(%vc)),words(children(##))),15,2,16,#)])]%r[space(4)][iter(sortby(SORTBY_NAME,lcon(%vc)),mid([name(##)]%b,0,2))]%r%r[center(# of Jobs in Buckets,79)]
&REPORT_CODES Job Database <JD>=[center(List of Action Codes:,79)]%r%r[setq(0,sort(get(%va/LIST_ACTIONS),b,|,|))][u(%va/fn_columns,%q0,25,|,2)]%r
&REPORT_JACT Job Database <JD>=[switch(%0,,This report requires you to supply a job.%r%rUse: +jobs/reports JACT=<#>%r,[setq(0,u(%va/FN_FIND-JOB,%0))][ifelse(isdbref(%q0),[localize(ifelse(u(%va/fn_hasattr,%q0,LIST_STATS),[ulocal(FN_BARGRAPH,map(MAP_ACTIONS,get(%q0/LIST_STATS)),15,1,16,#)]%r[space(4)][setq(1,map(MAP_ACTIONS2,sort(get(%q0/LIST_STATS))))][iter(%q1,mid(##,0,1))]%r[space(4)][iter(%q1,mid(##,1,1))]%r[space(4)][iter(%q1,mid(##,2,1))],No actions recorded for this job.))]%r%r[center(Actions Performed on [name(%q0)],79)],That is not a valid job.%r)]	)]
&REPORT_STATS Job Database <JD>=[rjust(ansi(hc,Install:),20)]%b[get(%va/INSTALL_DATE)]%r[rjust(ansi(hc,Version:),20)]%bAnomaly Jobs [get(%va/VERSION)][space(5)]%r[rjust(ansi(hc,Release:),20)]%b[get(%va/RELEASE)]%r[rjust(ansi(hc,Memory:),20)]%b[setr(a,fold(%va/FOLD_ADD,iter(setr(b,[num(me)] [loc(me)] %vb %vc [lcon(%vc)] [lcon(me)]),objmem(##))))]%b%([round(fdiv(%qa,1024),1)]k in [words(%qb)] objects%)%r[rjust(ansi(hc,Open Jobs:),20)]%b[setr(0,words(lcon(%va)))]%r[rjust(ansi(hc,Capacity:),20)]%b[setr(1,u(%va/MAX_JOBS))]%b%([mul(round(fdiv(%q0,%q1),2),100)]%% Full%)%r[rjust(ansi(hc,Next Job:),20)]%b[inc(u(%va/JOBS_NUM))]%r[rjust(ansi(hc,Buckets:),20)]%b[words(lcon(%vc))]%r[rjust(ansi(hc,Opened:),20)]%b[last(grab(get(%va/LIST_STATS),CRE|*),|)][setq(x,iter(APR DNY COM DEL,grab(get(%va/LIST_STATS),##|*)))][setq(y,map(%va/MAP_ACTIONS,%qx))]%r[rjust(ansi(hc,Closed:),20)]%b[fold(%va/FOLD_ADD,%qy,0)]%r[rjust(ansi(hc,ART:),20)]%b[u(%va/FN_ART,%vc)][space(10)] ART=Average Resolution Time%r[rjust(ansi(hc,REQ ART:),20)]%b[u(%va/FN_ART,locate(%vc,REQ,i))][space(18)]DD:HH:MM:SS%r[rjust(ansi(hc,CODE ART:),20)]%b[u(%va/FN_ART,locate(%vc,CODE,i))]%r[rjust(ansi(hc,TPS ART:),20)]%b[u(%va/FN_ART,locate(%vc,TPS,i))]%r[rjust(ansi(hc,BUILD ART:),20)]%b[u(%va/FN_ART,locate(%vc,BUILD,i))]%r
&SORTBY_COMMENTS Job Database <JD>=[sub(after(%0,_),after(%1,_))]
&TRIG_ADD Job Database <JD>=think [setq(0,default(%0/NUM_COMMENT,1))][u(FN_ADDSTAT,%3,%va)][u(FN_ADDSTAT,%3,%0)][u(FN_ADDSTAT,%3,parent(%0))];&COMMENT_%q0 %0=%3|[secs()]|%2|[name(%2)]|[ifelse(u(%va/fn_hasattrp,%0,ALETTER_%3),u(%va/fn_strtrunc,u(%0/ALETTER_%3,%0,%2,edit(%1,|,@@PIPE@@)),get(%va/BUFFER)),u(%va/fn_strtrunc,edit(%1,|,@@PIPE@@),get(%va/BUFFER)))];&NUM_COMMENT %0=[inc(%q0)];&MODIFIED_ON %0=[secs()];&MODIFIED_BY %0=%2;@trigger parent(%0)/HOOK_%3=%0,%2,[parent(%0)];@trigger %va/TRIG_POST=%0,%3,%2,%1;@trigger %va/TRIG_MAIL=%0,%3,%2,%1
&TRIG_APPLY Job Database <JD>=@trigger %va/TRIG_CREATE=%0,[locate(%vc,APPS,i)],2,Application by [name(%0)],
&TRIG_CLEAN Job Database <JD>=@dolist lcon(me)={@switch [u(FN_CLEANFIND,##,OPENED_BY)][u(FN_CLEANFIND,##,ASSIGNED_TO)][u(FN_CLEANFIND,##,TAGGED_FOR)][u(FN_CLEANFIND,##,PLAYERS)][u(FN_CLEANFIND,##,WRITER)]=1????,{&OPENED_BY ##=U(FN_CLEANFIX,##,OPENED_BY)},?1???,{&ASSIGNED_TO ##=U(FN_CLEANFIX,##,ASSIGNED_TO)},??1??,{&TAGGED_FOR ##=U(FN_CLEANFIX,##,TAGGED_FOR)},???1?,{&PLAYERS ##=U(FN_CLEANFIX,##,PLAYERS)},????1,{&WRITER ##=U(FN_CLEANFIX,##,WRITER)}}
&TRIG_CREATE Job Database <JD>=@switch gt(words(lcon(%va)),u(%va/MAX_JOBS))=1,{@pemit %0=[ansi(hr,JOBS ERROR:)] Creation failed. The +jobs system is full. Contact staff immediately.;@trigger #1430/TRIG_BROADCAST=%1,JOBS SYSTEM IS FULL! Please complete jobs or boost your MAX_JOBS configuration.},{think [setq(0,inc(u(%va/JOBS_NUM)))][setq(1,create(Job %q0,10))][setq(y,case(%7,1,CRE,OTH))];@tel %q1=%va;@link %q1=%va;&OPENED_BY %q1=[switch(%5,,%0,%5)];&OPENED_ON %q1=[secs()];&MODIFIED_ON %q1=[secs()];&STATUS %q1=1;&TITLE %q1=%3;@parent %q1=[locate(%vc,%1,i)];&NUM_COMMENT %q1=2;&PRIORITY %q1=%2;&COMMENT_1 %q1=CRE|[secs()]|%0|[name(%0)]|[ifelse(u(%va/fn_hasattrp,%q0,ALETTER_%qy),u(%va/fn_strtrunc,u(%q0/ALETTER_%qy,%q1,%0,edit(%4,|,@@PIPE@@)),get(%va/BUFFER)),u(%va/fn_strtrunc,edit(%4,|,@@PIPE@@),get(%va/BUFFER)))];&ASSIGNED_TO %q1=%6;&JOBS_NUM %va=%q0;&DUE_ON %q1=[ifelse(u(%va/fn_hasattrp,%q1,TURNAROUND),add(secs(),mul(60,60,get(%q1/TURNAROUND))),)];@trigger %va/TRIG_BROADCAST=%1,New [name(%1)] job # %q0 submitted by [name(%0)]: %3;@trigger %1/HOOK_%qy=%q1,%0,%1;@trigger %va/TRIG_POST=%q1,%qy,%0,%4;@trigger %va/TRIG_MAIL=%q1,%qy,%0,%4;think [u(FN_ADDSTAT,CRE,%va)][u(FN_ADDSTAT,CRE,parent(%q1))]}
&TRIG_DESTROY Job Database <JD>=&going %0=1;@wait 60={@switch get(%0/GOING)=1,{@set %0=DESTROY_OK;@parent %0;@nuke %0}}
&TRIG_LOG Job Database <JD>=@switch [u(%va/fn_hasattrp,%va,JOB_LOGGING)][setq(0,%0)][setq(1,parent(%q0))][setq(x,u(%va/FN_ITEMIZE,map(MAP_NAME,get(%q0/OPENED_BY),%b,|),|))]=0,{@@},{@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[center(| [name(%q0)] |,79,=)];@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[ljust([rjust(ansi(hc,Bucket:),10)]%b[u(FN_BUCKETNAME,%q0)],40)][rjust(ansi(hc,Due On:),12)]%b[ifelse(get(%q0/DUE_ON),ifelse(gt(secs(),get(%q0/DUE_ON)),OVERDUE!,convsecs(get(%q0/DUE_ON))),-)];@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[ljust([rjust(ansi(hc,Title:),10)]%b[get(%q0/TITLE)],40)][rjust(ansi(hc,Assigned To:),12)]%b[ifelse(isdbref(get(%q0/ASSIGNED_TO)),name(get(%q0/ASSIGNED_TO)),Nobody)];@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[ljust([rjust(ansi(hc,Opened On:),10)]%b[convsecs(get(%q0/OPENED_ON))],40)][rjust(ansi(hc,Status:),12)]%b[switch(get(%q0/PRIORITY),1,Green,2,Yellow,3,Red)]%b%([switch(get(%q0/STATUS),0,On Hold,1,New,2,Underway,3,25%%,4,50%%,5,75%%,6,100%%,?)]%);@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[rjust(ansi(hc,Opened By:),10)] %qx;@dolist sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))={@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[repeat(-,79)];@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[extract(get(%q0/##),4,1,|)]%badded on%b[convsecs(extract(get(%q0/##),2,1,|))]:%b[edit(last(get(%q0/##),|),@@PIPE@@,|)]};@wait 1={@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[repeat(=,79)]}}
&TRIG_LOG_WRITE Job Database <JD>=@switch [first(version())]=RhostMUSH,{@log/file %0=%1},PennMUSH,{@log/cmd %1},{@log %0=%1}
&TRIG_MAIL Job Database <JD>=@switch [u(%va/fn_hasattrp,%0,MLETTER_%1)]=1,{@wait 1={@trigger %vb/TRIG_MAIL=[switch(%1,MAI,[get(%0/OPENED_BY)],APR,[get(%0/OPENED_BY)],DNY,[get(%0/OPENED_BY)],filter(%va/FIL_NOSPAM,setunion(get(%0/OPENED_BY),)))],[switch(%1,APR,Approved:,DEL,Deleted:,DNY,Denied:,COM,Complete:,[name(%0)]:)]%b[get(%0/TITLE)],[u(parent(%0)/MLETTER_%1,%0,%1,%2,%3)]};}
&TRIG_POST Job Database <JD>=@switch [u(%va/fn_hasattrp,%0,PLETTER_%1)]=1,{@wait 1={@trigger %vb/TRIG_POST=[u(%0/POST_[case(%1,APR,APPROVE,DEL,DELETE,DNY,DENY,COM,COMPLETE,APPROVE)])],[switch(%1,APR,A:,DNY,D:,COM,C:,[name(%0)]:)]%b[get(%0/TITLE)],[u(parent(%0)/PLETTER_%1,%0,%1,%2,%3)]};}
@@
&DEFAULT_BANNER Job Database <JD>=[setq(0,%0)][setq(x,u(%va/FN_ITEMIZE,map(MAP_NAME,get(%q0/OPENED_BY),%b,|),|))][ljust([rjust(ansi(hc,Bucket:),10)]%b[u(%va/FN_BUCKETNAME,%q0)],40)][rjust(ansi(hc,Due On:),12)]%b[ifelse(get(%q0/DUE_ON),ifelse(gt(secs(),get(%q0/DUE_ON)),OVERDUE!,convsecs(get(%q0/DUE_ON))),-)]%r[ljust([rjust(ansi(hc,Title:),10)]%b[get(%q0/TITLE)],40)][rjust(ansi(hc,Status:),12)]%b[switch(get(%q0/PRIORITY),1,Green,2,Yellow,3,Red)]%b%([switch(get(%q0/STATUS),0,On Hold,1,New,2,Underway,3,25%%,4,50%%,5,75%%,6,100%%,?)]%)%r[ljust([rjust(ansi(hc,Opened On:),10)] [convsecs(get(%q0/OPENED_ON))],40)][rjust(ansi(hc,Assigned To:),12)]%b[ifelse(isdbref(get(%q0/ASSIGNED_TO)),name(get(%q0/ASSIGNED_TO)),Nobody)]%r[rjust(ansi(hc,Opened By:),10)]%b%qx
&DEFAULT_BUCKETLIST Job Database <JD>=[ifelse(u(%va/FN_WIZONLY,%#),[ljust(name(%0),6)]%b%b[ifelse(u(%va/FN_MONITORCHECK,%0,%#),V,-)][ifelse(u(%va/IS_HIDDEN,%0),H,-)][ifelse(u(%va/IS_LOCKED,%0),L,-)][ifelse(u(%va/IS_TAGGED,%0),T,-)][ifelse(u(%va/IS_PUBLIC,%0),M,-)][ifelse(u(%va/IS_PUBLISHED,%0),P,-)][ifelse(u(%va/IS_SUMMARY,%0),S,-)]%b%b[u(%va/fn_strtrunc,ljust(get(%0/DESC),40),30)][rjust(words(children(%0)),5)][rjust(mul(round(fdiv(words(children(%0)),words(lcon(%va))),2),100)%%,5)]%b%b[rjust(get(%0/POST_COMPLETE),2)]%b[rjust(get(%0/POST_APPROVE),2)]%b[rjust(get(%0/POST_DENY),2)][rjust(default(%0/TURNAROUND,0),5)][rjust([ifelse(u(%va/fn_hasattr,%0,STAT_ART),[round(fdiv(fdiv(first(get(%0/STAT_ART)),rest(get(%0/STAT_ART))),86400),0)]d,-)],7)],[ljust(name(%0),6)]%b%b[u(%va/fn_strtrunc,ljust(get(%0/DESC),50),50)]%b[rjust(ifelse(u(%va/FN_MONITORCHECK,%0,%#),Yes,-),20)])]
&DEFAULT_FLAGS Job Database <JD>=[ifelse(u(me/IS_LOCKED,%0),u(me/FN_FLAG,ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),CHECKED OUT,LOCKED),hr),)][ifelse(u(me/IS_PUBLIC,%0),u(me/FN_FLAG,Myjobs),)][ifelse(u(me/IS_PUBLISHED,%0),u(me/FN_FLAG,Published),)][ifelse(u(me/IS_TAGGED,%0),u(me/FN_FLAG,Tags),)]
&DEFAULT_JOBLIST Job Database <JD>=[setq(0,secure(ifelse(u(%va/fn_hasattrp,%1,JOBS),lcstr(mid(get(%1/JOBS),0,20)),get(%va/JOBS_DEFAULT))))][setq(1,ifelse(get(%0/DUE_ON),ifelse(gt(secs(),get(%0/DUE_ON)),r,switch(get(%0/PRIORITY),1,g,2,y,3,r,g)),switch(get(%0/PRIORITY),1,g,2,y,3,r)))][ifelse(u(%va/FN_ISNEW,%0,%1),[ansi(hr,*)]%b,%b%b)][ansi(h%q1,[rjust([last(name(%0))],5)]%b[iter(lnum(strlen(%q0)),[u(%va/DISPLAY_[mid(%q0,##,1)],%0,%1)])])]
&DEFAULT_JOBSHEADER Job Database <JD>=localize([u(FN_HEADER,Anomaly Jobs [u(VERSION)])]%r[setq(1,[secure(switch(u(%va/fn_hasattrp,%0,JOBS),1,lcstr(mid(get(%0/JOBS),0,20)),u(JOBS_DEFAULT)))])][ansi(hc,*%b%b[ljust(Job#,5)][iter(lnum(strlen(%q1)),u(HEADER_[mid(%q1,##,1)]))])]%r[u(FN_BREAK)])
&DEFAULT_READ Job Database <JD>=[repeat(-,79)]%r[ifelse(u(%va/EDIT_ACCESS,%#),[ansi(h,%[)][ifelse(and(or(u(%va/IS_PUBLISHED,%1),switch(extract(get(%1/%0),3,1,|),u(%1/OPENED_BY),1,0),hasflag(%1/%0,no_inherit)),u(%va/IS_PUBLIC,%1)),ansi(hc,[rest(%0,_)]+),ansi(hc,[rest(%0,_)]-))][ansi(h,%])]%b,)][ansi(h,[extract(get(%1/%0),4,1,|)]%badded on%b[convsecs(extract(get(%1/%0),2,1,|))]:%b )][edit(last(get(%1/%0),|),@@PIPE@@,|)]
&DEFAULT_STAFFSUM Job Database <JD>=[localize(%r[repeat(-,79)]%r[rjust(ansi(hc,DB#:),10)] %0[space(10)][rjust(ansi(hc,Comments:),10)] [setr(z,words(lattr(%0/COMMENT_*)))]%r%r[rjust(ansi(hc,Players:),10)] %(Players contributing to this job%)%r[setq(y,setunion(iter(lattr(%0/COMMENT_*),extract(get(%0/##),4,1,|),%b,|),,|))][u(%va/fn_columns,%qy,20,|,11)][ifelse(u(%va/fn_hasattr,%0,LIST_READERS),%r[rjust(ansi(hc,Readers:),10)]%b%(Players who have read this job in the past%)%r[setq(z,iter(get(%0/LIST_READERS),first(##,|)))][u(%va/fn_columns,map(%va/MAP_NAME,%qz,%b,|),20,|,11)],)][ifelse(u(%va/fn_hasattr,%0,TAGGED_FOR),%r[rjust(ansi(hc,Tags:),10)]%b%(Players this job has been tagged for%)%r[u(%va/fn_columns,map(%va/MAP_NAME,get(%0/TAGGED_FOR),%b,|),20,|,11)],)]%r[rjust(ansi(hc,Stats:),10)]%r[u(%va/fn_columns,iter(ifelse(u(%va/fn_hasattr,%0,LIST_STATS),sort(get(%0/LIST_STATS)),),[first(##,|)]%b[last(##,|)],%b,|),20,|,11)]%r)]
@@
&CHROME_BANNER Job Database <JD>=%r[setq(0,%0)][setq(x,u(%va/FN_ITEMIZE,map(MAP_NAME,get(%q0/OPENED_BY),%b,|),|))][ljust([rjust(ansi(hc,Bucket:),10)]%b[u(%va/FN_BUCKETNAME,%q0)],40)][rjust(ansi(hc,Due On:),12)]%b[ifelse(get(%q0/DUE_ON),ifelse(gt(secs(),get(%q0/DUE_ON)),OVERDUE!,convsecs(get(%q0/DUE_ON))),-)]%r[ljust([rjust(ansi(hc,Title:),10)]%b[get(%q0/TITLE)],40)][rjust(ansi(hc,Status:),12)]%b[switch(get(%q0/PRIORITY),1,Green,2,Yellow,3,Red)]%b%([switch(get(%q0/STATUS),0,On Hold,1,New,2,Underway,3,25%%,4,50%%,5,75%%,6,100%%,?)]%)%r[ljust([rjust(ansi(hc,Opened On:),10)]%b[convsecs(get(%q0/OPENED_ON))],40)][rjust(ansi(hc,Assigned To:),12)]%b[ifelse(isdbref(get(%q0/ASSIGNED_TO)),name(get(%q0/ASSIGNED_TO)),Nobody)]%r[rjust(ansi(hc,Opened By:),10)]%b%qx
&CHROME_FLAGS Job Database <JD>=[edit(u(%va/fn_trim,squish([ifelse(u(me/IS_LOCKED,%0),%b[ansi(hr,ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),CHECKED_OUT,LOCKED))]%b,)][ifelse(u(me/IS_PUBLIC,%0),%bMYJOBS%b,)][ifelse(u(me/IS_PUBLISHED,%0),%bPUBLISHED%b,)][ifelse(u(me/IS_TAGGED,%0),%bTAGS%b,)])),%b,%b-%b)]
&CHROME_JOBLIST Job Database <JD>=[setq(0,secure(ifelse(u(%va/fn_hasattrp,%1,JOBS),lcstr(mid(get(%1/JOBS),0,20)),get(%va/JOBS_DEFAULT))))][setq(1,ifelse(get(%0/DUE_ON),ifelse(gt(secs(),get(%0/DUE_ON)),h,switch(get(%0/PRIORITY),1,hx,2,n,3,h,hx)),switch(get(%0/PRIORITY),1,hx,2,n,3,h)))][ifelse(u(%va/FN_ISNEW,%0,%1),[ansi(hr,*)]%b,%b%b)][ansi(h%q1,[rjust([last(name(%0))],5)]%b[iter(lnum(strlen(%q0)),[u(%va/DISPLAY_[mid(%q0,##,1)],%0,%1)])])]
&CHROME_JOBSHEADER Job Database <JD>=localize([u(FN_HEADER,Anomaly Jobs [u(VERSION)])]%r[setq(1,[secure(switch(u(%va/fn_hasattrp,%0,JOBS),1,lcstr(mid(get(%0/JOBS),0,20)),u(JOBS_DEFAULT)))])][ansi(Chcu,*%b%b[ljust(Job#,5)][iter(lnum(strlen(%q1)),u(HEADER_[mid(%q1,##,1)]))])])%r
&CHROME_READ Job Database <JD>=%r[ansi(u,[ifelse(u(%va/EDIT_ACCESS,%#),[ansi(Xh,%b[rest(%0,_)]:%b)],[ansi(Xh,%b)])]|[ansi(Xhc,%b[extract(get(%1/%0),4,1,|)])]%b|[ansi(Xhu,repeat(%b,sub(28,strlen(extract(get(%1/%0),4,1,|)))))][ifelse(and(or(u(%va/IS_PUBLISHED,%1),switch(extract(get(%1/%0),3,1,|),u(%1/OPENED_BY),1,0),hasflag(%1/%0,no_inherit)),u(%va/IS_PUBLIC,%1)),|[ansi(Xc,%b+Published+%b)][ansi(Xh,|___)],[ansi(Xhu,repeat(%b,17))])][ansi(Xhu,[convsecs(extract(get(%1/%0),2,1,|))]%b)])]%r[space(4)][edit(last(get(%1/%0),|),@@PIPE@@,|)]
&CHROME_BREAK Job Database <JD>=switch(%0,,repeat(_,79),rjust(%[%0%],79,_))
@@
&WHITEBG_SKIN Job Database <JD>=1
&WHITEBG_JOBLIST Job Database <JD>=[setq(0,secure(ifelse(u(%va/fn_hasattrp,%1,JOBS),lcstr(mid(get(%1/JOBS),0,20)),get(%va/JOBS_DEFAULT))))][setq(1,ifelse(get(%0/DUE_ON),ifelse(gt(secs(),get(%0/DUE_ON)),r,switch(get(%0/PRIORITY),1,g,2,y,3,r,g)),switch(get(%0/PRIORITY),1,g,2,y,3,r)))][ifelse(u(%va/FN_ISNEW,%0,%1),[ansi(hr,*)]%b,%b%b)][ansi(%q1,[rjust([last(name(%0))],5)]%b[iter(lnum(strlen(%q0)),[u(%va/DISPLAY_[mid(%q0,##,1)],%0,%1)])])]
&WHITEBG_FOOTER Job Database <JD>=[ansi(x,switch(%0,,repeat(=,79),center(| [stripansi(%0)] |,79,=)))]
&WHITEBG_JOBSHEADER Job Database <JD>=[localize([u(FN_HEADER,Anomaly Jobs [u(VERSION)])]%r[setq(1,[secure(switch(u(%va/fn_hasattrp,%0,JOBS),1,lcstr(mid(get(%0/JOBS),0,20)),u(JOBS_DEFAULT)))])][ansi(c,*%b%b[ljust(Job#,5)][iter(lnum(strlen(%q1)),u(HEADER_[mid(%q1,##,1)]))])]%r[u(FN_BREAK)])]
&WHITEBG_HEADER Job Database <JD>=[ansi(x,switch(%0,,[repeat(=,79)],[center(| [stripansi(%0)] |,79,=)]))]
&WHITEBG_READ Job Database <JD>=[repeat(-,79)]%r[ifelse(u(%va/EDIT_ACCESS,%#),[ansi(x,%[)][ifelse(and(or(u(%va/IS_PUBLISHED,%1),switch(extract(get(%1/%0),3,1,|),u(%1/OPENED_BY),1,0),hasflag(%1/%0,no_inherit)),u(%va/IS_PUBLIC,%1)),ansi(c,[rest(%0,_)]+),ansi(c,[rest(%0,_)]-))][ansi(x,%])]%b,)][ansi(x,[extract(get(%1/%0),4,1,|)] added on [convsecs(extract(get(%1/%0),2,1,|))]: %b)][edit(last(get(%1/%0),|),@@PIPE@@,|)]
&WHITEBG_BUCKETHEADER Job Database <JD>=[u(FN_HEADER,Bucket List)]%r[ifelse(u(%va/FN_WIZONLY,%#),[ansi(c,[ljust(Name,9)][ljust(Flags,6)]%b%b[ljust(Description,30)][rjust(#Jobs,5)][rjust(Pct,5)][space(3)]C%b%bA%b%bD%b%bDue[space(3)]ARTS)],[ansi(c,[ljust(NAME,8)][ljust(Description,50)]%b[rjust(Viewing,20)])])]%r[u(FN_BREAK)]
&WHITEBG_STAFFSUM Job Database <JD>=[localize(%r[repeat(-,79)]%r[rjust(ansi(c,DB#:),10)] %0[space(10)][rjust(ansi(c,Comments:),10)] [setr(z,words(lattr(%0/COMMENT_*)))]%r%r[rjust(ansi(c,Players:),10)] %(Players contributing to this job%)%r[setq(y,setunion(iter(lattr(%0/COMMENT_*),extract(get(%0/##),4,1,|),%b,|),,|))][u(%va/fn_columns,%qy,20,|,11)][ifelse(u(%va/fn_hasattr,%0,LIST_READERS),%r[rjust(ansi(c,Readers:),10)] %(Players who have read this job in the past%)%r[setq(z,iter(get(%0/LIST_READERS),first(##,|)))][u(%va/fn_columns,map(%va/MAP_NAME,%qz,%b,|),20,|,11)],)][ifelse(u(%va/fn_hasattr,%0,TAGGED_FOR),%r[rjust(ansi(c,Tags:),10)] %(Players this job has been tagged for%)%r[u(%va/fn_columns,map(%va/MAP_NAME,get(%0/TAGGED_FOR),%b,|),20,|,11)],)]%r[rjust(ansi(c,Stats:),10)]%r[u(%va/fn_columns,iter(ifelse(u(%va/fn_hasattr,%0,LIST_STATS),sort(get(%0/LIST_STATS)),),[first(##,|)] [last(##,|)],%b,|),20,|,11)]%r)]
&WHITEBG_BANNER Job Database <JD>=[setq(0,%0)][setq(x,u(%va/FN_ITEMIZE,map(MAP_NAME,get(%q0/OPENED_BY),%b,|),|))][ljust([rjust(ansi(c,Bucket:),10)] [u(%va/FN_BUCKETNAME,%q0)],40)][rjust(ansi(c,Due On:),12)] [ifelse(get(%q0/DUE_ON),ifelse(gt(secs(),get(%q0/DUE_ON)),OVERDUE!,convsecs(get(%q0/DUE_ON))),-)]%r[ljust([rjust(ansi(c,Title:),10)] [get(%q0/TITLE)],40)][rjust(ansi(c,Status:),12)] [switch(get(%q0/PRIORITY),1,Green,2,Yellow,3,Red)] %([switch(get(%q0/STATUS),0,On Hold,1,New,2,Underway,3,25%%,4,50%%,5,75%%,6,100%%,?)]%)%r[ljust([rjust(ansi(c,Opened On:),10)] [convsecs(get(%q0/OPENED_ON))],40)][rjust(ansi(c,Assigned To:),12)] [ifelse(isdbref(get(%q0/ASSIGNED_TO)),name(get(%q0/ASSIGNED_TO)),Nobody)]%r[rjust(ansi(c,Opened By:),10)] %qx
@@
@switch first(version())=RhostMUSH,{&TRIG_MAIL Job Tracker=@mail %[remove%(%%0,owner%(me%)%)%]=%%1/%%2},PennMUSH,{&TRIG_MAIL Job Tracker=@mail %[remove%(%%0,owner%(me%)%)%]=%%1/%%2},{&TRIG_MAIL Job Tracker=@mail/quick %[remove%(%%0,owner%(me%)%)%]/%%1=%%2}
@cpattr Job Database <JD>/VA=Job Tracker/VA
@cpattr Job Database <JD>/VB=Job Tracker/VB
@cpattr Job Database <JD>/VC=Job Tracker/VC
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting up master parent.
@@
&daily Job Parent Object <JPO>=@dolist lcon(me)={@switch [u(%va/fn_hasattr,##,HOOK_AUT)]=1,{@trigger ##/HOOK_AUT=[u(%va/fn_trim,## [children(##)],b)],[owner(%va)]}}
@switch u(Job Database <JD>/FN_HASATTR,num(Job Parent Object <JPO>),STAT_ART)=0,&STAT_ART Job Parent Object <JPO>=0 0
@@
&HOOK_CKO Job Parent Object <JPO>=@cpattr %0/ASSIGNED_TO=%0/TEMP_ASN;&ASSIGNED_TO %0=%1
&HOOK_CKI Job Parent Object <JPO>=&ASSIGNED_TO %0=[get(%0/TEMP_ASN)];&TEMP_ASN %0=
&HOOK_MAI Job Parent Object <JPO>=@set %0/[last(sortby(%va/SORTBY_COMMENTS,lattr(%0/COMMENT_*)))]=no_inherit
&MLETTER_MAI Job Parent Object <JPO>=[name(%2)] is mailing you regarding [name(%0)]:%r%r%3%r[repeat(-,75)]%rUnless this letter indicates otherwise%, you should respond with the following command:%r%r[space(5)][ansi(h,+myjob/add [last(name(%0))]=<your comments>)]
&PLETTER_APR Job Parent Object <JPO>=[space(10)][ansi(h,Job:)] #[last(name(%0))]%r[space(8)][ansi(h,Title:)] [get(%0/TITLE)]%r[space(4)][ansi(h,Opened By:)] [u(%va/FN_PLAYERLIST,%0)]%r[space(4)][ansi(h,Opened On:)] [convsecs(get(%0/OPENED_ON))]%r%b[ansi(h,Completed By:)] [name(%2)]%r%b[ansi(h,Completed On:)] [time()]%r%r[last(get(%0/COMMENT_1),|)]%r[repeat(-,78)]%r[ansi(h,Comments from [name(%2)]:)] %3%r%rThis job was approved.
&PLETTER_DNY Job Parent Object <JPO>=[space(10)][ansi(h,Job:)] #[last(name(%0))]%r[space(8)][ansi(h,Title:)] [get(%0/TITLE)]%r[space(4)][ansi(h,Opened By:)] [u(%va/FN_PLAYERLIST,%0)]%r[space(4)][ansi(h,Opened On:)] [convsecs(get(%0/OPENED_ON))]%r%b[ansi(h,Completed By:)] [name(%2)]%r%b[ansi(h,Completed On:)] [time()]%r%r[last(get(%0/COMMENT_1),|)]%r[repeat(-,78)]%r[ansi(h,Comments from [name(%2)]:)] %3%r%rThis job was denied.
@@
@set Job Parent Object <JPO>/STAT_ART=NO_INHERIT
@@
@switch first(version())=RhostMUSH,{&FN_WIZONLY Job Database <JD>=%[gte%(bittype%(%%0%),5%)%]},{&FN_WIZONLY Job Database <JD>=%[hasflag%(%%0,WIZARD%)%]}
@switch first(version())=RhostMUSH,{&FN_STAFFALL Job Database <JD>=%[gte%(bittype%(%%0%),2%)%]},PennMUSH,{&FN_STAFFALL Job Database <JD>=%[orflags%(%%0,Wr%)%]},{&FN_STAFFALL Job Database <JD>=%[orflags%(%%0,WZ%)%]}
@@
@switch [first(version())]=TinyMUSH,{&BUFFER Job Database <JD>=4000},RhostMUSH,{&BUFFER Job Database <JD>=3999},{&BUFFER Job Database <JD>=8000}
@@
@switch [first(version())]=PennMUSH,{@set here=WIZARD},{@set here=INHERIT}
@switch [first(version())]=TinyMUSH,{@set here=COMMANDS},{@set here=!NO_COMMAND}
@switch [first(version())]=PennMUSH,{@set here=!HALT},{@set here=!HALTED}
@switch [first(version())]=RhostMUSH,{@set here=SIDEFX}
@switch [first(version())]=PennMUSH,{@set Job Database <JD>=WIZARD},{@set Job Database <JD>=INHERIT}
@switch [first(version())]=TinyMUSH,{@set Job Database <JD>=COMMANDS},{@set Job Database <JD>=!NO_COMMAND}
@switch [first(version())]=PennMUSH,{@set Job Database <JD>=!HALT},{@set Job Database <JD>=!HALTED}
@switch [first(version())]=RhostMUSH,{@set Job Database <JD>=SIDEFX}
@switch [first(version())]=TinyMUSH,{@set Job Tracker=!COMMANDS},{@set Job Tracker=NO_COMMAND}
@switch [first(version())]=PennMUSH,{@set Job Tracker=!HALT},{@set Job Tracker=!HALTED}
@switch [first(version())]=TinyMUSH,{@set Job Parent Object <JPO>=COMMANDS},{@set Job Parent Object <JPO>=!NO_COMMAND}
@switch [first(version())]=PennMUSH,{@set Job Parent Object <JPO>=!HALT},{@set Job Parent Object <JPO>=!HALTED}
@switch [first(version())]=RhostMUSH,{@set Job Parent Object <JPO>=SIDEFX}
@dolist lcon(Job Parent Object <JPO>)={@switch [first(version())]=PennMUSH,{@set ##=!HALT},{@set ##=!HALTED};@switch [first(version())]=TinyMUSH,{@set ##=COMMANDS},{@set ##=!NO_COMMAND};@set ##=UNFINDABLE;@switch [first(version())]=PennMUSH,{@set ##=WIZARD},{@set ##=INHERIT};}
@@
@@ Enter the JPO to update buckets.
@@
enter jpo
@@
@@ RP Bucket
&PROCESS_ARC RP=[setq(3,PLOT_ARC)][setq(1,u(%va/fn_strtrunc,%0,50))]
&PROCESS_PLAYERS RP=[setq(3,PLAYERS)][ifelse(not(gt(strlen(u(%va/fn_trim,squish(iter(%0,if(not(isdbref(pmatch(itext(0)))),[setr(p,itext(0))]))))),0)),[setq(9,iter(%0,pmatch(itext(0))))][setq(8,get(%1/PLAYERS))][iter(%q9,ifelse(gt(member(%q8,##),0),setq(8,setdiff(%q8,##)),setq(8,setunion(%q8,##))))][setq(1,%q8)]1,0)]
&PROCESS_SCHEDULE RP=[setq(3,SCHEDULE)][setq(1,u(%va/fn_strtrunc,%0,50))]1
&PROCESS_STAFF RP=[setq(3,WRITER)][ifelse(not(gt(strlen(u(%va/fn_trim,squish(iter(%0,if(not(isdbref(pmatch(itext(0)))),[setr(p,itext(0))]))))),0)),[setq(9,iter(%0,pmatch(itext(0))))][setq(8,get(%1/WRITER))][iter(%q9,ifelse(gt(member(%q8,##),0),setq(8,setdiff(%q8,##)),setq(8,setunion(%q8,##))))][setq(1,%q8)]1,0)]
&PROCESS_SYNOPSIS RP=[setq(3,BRIEF)][setq(1,%0)]1
&SUMMARY RP=[rjust(ansi(hc,Approved:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,APPROVED),get(%0/APPROVED),Unapproved)]%r[rjust(ansi(hc,Players:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,PLAYERS),u(%va/FN_ITEMIZE,map(me/MAP_NAME,get(%0/PLAYERS),%b,|),|),Nobody)]%r[rjust(ansi(hc,Schedule:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,SCHEDULE),get(%0/SCHEDULE),Unset)]%r[rjust(ansi(hc,Arc:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,PLOT_ARC),get(%0/PLOT_ARC),Unset)]%r[rjust(ansi(hc,Staff:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,WRITER),u(%va/FN_ITEMIZE,map(me/MAP_NAME,get(%0/WRITER),%b,|),|),Nobody)]%r[rjust(ansi(hc,Synopsis:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,BRIEF),get(%0/BRIEF),Unset)]
@@ TPS Bucket
&SUMMARY TPS=[rjust(ansi(hc,Approved:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,APPROVED),get(%0/APPROVED),Unapproved)]%r[rjust(ansi(hc,Players:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,PLAYERS),u(%va/FN_ITEMIZE,map(me/MAP_NAME,get(%0/PLAYERS),%b,|),|),Nobody)]%r[rjust(ansi(hc,Schedule:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,SCHEDULE),get(%0/SCHEDULE),Unset)]%r[rjust(ansi(hc,Arc:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,PLOT_ARC),get(%0/PLOT_ARC),Unset)]%r[rjust(ansi(hc,Staff:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,WRITER),u(%va/FN_ITEMIZE,map(me/MAP_NAME,get(%0/WRITER),%b,|),|),Nobody)]%r[rjust(ansi(hc,Synopsis:),10)]%b[ifelse(u(%va/fn_hasattrp,%0,BRIEF),get(%0/BRIEF),Unset)]
&PROCESS_PLAYERS TPS=[setq(3,PLAYERS)][ifelse(not(gt(strlen(u(%va/fn_trim,squish(iter(%0,if(not(isdbref(pmatch(itext(0)))),[setr(p,itext(0))]))))),0)),[setq(9,iter(%0,pmatch(itext(0))))][setq(8,get(%1/PLAYERS))][iter(%q9,ifelse(gt(member(%q8,##),0),setq(8,setdiff(%q8,##)),setq(8,setunion(%q8,##))))][setq(1,%q8)]1,0)]
&PROCESS_SCHEDULE TPS=[setq(3,SCHEDULE)][setq(1,u(%va/fn_strtrunc,%0,50))]1
&PROCESS_ARC TPS=[setq(3,PLOT_ARC)][setq(1,u(%va/fn_strtrunc,%0,50))]
&PROCESS_STAFF TPS=[setq(3,WRITER)][ifelse(not(gt(strlen(u(%va/fn_trim,squish(iter(%0,if(not(isdbref(pmatch(itext(0)))),[setr(p,itext(0))]))))),0)),[setq(9,iter(%0,pmatch(itext(0))))][setq(8,get(%1/WRITER))][iter(%q9,ifelse(gt(member(%q8,##),0),setq(8,setdiff(%q8,##)),setq(8,setunion(%q8,##))))][setq(1,%q8)]1,0)]
leave
@@ -------------------------------------------------------------------
@@ Version/Etc
@@
@@ -------------------------------------------------------------------
&CREDITS Job Database <JD>=Starfleet@Anomaly (eye1movies@aol.com)
&MAINTAINER Job Database <JD>=Halmar@Gamma One (grey419@gmail.com)
&CONTRIBUTORS Job Database <JD>=Firestorm@Ephemera, Grey@Anomaly, Ian@MUX, Minion@Crossroads
&LICENSE Job Database <JD>=You may port this code to any game provided that these credits remain intact. Please report any and all bugs, feedback or whatnot to the email address provided above. The most recent version of this code can be found at project's home: http://code.google.com/p/anomalyjobs/
&RELEASE Job Database <JD>=Dec ??, 2009
&VERSION Job Database <JD>=v5.2
&VERSION Job Parent Object <JPO>=v5.2
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Upgrade Complete.
@set me=!quiet
