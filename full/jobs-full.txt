
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Please wait.
-

@set me=quiet
-

@pemit %#=[repeat(=,79)]%r%r[center(ansi(hc,Setting up Anomaly Jobs v5.2),79)]%r%r[repeat(=,79)]
-

@pemit %#=[ansi(hc,ANOMALY JOBS:)] Creating objects.
-

@create Job Global Object <JGO>=10
-

@fo me=
{
	think [setq(0,create(Job Database <JD>,10))]
			[setq(1,create(Job Tracker,10))]
			[setq(2,create(Job Parent Object <JPO>,10))];
			&JOB_VA %#=%q0;&JOB_VB %#=%q1;&JOB_VC %#=%q2
}
-

@Desc Job Global Object <JGO>=%r[u(%va/fn_columns,sort(lattr(me/*)),18)]%r%r[center(Please do not rename this object.,79)]
-

@Desc Job Database <JD>=%r[u(%va/fn_columns,sort(lattr(me/*)),18)]%r%r[center(Please do not rename this object.,79)]
-

@Desc Job Parent Object <JPO>=%r[u(%va/fn_columns,sort(lattr(me/*)),18)]%r%r[center(Please do not rename this object.,79)]
-

@Desc Job Tracker=%r[u(%va/fn_columns,sort(lattr(me/*)),18)]%r%r[center(Please do not rename this object.,79)]
-

@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting up commands.
-

@Startup Job Global Object <JGO>=
	@drain me;
	@notify me
-

@adisconnect Job Global Object <JGO>=
	@pemit me=[ifelse(u(%va/HAS_ACCESS,%#),set(%#,LAST_CONN:[secs()]),)]
-

@aconnect Job Global Object <JGO>=
	@switch [u(%va/HAS_ACCESS,%#)]=1,{+jobs/new},{+myjobs}
-

&CMD_BUCKET/ACCESS Job Global Object <JGO>=
$+bucket/access *=*:
	@switch 
		[u(%va/GIVE_ACCESS,%#)]
		[setq(0,num(*%0))]
		[setq(1,u(%va/FN_FIND-BUCKET,%1))]
		[isdbref(%q0)]
		[isdbref(%q1)]
		[u(%va/HAS_ACCESS,%q0)]
		[u(%va/FN_WIZONLY,%q0)]			
		[u(%va/FN_ACCESSCHECK,%q1,%q0)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no player by that name.},
		110*,{@pemit %#=There is no bucket by that name.},
		1110*,{@pemit %#=That player does not have +jobs access.},
		11111*,{@pemit %#=That player can always access all buckets.},
		111100*,
			{
				@pemit %#=You have given [name(%q0)] access to the [name(%q1)] bucket.;
				&JOBSB %q0=
					[ifelse(
						member(get(%q0/JOBSB),%q1),
						remove(get(%q0/JOBSB),%q1),
						setunion(get(%q0/JOBSB),%q1)
					)]
			}
		,{
			@pemit %#=You have removed [name(%q0)]'s access to the [name(%q1)] bucket.;
			&JOBSB %q0=
				[ifelse(
					member(get(%q0/JOBSB),%q1),
					remove(get(%q0/JOBSB),%q1),
					setunion(get(%q0/JOBSB),%q1)
				)]
		 }
-

&CMD_BUCKET/CHECK Job Global Object <JGO>=
$+bucket/check *:
	@switch 
		[isdbref(setr(0,pmatch(%0)))]
		=
		0,{@pemit %#=There is no such player.},
		{
			@pemit %#=[u(%va/FN_HEADER,Bucket Information For [name(%q0)])]
			%r%r
			[ansi(h,[ljust(Bucket,15)]%bHas Access?)]%r
			[iter(
				lcon(%VC),
				[ljust(name(itext(0)),15)]%b
					[ifelse(
						u(%VA/fn_accesscheck,itext(0),%q0),
						Yes,
						No
					)]
				,%b,%r
			)];
			@pemit %#=%r[u(%va/FN_FOOTER)]
		 }
-

&CMD_BUCKET/CREATE Job Global Object <JGO>=
$+bucket/create *=*:
	@switch 
		[setq(0,u(%va/FN_FIND-BUCKET,%0))]
		[u(%va/FN_WIZONLY,%#)]
		[not(isdbref(%q0))]
		[not(gt(strlen(%0),5))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is already a bucket by that name.},
		110*,{@pemit %#=The name of a bucket is limited to five letters.},
		{
			@pemit %#=You have created a bucket named [ucstr(%0)].[setq(0,create(ucstr(%0),10))] Be sure to change %q0/ACCESS to establish who can access the bucket. Presently, it is set to 1, which means that anyone who can access +jobs can access the bucket.;
			@tel %q0=%vc;
			@parent %q0=%vc;
			@desc %q0=[secure(%1)];
			@set %q0=inherit !safe !halted !no_command;
			&ACCESS %q0=1;
			@lock/speech %q0=ACCESS/1
		 }
-

@switch [first(version())]
	=PennMUSH,{
		@edit Job Global Object <JGO>/CMD_BUCKET/CREATE=inherit !safe !halted,wizard !safe !halt
	},
	TinyMUSH,{
		@edit Job Global Object <JGO>/CMD_BUCKET/CREATE=!no_command,commands
	};
-

&CMD_BUCKET/DELETE Job Global Object <JGO>=
$+bucket/delete *:
	@switch 
		[u(%va/FN_WIZONLY,%#)]
		[setq(0,u(%va/FN_FIND-BUCKET,%0))]
		[isdbref(%q0)]
		[eq(words(children(%q0)),0)]
		[not(hasflag(%q0,SAFE))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no bucket by that name.},
		110*,{@pemit %#=The bucket is not empty, and cannot be deleted.},
		1110*,{@pemit %#=That bucket is required for the system to operate properly.},
		{
			@pemit %#=You have deleted the bucket named [ucstr(%0)].;
			@set %q0=DESTROY_OK;
			@nuke %q0;
			@dolist 
				[switch(
					first(version()),
					PennMUSH,lsearch(all,type,player),
					search(type=player)
				)]
				={
					&JOBSH ##=[remove(get(##/JOBSH),%q0)];
					&JOBSB ##=[remove(get(##/JOBSB),%q0)]
				 }
		 }
-

&CMD_BUCKET/HELP Job Global Object <JGO>=
$+bucket/help *:
	@switch 
		[setq(0,u(%va/FN_FIND-BUCKET,%0))]
		[u(%va/FN_ACCESSCHECK,%q0,%#)]
		[isdbref(%q0)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=That is not a valid bucket. Type '[ansi(h,+buckets)]' for a list of valid buckets.},
		{
			@pemit %#=[u(%va/FN_HEADER,Bucket Help For [name(%q0)])];
			@pemit %#=[u(%q0/HELP)];
			@pemit %#=[u(%va/FN_FOOTER)]
		 }
-

&CMD_BUCKET/INFO Job Global Object <JGO>=
$+bucket/info *:
	@switch 
		[u(%va/FN_STAFFALL,%#)]
		[setq(0,u(%va/FN_FIND-BUCKET,%0))]
		[isdbref(%q0)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no bucket by that name.},
		{
			@pemit %#=
				[u(%va/FN_HEADER,Bucket Information For [name(%q0)])]%r
				[u(%va/DISPLAY_BUCKET)];
			@pemit %#=[u(%va/DISPLAY_BUCKET2)];
			@pemit %#=[u(%va/FN_FOOTER)]
		 }
-

&CMD_BUCKET/MONITOR Job Global Object <JGO>=
$+bucket/monitor *:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-BUCKET,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,%q0,%#)]
		[u(%va/FN_MONITORCHECK,%q0,%#)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no bucket by that name.},
		110*,{@pemit %#=You do not have access to that bucket.},
		1110*,
			{
				@pemit %#=You have added bucket [name(%q0)] to your monitored list.;
				&JOBSH %#=
					[ifelse(
						u(%va/fn_hasattr,%q0,HIDDEN),
						setunion(get(%#/JOBSH),%q0),
						remove(get(%#/JOBSH),%q0)
					)]
			}
		,{
			@pemit %#=You have removed bucket [name(%q0)] from your monitored list.;
			&JOBSH %#=
				[ifelse(
					u(%va/fn_hasattr,%q0,HIDDEN),
					remove(get(%#/JOBSH),%q0),
					setunion(get(%#/JOBSH),%q0)
				)]
		 }
-

&CMD_BUCKET/SET Job Global Object <JGO>=
$+bucket/set */*=*:
	@switch 
		[setq(0,u(%va/FN_FIND-BUCKET,%0))]
		[and(
			u(%va/HAS_ACCESS,%#),
			u(%va/CONFIG_ACCESS,%#),
			u(%q0/ACCESS_%1,%#)
		)]
		[isdbref(%q0)]
		[u(%va/fn_hasattrp,%q0,ACCESS_%1)]
		[u(%q0/PROCESS_%1,%2,%q0,%#)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no bucket by that name. See '[ansi(h,+buckets)]' for a list of valid buckets.},
		110*,{@pemit %#='%1' is not a valid parameter. Valid parameters for [name(%q0)] are [u(%va/FN_ITEMIZE,map(%va/MAP_PARAMS,lattr(%vc/PROCESS_*)))].},
		1110*,{@pemit %#=[u(%q0/ERROR_%1%q2)]},
		{@pemit %#=[name(%q0)]'s [ucstr(%1)] successfully updated to: '%2'.;&%q3 %q0=%q1}
-

&CMD_BUCKETS Job Global Object <JGO>=
$+buckets:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		=
		0*,{@pemit %#=Permission denied.}
		,{
			@pemit %#=[u(%va/FN_BUCKETHEADER)];
			think [setq(x,sortby(%va/SORTBY_NAME,lcon(%vc)))];
			@pemit %#=
				[iter(
					filter(%va/FIL_ACCESS,%qx),
					u(%va/FN_BUCKETLIST,##),
					%B,%R
				)];
			@pemit %#=
				[u(%va/FN_FOOTER,
					[ifelse(
						u(%va/FN_STAFFALL,%#),
						ansi(hy,V=Viewing H=Hidden P=Published M=Myjobs L=Locked S=Summary),
					)]
				)]
		 }
-


&CMD_BUG Job Global Object <JGO>=
$+bug *=*:
	@switch 
		[not(haspower(%#,guest))]
		=
		0*,{@pemit %#=Permission Denied.},
		{
			@pemit %#=You have notified production staff of the [secure(u(%va/fn_strtrunc,%0,30))] bug, with the details '[secure(u(%va/fn_strtrunc,%1,get(%va/BUFFER)))]';
			@trigger %va/TRIG_CREATE=%#,locate(%vc,CODE,i),3,BUG: [u(%va/fn_strtrunc,%0,30)],[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],,,5
		 }
-

&CMD_JOB/ACT Job Global Object <JGO>=
$+job/act *:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[or(
			u(%va/FN_STAFFALL,%#),
			u(%va/FN_ACCESSCHECK,parent(%q0),%#)
		)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list by type.},
		110*,{@pemit %#=You do not have access to that job.},
		{
			@pemit %#=
				[u(%va/FN_HEADER,View Job Number %0)]%r
				[ulocal(%va/FN_BANNER,%q0)]%r
				[u(%va/FN_BREAK)];
			@dolist 
				sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))
				={
					@pemit %#=
						[rest(convsecs(extract(get(%q0/##),2,1,|)))]%b
						[first(get(%q0/##),|)]%b
						[ljust(u(%va/fn_strtrunc,extract(get(%q0/##),4,1,|),15),15)]%b
						[ljust(u(%va/fn_strtrunc,u(%va/fn_trim,edit(edit(edit(last(get(%q0/##),|),@@PIPE@@,|),%r,%b),%t,%b),b),35),35)]
				 };
			@wait 0={@pemit %#=[u(%va/FN_FOOTER)]};
		 }
-

&CMD_JOB/ADD Job Global Object <JGO>=
$+job/add *=*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=That is an invalid job number.},
		110*,{@pemit %#=You do not have access to that job.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@pemit %#=Comments to job number %0 added.;
			&tagged_for %q0=[setdiff(get(%q0/tagged_for),%#)];
			@trigger %va/TRIG_ADD=%q0,%1,%#,ADD;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Comments added to job %0 by %n.
		}
-

&CMD_JOB/ALL Job Global Object <JGO>=
$+job/all *:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		=0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},
		110*,{@pemit %#=You do not have access to that job.},
		{
			@pemit %#=
				[u(%va/FN_READERS,%q0,%#)]
				[u(%va/FN_HEADER,View [name(%q0)])]%r
				[ulocal(%va/FN_BANNER,%q0,%#)]
				[ifelse(
					u(%va/fn_hasattrp,%q0,SUMMARY),
					[ulocal(%va/FN_SUMMARY,%q0,%#)],
				)];
			@dolist 
				[sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))]
				={
					@pemit %#=[u(%va/FN_READJOB,##,%q0)]
				 };
			@wait 0={@pemit %#=[u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0))]};
		}
-

&CMD_JOB/APPROVE Job Global Object <JGO>=
$+job/approve *=*:
	@switch 
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/HAS_ACCESS,%#)]
		[u(%va/APPROVE_ACCESS,%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=There is no job by that number.},
		10*,{@pemit %#=Permission denied.},
		110*,{@pemit %#=Permission denied.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@pemit %#=
				[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)]
				[u(%va/FN_ADDSTAT_ART,%vc,%q0)]
				You have approved job #%0, adding the comments: %1;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been approved by %n.;
			@trigger %va/TRIG_ADD=%q0,[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],%#,APR;
			@trigger [parent(%q0)]/HOOK_APPROVE=%q0,%#;
			@trigger %va/TRIG_DESTROY=%q0
		}
-

&CMD_JOB/ASSIGN Job Global Object <JGO>=
$+job/assign *=*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(1,num(*%1))]
		[setq(2,switch(ucstr(%1),NONE,1,0))]
		[or(isdbref(%q1),%q2)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		[ifelse(
			%q2,
			1,
			u(%va/FN_ACCESSCHECK,parent(%q0),%q1)
		)]
		=0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no player by that name.},
		110*,{@pemit %#=That is not a valid job number.},
		1110*,{@pemit %#=You do not have access to that job.},
		11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		111110*,{@pemit %#=[name(%q1)] does not have access to that bucket.},
		{
			@pemit %#=You have assigned Job number %0 to [ifelse(isdbref(%q1),name(%q1),nobody)].;
			&ASSIGNED_TO %q0=[ifelse(%q2,,%q1)];
			@trigger %va/TRIG_ADD=%q0,
				[ifelse(
					%q2,
					Assignment removed.,
					Assigned to [name(%q1)]
				)].,
				%#,ASN,%q1;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been assigned to [ifelse(%q2,nobody,name(%q1))] by %n.
		}
-

&CMD_JOB/CHECKOUT Job Global Object <JGO>=
$+job/checkout *:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,secure(%0)))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		[not(u(%va/FN_HASATTR,%q0,CHECKOUT))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},
		110*,{@pemit %#=You do not have access to that job.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)].},
		11110*,{@pemit %#=That job is already checked out.},
		{
			@pemit %#=[u(%va/FN_READERS,%q0,%#)]You have checked out [name(%q0)]. Nobody but you will be able to modify it until you check it back in.;
			&CHECKOUT %q0=%# [secs()];
			@trigger %va/TRIG_ADD=%q0,Checked out by [name(%#)].,%#,CKO;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 checked out by [name(%#)].
		}
-

&CMD_JOB/CHECKIN Job Global Object <JGO>=
$+job/checkin *:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,secure(%0)))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[u(%va/FN_HASATTR,%q0,CHECKOUT)]
		[or(u(%va/FN_WIZONLY,%#),switch(first(get(%q0/CHECKOUT)),%#,1,0))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},
		110*,{@pemit %#=You do not have access to that job.},
		1110*,{@pemit %#=That job is not checked out.},
		11110*,{@pemit %#=You cannot check that job back in.},
		{
			@pemit %#=[u(%va/FN_READERS,%q0,%#)]You have checked [name(%q0)] back in.;
			&CHECKOUT %q0=;
			@trigger %va/TRIG_ADD=%q0,Checked in by [name(%#)].,%#,CKI;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 checked in by [name(%#)].
		}
-

&CMD_JOB/CLONE Job Global Object <JGO>=
$+job/clone *:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that number.},
		110*,{@pemit %#=You do not have access to that job.},
		{
			@pemit [setq(1,inc(get(%va/JOBS_NUM)))]%#=Job copied as Job %q1.;
			&JOBS_NUM %va=%q1;
			@clone %q0=Job %q1;
			@pemit me=[setq(2,num(Job %q1))];
			@tel %q2=%va;
			@trigger %va/TRIG_ADD=%q2,Cloned job.,%#,CLN,%q0;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 cloned by %n. New job is %q1.
		}
-

&CMD_JOB/COMPLETE Job Global Object <JGO>=
$+job/complete *=*:
	@switch 
		[u(%va/COMPLETE_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=That is not a valid job #. See '+jobs/all' for valid jobs.},
		110*,{@pemit %#=Permission denied.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have completed job # %0.;
			@trigger %va/TRIG_ADD=%q0,[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],%#,COM;
			@trigger %q0/HOOK_COMPLETE=%q0,%#;
			@trigger %vb/TRIG_COMPLETE=%0,%#,%1,[parent(%q0)];
			@trigger %va/TRIG_APPROVE=%q0;
			@trigger %va/TRIG_DESTROY=%q0
		}
-

&CMD_JOB/CREATE Job Global Object <JGO>=
$+job/create */*=*:
	@switch 
		[u(%va/CREATE_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-BUCKET,%0))]
		[u(%va/FN_ACCESSCHECK,%q0,%#)]
		[isdbref(%q0)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=You cannot access that bucket.},
		110*,{@pemit %#=There is no bucket by that name. Type '[ansi(h,+buckets)]' to get a list of buckets.},
		{
			@pemit [setq(1,inc(get(%va/JOBS_NUM)))]%#=You have created job number %q1 entitled '[u(%va/fn_strtrunc,%1,30)]'.;
			@trigger %va/TRIG_CREATE=%#,%q0,1,[u(%va/fn_strtrunc,%1,30)],[u(%va/fn_strtrunc,%2,u(%va/BUFFER))],,,1
		}
-

&CMD_JOB/DELETE Job Global Object <JGO>=
$+job/delete *:
	@switch 
		[or(
			u(%va/DELETE_ACCESS,%#),
			u(%va/FN_WIZONLY,%#),
			switch(
				%#,
				%va,1,
				0)
		)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=That is not a valid job number.},
		110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have deleted job # %0.;
			@trigger %va/TRIG_ADD=%q0,Job %0 Deleted,%#,DEL;
			@trigger [parent(%q0)]/HOOK_DELETE=%q0,%#;
			@trigger %va/TRIG_DESTROY=%q0
		}
-

&CMD_JOB/DENY Job Global Object <JGO>=
$+job/deny *=*:
	@switch 
		[or(
			u(%va/DENY_ACCESS,%#),
			u(%va/FN_STAFFALL,%#)
		)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that number.},
		110*,{@pemit %#=You cannot access that job.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@pemit %#=[u(%va/FN_ADDSTAT_ART,parent(%q0),%q0)][u(%va/FN_ADDSTAT_ART,%vc,%q0)]You have denied job #%0.;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been denied by %n.;
			@trigger %va/TRIG_ADD=%q0,[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],%#,DNY;
			@trigger [parent(%q0)]/HOOK_DENY=%q0,%#;
			@trigger %vb/TRIG_DENY=%0,%#,%1,[get(%q0/TITLE)];
			@trigger %va/TRIG_DESTROY=%q0
		}
-

&CMD_JOB/DUE Job Global Object <JGO>=
$+job/due *=*:
	@switch 
		[not(eq(words(%1,/),3))]
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[switch(
			lcstr(%1),
			none,2,
			switch(
				ifelse(
					eq(words(%1),4),
					convtime(XXX %1),
					convtime(%1)
				)
			,-1,0
			,1)
		)]
		=
		0*,{@@},
		10*,{@pemit %#=Permission denied.},
		110*,{@pemit %#=That is not a valid job number.},
		1110*,{@pemit %#=You do not have access to that job.},
		11110*,{@pemit %#=Invalid date. Use date formatting as '[rest(time())]'.},
		11112*,{
					@pemit %#=You have cleared Job Number %0's date.;
					&DUE_ON %q0=;
					@trigger %va/TRIG_ADD=%q0,Due date cleared.,%#,DUE;
					@trigger %va/TRIG_BROADCAST=[parent(%q0)],Due date cleared by %n for job [secure(%0)].
				 },
		{
			@pemit %#=You have set Job Number %0's date to %1.;
			&DUE_ON %q0=[ifelse(eq(words(%1),4),convtime(XXX %1),convtime(%1))];
			@trigger %va/TRIG_ADD=%q0,Due on [secure(%1)].,%#,DUE,[secure(%1)];
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Due date for job %0 set by %n.
		}
-

&CMD_JOB/DUE2 Job Global Object <JGO>=
$+job/due *=*/*/*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[isdbref(setr(0,u(%va/FN_FIND-JOB,%0)))]
		[setq(1,convtime(XXX 
			[switch(
				[rjust(%1,2,0)],
				01,Jan,
				02,Feb,
				03,Mar,
				04,Apr,
				05,May,
				06,Jun,
				07,Jul,
				08,Aug,
				09,Sep,
				10,Oct,
				11,Nov,
				12,Dec
			)] [rjust(%2,2,0)] 23:59:00 [switch(strlen(%3),2,20[rjust(%3,2,0)],%3)]))]
		[gt(%q1,0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=That is not a valid job number.},
		110*,{@pemit %#=Invalid date. Use date formatting as 'MM/DD/YY', '[rest(time())]', 'none' to clear.},
		1110*,{@pemit %#=You do not have access to that job.},
		{
			@pemit %#=You have set Job Number %0's date to [convsecs(%q1)].;
			&DUE_ON %q0=%q1;
			@trigger %va/TRIG_ADD=%q0,Due on [convsecs(%q1)].,%#,DUE;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Due date for job %0 set by %n.
		}
-

&CMD_JOB/EDIT Job Global Object <JGO>=
$+job/edit */*=*/*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[u(%va/EDIT_ACCESS,%#)]
		[isdbref(%q0)]
		[setq(1,get(%q0/COMMENT_%1))]
		[switch(first(%q1,|),ADD,1,CRE,1,0)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		[switch(
			extract(%q1,3,1,|),
			%#,1,
			u(%va/FN_WIZONLY,%#)
		)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=Permission denied.},
		110*,{@pemit %#=That is an invalid job number.},
		1110*,{@pemit %#=You cannot modify that entry.},
		11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		111110*,{@pemit %#=You can only edit entries that belong to you.},
		{
			&COMMENT_%1 %q0=[extract(%q1,1,4,|)]|[edit(last(%q1,|),edit(%2,|,@@PIPE@@),edit(%3,|,@@PIPE@@))];
			@pemit %#=Edited: [last(u(%q0/COMMENT_%1),|)];
			@trigger %va/TRIG_ADD=%q0,Comment %1 edited by %n.,%#,EDT,[secure(%1)];
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 edited by %n.
		}
-

&CMD_JOB/ERROR Job Global Object <JGO>=
$+job:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		=
		0*,{@pemit %#=Permission denied.},
		{@pemit %#=Type '+jobs' for a list of jobs, or '+job <#>' to view a specific job.}
-

&CMD_JOB/ESC Job Global Object <JGO>=
$+job/esc *=*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[setq(1,match(green yellow red,%1*))]
		[setq(2,extract(GREEN YELLOW RED,%q1,1))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[gt(%q1,0)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=That is not a valid job number.},
		110*,{@pemit %#=You do not have access to that job.},
		1110*,{@pemit %#=That is not a valid escalation code. Valid codes are red, yellow, and green.},
		11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@pemit %#=You have escalated job # %0 to %q2 status.;
			&PRIORITY %q0=%q1;
			@trigger %va/TRIG_ADD=%q0,Priority To %q2.,%#,ESC,ucstr(secure(%1));
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)] set to %q2 priority by %n.
		}
-

&CMD_JOB/LAST Job Global Object <JGO>=
$+job/last *=*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list by type.},
		110*,{@pemit %#=You do not have access to that job.},
		{
			@pemit %#=[u(%va/FN_HEADER,View [name(%q0)])]%r[ulocal(%va/FN_BANNER,%q0)];
			@dolist 
				[extract(
					setr(1,
						filter(
							%va/FIL_COMMENTS,
							sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))
						)
					),
					ifelse(
						lt(sub(words(%q1),%1),1),
						1,
						inc(sub(words(%q1),%1))
					),
					inc(%1)
				)]
				={
					@pemit %#=[u(%va/FN_READJOB,##,%q0)]
				 };
			@wait 0={@pemit %#=[u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0))]};
		}
-

&CMD_JOB/LOCK Job Global Object <JGO>=
$+job/lock *:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/fn_hasattr,%q0,LOCKED))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=That is an invalid job number.},
		110*,{@pemit %#=You do not have access to that job.},
		1110*,{@pemit %#=That job is already locked.},
		{
			@pemit %#=You have locked job %0. No further modifications can be made to this job until it is unlocked.;
			&LOCKED_BY %q0=%#;
			&LOCKED %q0=1;
			@trigger %va/TRIG_ADD=%q0,Locked by %n.,%#,LOK;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 locked by %n.
		}
-

&CMD_JOB/LOG Job Global Object <JGO>=
$+job/log *:
	@switch 
		[and(
			u(%va/HAS_ACCESS,%#),
			u(%va/LOG_ACCESS,%#)
		)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[or(
			u(%va/FN_STAFFALL,%#),
			u(%va/ACCESS_[parent(%q0)],%#)
		)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list by type.},
		110*,{@pemit %#=You do not have access to that job.},
		{
			@pemit %#=Logging Job %0 to game/log[switch(
				first(version()),
				PennMUSH,/command.log,
				s/M-[get(%q0/LOGFILE)].log%rNote that if the log file does not exist, then it did not get logged.
			)];
			@trigger %va/TRIG_LOG=%q0,%#
		}
-

&CMD_JOB/MAIL Job Global Object <JGO>=
$+job/mail *=*:
	@switch 
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/HAS_ACCESS,%#)]
		[u(%va/MAIL_ACCESS,%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=There is no job by that number.},
		10*,{@pemit %#=Permission denied.},
		110*,{@pemit %#=Permission denied.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@pemit %#=You have mailed [u(%va/FN_PLAYERLIST,%q0)] about job #%0, with the comments: %1;
			@trigger %va/TRIG_ADD=%q0,[u(%va/fn_strtrunc,ansi(h,Mail sent to [u(%va/FN_PLAYERLIST,%q0)]:)%r%r%1,get(%va/BUFFER))],%#,MAI;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Mail sent about job #%0 by %n.
		}
-

&CMD_JOB/MERGE Job Global Object <JGO>=
$+job/merge *=*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%1))]
		[setq(1,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q1)]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[u(%va/FN_ACCESSCHECK,parent(%q1),%#)]
		[setq(2,u(%q0/NUM_COMMENT))]
		[setq(3,u(%q1/NUM_COMMENT))]
		[and(
			not(u(%va/IS_LOCKED,%q0,%#)),
			not(u(%va/fn_hasattrp,%q1,LOCKED))
		)]
		[not(eq(%0,%1))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job number %0.},
		110*,{@pemit %#=There is no job number %1.},
		1110*,{@pemit %#=You do not have access to [name(%q0)].},
		11110*,{@pemit %#=You do not have access to [name(%q1)].},
		111110*,{@pemit %#=One of those jobs is locked or checked out.},
		1111110*,{@pemit %#=Sort of like a Klein bottle, eh?},
		{
			@trigger %va/TRIG_ADD=%q0,Job [secure(%0)] merged into this one.,%#,MRG;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 has been merged into Job %1 by %n;
			@wait 0=
			{
				@dolist 
					[sortby(%va/SORTBY_COMMENTS,lattr(%q1/COMMENT_*))]
					={
						@cpattr %q1/##=%q0/COMMENT_[get(%q0/NUM_COMMENT)];
						&NUM_COMMENT %q0=[inc(get(%q0/NUM_COMMENT))]
					 };
				@trigger %va/TRIG_DESTROY=%q1
			}
		};
-

&CMD_JOB/NAME Job Global Object <JGO>=
$+job/name *=*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that name.},
		110*,{@pemit %#=You do not have access to that job.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@pemit %#=You have changed the name of Job %0 to %1.;
			&TITLE %q0=[secure(%1)];@trigger %va/TRIG_ADD=%q0,Renamed to '[secure(%1)]'.,%#,NAM;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],%n has renamed job %0.
		}
-

&CMD_JOB/NEW Job Global Object <JGO>=
$+job/new *:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[setq(1,default(%#/LAST_CONN,0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list jobs by type.},
		110*,{@pemit %#=You do not have access to that job.},
		{
			@pemit %#=
				[u(%va/FN_HEADER,View Job Number %0)]%r
				[ulocal(%va/FN_BANNER,%q0)]
				[ifelse(
					u(%va/fn_hasattrp,%q0,SUMMARY),
					[ulocal(%va/FN_SUMMARY,%q0)],
				)];
			@dolist 
				[filter(
					%va/FIL_NEWCOMMENTS[default(%#/JOBSN,0)],
					sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))
				)]
				=
				{
					@pemit %#=[u(%va/FN_READJOB,##,%q0)]
				};
				@wait 0={
					@pemit %#=
						[ifelse(
							u(%va/IS_LOCKED,%q0,%#),
							u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0)),
							[u(%va/FN_FOOTER,New Activity on Job %0 since [convsecs(%q1)])])][u(%va/FN_READERS,%q0,%#
						)]
				};
			}
-

&CMD_JOB/PUBLISH Job Global Object <JGO>=
$+job/publish *:
	@switch 
		[eq(words(%0,=),1)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[u(%va/HAS_ACCESS,%#)]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[u(%va/fn_hasattrp,%q0,PUBLIC)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		[eq(u(%q0/PUBLISH),1)]
		=
		0*,@@,
		10*,{@pemit %#=Permission denied.},
		110*,{@pemit %#=There is no job by that number.},
		1110*,{@pemit %#=You do not have access to that job.},
		11110*,{@pemit %#=That job is not in a bucket that is accessible to +myjobs, so publication is moot.},
		111110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		1111110*,
		{
			@pemit %#=You have published Job %0.;
			&PUBLISH %q0=1;
			@trigger %va/TRIG_ADD=%q0,Published by %n.,%#,PUB;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 published by %n.
		},
		{
			@pemit %#=Job %0 will now no longer be published.;
			&PUBLISH %q0=0;
			@trigger %va/TRIG_ADD=%q0,Unpublished by %n.,%#,UNP;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 unpublished by %n.
		}
-

&CMD_JOB/PUBLISH2 Job Global Object <JGO>=
$+job/publish *=*:
	@switch 
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[and(
			u(%va/HAS_ACCESS,%#),
			u(%va/EDIT_ACCESS,%#)
		)]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		[u(%va/IS_PUBLIC,%q0)]
		[u(%va/fn_hasattrp,%q0,COMMENT_%1)]
		[hasflag(%q0/COMMENT_%1,no_inherit)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that number.},
		110*,{@pemit %#=You do not have access to that job.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		11110*,{@pemit %#=That job is not in a bucket that is accessible to +myjobs, so publication is moot.},
		111110*,{@pemit %#=That is not a valid comment number.},
		1111110*,
		{
			@pemit %#=You have published Comment %1 on Job %0.;
			@set %q0/COMMENT_%1=no_inherit;
			@trigger %va/TRIG_ADD=%q0,Comment [secure(%1)] published by %n.,%#,PUB;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job [secure(%0)]/Comment [secure(%1)] published by %n.
		},
		{
			@pemit %#=Job %0/Comment %1 will no longer be published.;
			@set %q0/COMMENT_%1=!no_inherit;
			@trigger %va/TRIG_ADD=%q0,Comment [secure(%1)] Unpublished by %n.,%#,UNP;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job [secure(%0)]/Comment [secure(%1)] unpublished by %n.
		}
-

&CMD_JOB/QUERY Job Global Object <JGO>=
$+job/query */*=*:
	@switch 
		[and(
			u(%va/HAS_ACCESS,%#),
			u(%va/MAIL_ACCESS,%#)
		)]
		=
		0*,{@pemit %#=Permission denied.},
		{
			@switch 
				[map(%va/MAP_ISPLAYER,%0)]
				=
				*0*,{@pemit %#=There is a problem with the player list.},
				{
					@pemit %#=[setq(a,map(%va/MAP_PMATCH,%0,%b,|))]You have sent a query to '%0' regarding '%1'.;
					@trigger %va/TRIG_CREATE=%#,locate(%vc,QUERY,i),2,[u(%va/fn_strtrunc,secure(%1),30)],Queried [u(%va/FN_ITEMIZE,map(%va/MAP_NAME,%qa,|,|),|)]:%r%r[u(%va/fn_strtrunc,%2,get(%va/BUFFER))],[edit(%qa,|,%b)],,0
				}
		}
-

&CMD_JOB/SET Job Global Object <JGO>=
$+job/set *=*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[setq(2,dec(member(setr(a,HOLD NEW UNDERWAY 25 50 75 100),ucstr(%1))))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[and(isnum(%q2),gt(%q2,-1),lt(%q2,7))]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=That is not a valid job.},
		110*,{@pemit %#=You do not have access to that job.},
		1110*,{@pemit %#=That is an invalid setting. Valid job settings are:%r[u(%va/FN_ITEMIZE,lcstr(%qa))].},
		11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@pemit %#=You set Job Number [secure(%0)] to [setq(1,switch(%q2,0,ON HOLD,1,NEW,2,UNDERWAY,3,1/4 COMPLETE,4,1/2 COMPLETE,5,3/4 COMPLETE,COMPLETE))]%q1 status.;
			&STATUS %q0=%q2;
			@trigger %va/TRIG_ADD=%q0,Set to %q1.,%#,STA;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Status set to %q1 on Job %0.
		}
-

&CMD_JOB/SOURCE Job Global Object <JGO>=
$+job/source *=*:
	@switch 
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/HAS_ACCESS,%#)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		[setq(1,map(%va/MAP_SOURCE,secure(%1)))]
		[setq(2,member(%q1,#-1))]
		[ifelse(gt(%q2,0),0,1)]
		=
		0*,{@pemit %#=There is no job by that number.},
		10*,{@pemit %#=Permission denied.},
		110*,{@pemit %#=Permission denied.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		11110*,{@pemit %#='[extract(secure(%1),%q2,1)]' is not a valid player.},
		{
			&opened_by %q0=%q1;
			@pemit %#=You have set job #%0 to have a source of [u(%va/FN_PLAYERLIST,%q0)].;
			@trigger %va/TRIG_ADD=%q0,Source changed to [u(%va/FN_PLAYERLIST,%q0)].,%#,SRC;
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 source changed by %n.
		}
-

&CMD_JOB/SUMMARY Job Global Object <JGO>=
$+job/summary *:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},
		110*,{@pemit %#=You do not have access to that job.},
		{
			@pemit %#=
				[u(%va/FN_HEADER,View [name(%q0)])]%r
				[ulocal(%va/FN_BANNER,%q0)]
				[ifelse(
					u(%va/fn_hasattrp,%q0,SUMMARY),
					[ulocal(%va/FN_SUMMARY,%q0)],
				)]
				[ifelse(
					u(%va/FN_WIZONLY,%#),
					[ulocal(%va/FN_STAFFSUM,%q0)],
				)];
			@wait 0=
			{
				@pemit %#=[u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0))]
			};
		}
-

&CMD_JOB/SUMSET Job Global Object <JGO>=
$+job/sumset */*=*:
	@switch 
		[u(%va/HAS_ACCESS,%#)]
		[isdbref(setr(0,u(%va/FN_FIND-JOB,%0)))]
		[u(%va/fn_hasattrp,%q0,ACCESS_%1)]
		[and(u(%va/CONFIG_ACCESS,%#),u(%q0/ACCESS_%1,%#))]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		[u(%q0/PROCESS_%1,%2,%q0,%#)]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=There is no such job. See '[ansi(h,+jobs)]' for a list of valid jobs.},
		110*,{
			@pemit %#='%1' is not a valid parameter. Valid parameters for [name(%q0)] are 
				[u(%va/FN_ITEMIZE,
					map(%va/MAP_PARAMS,
						lattr(parent(%q0)/PROCESS_*)
					)
				)].
		},
		1110*,{@pemit %#=You either can not use the +job/sumset command, or set that parameter.},
		11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		111110*,{@pemit %#=[u(%q0/ERROR_%1%q2)]},
		{
			@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)]'s [ucstr(%1)] parameter updated by %n.;
			&%q3 %q0=%q1;
			@trigger %va/TRIG_ADD=%q0,[ucstr(%1)] parameter updated to '%2',%#,SUM
		}
-

&CMD_JOB/TAG Job Global Object <JGO>=
$+job/tag *:
	@switch 
		[switch(strmatch(%0,*=*),
			1,
				[setq(8,secure(first(%0,=)))]
				[setq(9,secure(rest(%0,=)))],
			[setq(8,secure(%0))][setq(9,%#)]
		)]
		[setq(7,iter(%q9,pmatch(itext(0))))]
		[setq(6,
			u(%va/fn_trim,
				squish(
					iter(%q9,
						if(
							not(isdbref(pmatch(itext(0)))),
								I don't recognize '##' as a player.
						)
					)
				)
			)
		)]
		[u(%va/HAS_ACCESS,%#)]
		[setq(0,u(%va/FN_FIND-JOB,%q8))]
		[isdbref(%q0)]
		[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
		[not(u(%va/IS_LOCKED,%q0,%#))]
		=
		0*,{@pemit %#=Permission denied.},
		10*,{@pemit %#=That is an invalid job number.},
		110*,{@pemit %#=You do not have access to that job.},
		1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
		{
			@switch 
			[gt(strlen(%q6),0)]=1,
			{
				@pemit %#=%q6
			},{
				@switch 
				[strlen(setdiff(%q7,get(%q0/tagged_for)))]=0,
				{
					@pemit %#={[name(%q0)] is already tagged for the named player(s): [iter(%q7,name(##))]}
				},{
					&tagged_for %q0=[setunion(get(%q0/tagged_for),%q7)];
					@trigger %va/TRIG_ADD=%q0,Added tags for [setr(5,iter(%q7,name(##)))],%#,TAG,%q7;
					@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)] updated - tagged by %n for %q5.;
					@pemit %#={Job %q8 updated - tags added. Now tagged for: [iter(get(%q0/tagged_for),name(##))]}
				}
			}
		}
-

&CMD_JOB/TRANS Job Global Object <JGO>=
$+job/trans *=*:
	@switch 
	[u(%va/HAS_ACCESS,%#)]
	[setq(0,u(%va/FN_FIND-JOB,%0))]
	[isdbref(%q0)]
	[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
	[isdbref(setr(1,u(%va/FN_FIND-BUCKET,%1)))]
	[not(u(%va/IS_LOCKED,%q0,%#))]
	=
	0*,{@pemit %#=Permission denied.},
	10*,{@pemit %#=There is no job by that number.},
	110*,{@pemit %#=You do not have access to that job.},
	1110*,{@pemit %#=There is no bucket by that name. Type '[ansi(h,+buckets)]' for a list of valid buckets.},
	11110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
	{
		@pemit %#=You have transferred the job from [u(%va/FN_BUCKETNAME,%q0)] to [name(%q1)].;
		@set %q0=!going;
		&going %q0;
		@parent %q0=%q1;
		@trigger %va/TRIG_ADD=%q0,Transferred to [name(%q1)].,%#,TRN;
		@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 transferred to [name(%q1)] by [name(%#)].
	}
-

&CMD_JOB/UNLOCK Job Global Object <JGO>=
$+job/unlock *:
	@switch 
	[u(%va/HAS_ACCESS,%#)]
	[setq(0,u(%va/FN_FIND-JOB,%0))]
	[isdbref(%q0)]
	[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
	[u(%va/fn_hasattrp,%q0,LOCKED)]
	=
	0*,{@pemit %#=Permission denied.},
	10*,{@pemit %#=That is an invalid job number.},
	110*,{@pemit %#=You do not have access to that job.},
	1110*,{@pemit %#=That job is not locked.},
	{
		@pemit %#=You have unlocked job %0.;
		&LOCKED %q0=;
		&LOCKED_BY %q0=;
		@trigger %va/TRIG_ADD=%q0,Unlocked by %n.,%#,UNL;
		@trigger %va/TRIG_BROADCAST=[parent(%q0)],Job %0 unlocked by %n.
	}
-

&CMD_JOB/UNTAG Job Global Object <JGO>=
$+job/untag *:
	@switch 
	[switch(strmatch(%0,*=*),
		1,
			[setq(8,secure(first(%0,=)))]
			[setq(9,secure(rest(%0,=)))],
		[setq(8,secure(%0))]
		[setq(9,%#)]
	)]
	[setq(7,iter(%q9,pmatch(##)))]
	[setq(6,
		u(%va/fn_trim,
			squish(
				iter(%q9,
					if(not(isdbref(pmatch(##))),
						I don't recognize '##' as a player.
					)
				)
			)
		)
	)]
	[u(%va/HAS_ACCESS,%#)]
	[setq(0,u(%va/FN_FIND-JOB,%q8))]
	[isdbref(%q0)]
	[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
	[not(u(%va/IS_LOCKED,%q0,%#))]
	=
	0*,{@pemit %#=Permission denied.},
	10*,{@pemit %#=That is an invalid job number.},
	110*,{@pemit %#=You do not have access to that job.},
	1110*,{@pemit %#=That job is presently [ifelse(u(%va/fn_hasattrp,%q0,CHECKOUT),checked out to [name(first(get(%q0/CHECKOUT)))],locked)]},
	{
		@switch 
		[gt(strlen(%q6),0)]=1,
		{
			@pemit %#=%q6
		},{
			@switch 
			[strlen(setinter(%q7,get(%q0/tagged_for)))]=0,
			{
				@pemit %#={[name(%q0)] is not tagged for any of the named player(s): [iter(%q7,name(##))]}
			},{
				&tagged_for %q0=[setdiff(get(%q0/tagged_for),%q7)];
				@trigger %va/TRIG_ADD=%q0,Removed tags for [setr(5,iter(%q7,name(##)))],%#,TAG;
				@trigger %va/TRIG_BROADCAST=[parent(%q0)],[name(%q0)] updated - untagged by %n for %q5.;
				@pemit %#={Job %q8 updated - tags removed. Now tagged for: [iter(get(%q0/tagged_for),name(##))]}
			}
		}
	}
-

&CMD_JOB/VIEW Job Global Object <JGO>=
$+job *:
	@switch 
	[u(%va/HAS_ACCESS,%#)]
	[setq(0,u(%va/FN_FIND-JOB,%0))]
	[isdbref(%q0)]
	[u(%va/FN_ACCESSCHECK,parent(%q0),%#)]
	=
	0*,{@pemit %#=Permission denied.},
	10*,{@pemit %#=There is no job by that name. Please type '[ansi(h,+jobs/all)]' for all jobs or '[ansi(h,+jobs/list <bucket>)]' to list by bucket.},
	110*,{@pemit %#=You do not have access to that job.},
	{
		@pemit %#=
			[u(%va/FN_READERS,%q0,%#)]
			[u(%va/FN_HEADER,View [name(%q0)])]%r
			[ulocal(%va/FN_BANNER,%q0,%#)]
			[ifelse(u(%va/fn_hasattrp,%q0,SUMMARY),[ulocal(%va/FN_SUMMARY,%q0,%#)],)];
		@dolist 
			[filter(%va/FIL_COMMENTS,sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*)))]
		={
			@pemit %#=[u(%va/FN_READJOB,##,%q0)]
		};
		@wait 0={
			@pemit %#=[u(%va/FN_FOOTER,u(%va/FN_FLAGS,%q0))]
		};
	}
-

&CMD_JOBS Job Global Object <JGO>=
$+jobs:
	@switch 
	[u(%va/HAS_ACCESS,%#)]=0*,{
		@pemit %#=Permission denied.
	},{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			[revwords(lcon(%va))]
		={
			@pemit %#=
				[ifelse(
					u(%va/FN_MONITORCHECK,parent(##),%#),
						[u(%va/FN_JOBLIST,##,%#)],
				)]
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/ALL Job Global Object <JGO>=
$+jobs/all:
	@switch 
	[u(%va/HAS_ACCESS,%#)]=0,
	{
		@pemit %#=Permission denied.
	},{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			[filter(%va/FIL_GOING,revwords(lcon(%va)))]
		={
			@pemit %#=
				[ifelse(
					u(%va/FN_ACCESSCHECK,[parent(##)],%#),
						u(%va/FN_JOBLIST,##,%#),
				)];
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/CLEAN Job Global Object <JGO>=
$+jobs/clean:
	@switch [u(%va/HAS_ACCESS,%#)]=0*,
	{
		@pemit %#=Permission denied.
	},{
		@trigger %va/TRIG_CLEAN;
		@pemit %#=Removing all non-player entries from Job Data.
	}
-

&CMD_JOBS/COMPRESS Job Global Object <JGO>=
$+jobs/compress:
	@switch [u(%va/FN_WIZONLY,%#)]=0*,
	{
		@pemit %#=Permission denied.
	},{
		@dolist 
			[lnum(1,words(lcon(%va)))]
		={
			@name [extract(revwords(lcon(%va)),##,1)]=Job ##
		};
		&JOBS_NUM %va=[words(lcon(%va))];
		@pemit %#=Compressed. The next job number will be [inc(get(%va/JOBS_NUM))].
	}
-

&CMD_JOBS/CREDITS Job Global Object <JGO>=
$+jobs/credits:
	@pemit %#=
		[u(%va/FN_HEADER,Anomaly Jobs)]%r%r
		Version: [u(%va/VERSION)][space(5)]Release: [u(%va/RELEASE)]%r%r
		Author: [u(%va/CREDITS)]%r%r
		Maintainer: [u(%va/MAINTAINER)]%r%r
		Contributors: [u(%va/CONTRIBUTORS)]%r%r
		[u(%va/LICENSE)]%r%r
		[u(%va/FN_FOOTER)]
-

&CMD_JOBS/DATE Job Global Object <JGO>=
$+jobs/date:
	@switch [u(%va/HAS_ACCESS,%#)]=0*,
	{
		@pemit %#=Permission denied.;
	},{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			[sortby(%va/SORTBY_DATE,lcon(%va))]
		={
			@pemit %#=[ifelse(u(%va/FN_MONITORCHECK,parent(##),%#),[u(%va/FN_JOBLIST,##,%#)],)]
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-	

&CMD_JOBS/LIST Job Global Object <JGO>=
$+jobs/list *:
	@switch 
	[setq(0,u(%va/FN_FIND-BUCKET,%0))]
	[u(%va/FN_ACCESSCHECK,%q0,%#)]
	[isdbref(%q0)]
	=
	0*,{@pemit %#=Permission denied.},
	10*,{@pemit %#=That is not a valid bucket. Type '[ansi(h,+buckets)]' for a list of valid buckets.},
	{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			[munge(%va/SORTBY_JOB,
				iter(children(%q0),
					rest(name(##))
				),
				children(%q0)
			)]
		={
			@pemit %#=[u(%va/FN_JOBLIST,##,%#)]
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/MINE Job Global Object <JGO>=
$+jobs/mine:
	@switch [u(%va/HAS_ACCESS,%#)]=0*,{
		@pemit %#=Permission denied.
	},{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			[filter(%va/FIL_MINE,revwords(lcon(%va)))]
		={
			@pemit %#=[u(%va/FN_JOBLIST,##,%#)]
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/NEW Job Global Object <JGO>=
$+jobs/new:
	@switch [setq(0,%#)][u(%va/HAS_ACCESS,%#)]=0*,{
		@pemit %#=Permission denied.
	},{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			[filter(%va/FIL_NEW[default(%#/JOBSN,0)],revwords(lcon(%va)))]
		={
			@pemit %#=
				[ifelse(
					u(%va/FN_ACCESSCHECK,parent(##),%#),
						u(%va/FN_JOBLIST,##,%#),
				)]
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/OVERDUE Job Global Object <JGO>=
$+jobs/overdue:
	@switch [u(%va/HAS_ACCESS,%#)]=0*,{
		@pemit %#=Permission denied.;
	},{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			[filter(%va/FIL_OVERDUE,revwords(lcon(%va)))]
		={
			@pemit %#=
				[ifelse(
					u(%va/FN_MONITORCHECK,parent(##),%#),
						[u(%va/FN_JOBLIST,##,%#)],
				)]
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/PRI Job Global Object <JGO>=
$+jobs/pri:
	@switch [u(%va/HAS_ACCESS,%#)]=0*,{
		@pemit %#=Permission denied.
	},{
		&JOBS_PRI %va=[sortby(%va/SORTBY_PRI,lcon(%va))];
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			[revwords(get(%va/JOBS_PRI))]
		={
			@pemit %#=
				[ifelse(
					and(
						u(%va/FN_ACCESSCHECK,[parent(##)],%#),
						u(%va/FN_MONITORCHECK,parent(##),%#)
					),
						u(%va/FN_JOBLIST,##,%#),
				)]
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/REPORTS Job Global Object <JGO>=
$+jobs/reports *:
	@switch 
	[and(u(%va/HAS_ACCESS,%#),u(%va/STATS_ACCESS,%#))]
	[u(%va/fn_hasattr,%va,REPORT_[first(%0,=)])]
	[eq(words(%0,=),2)]
	=
	0*,{@pemit %#=Permission denied.},
	10*,{@pemit %#=There is no report by that name. See '[ansi(h,+jobs/reports)]' for a list of valid reports.},
	110*,{
		@pemit %#=[u(%va/FN_HEADER,[secure(first(ucstr(%0),=))] Report)]%r;
		@pemit %#=[u(%va/REPORT_[secure(%0)])];
		@pemit %#=[u(%va/FN_FOOTER)]
	},{
		@pemit %#=
			[setq(0,first(secure(%0),=))]
			[setq(1,last(secure(%0),=))]
			[u(%va/FN_HEADER,[secure(first(ucstr(%0),=))] Report)]%r;
		@pemit %#=[u(%va/REPORT_%q0,%q1)];
		@pemit %#=[u(%va/FN_FOOTER)]
	}
-

&CMD_JOBS/REPORTS2 Job Global Object <JGO>=
$+jobs/reports:
	@switch 
		[and(
			u(%va/HAS_ACCESS,%#),
			u(%va/STATS_ACCESS,%#)
		)]=0,
	{
		@pemit %#=Permission denied.
	},{
		@pemit %#=
			[u(%va/FN_HEADER,Available Reports)]%r
			[ansi(hc,[ljust(Name,10)][ljust(Description,59)][rjust(Type,10)])]%r
			[u(%va/FN_BREAK)];
		@pemit %#=
			[iter(
				sort(
					ucstr(
						map(%va/MAP_REPORTS,lattr(%va/REPORT_*))
					)
				),
				[ljust(##,10)][ljust(rest(get(%va/RTITLE_##),|),59)][rjust(first(get(%va/RTITLE_##),|),10)],
				%B,%R
			)];
		@pemit %#=[u(%va/FN_FOOTER,[ansi(h,+jobs/reports <report>)])]
	}
-

&CMD_JOBS/SEARCH Job Global Object <JGO>=
$+jobs/search *:
	@switch [u(%va/HAS_ACCESS,%#)]=0*,{
		@pemit %#=Permission denied.
	},{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			revwords(lcon(%va))
		={
			@pemit [setq(0,%b)]%#=
				ifelse(
					and(
						u(%va/FN_ACCESSCHECK,parent(##),%#),
						gt(
							words(
								grepi(##,*,%0)
							),
							0
						)
					),
						[u(%va/FN_JOBLIST,##,%#)],
				)
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/SORT Job Global Object <JGO>=
$+jobs/sort:
	@switch [u(%va/HAS_ACCESS,%#)]=0*,{
		@pemit %#=Permission denied.;
	},{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			sortby(%va/SORTBY_SORT,lcon(%va))
		={
			@pemit %#=
				[ifelse(u(%va/FN_MONITORCHECK,parent(##),%#),[u(%va/FN_JOBLIST,##,%#)],)]
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/WHO Job Global Object <JGO>=
$+jobs/who *:
	@switch 
	[u(%va/HAS_ACCESS,%#)]
	[setq(0,pmatch(%0))]
	[or(match(%0,none),isdbref(%q0))]
	=
	0*,{@pemit %#=Permission denied.},
	10*,{@pemit %#={There is no player by that name. Request must be by player or 'none'.}},
	{
		@pemit %#=[u(%va/FN_JOBSHEADER,%#)];
		@dolist 
			[setq(1,
				switch(
					match(%0,none),
					0,
						%q0,
				)
			)]
			[u(%va/fn_trim,
				squish(
					iter(
						revwords(lcon(%va)),
						switch(
							u(%va/FIL_WHO,##,%q1),
							1,
								##
						)
					)
				)
			)]
		={
			@pemit %#=[ifelse(u(%va/FN_ACCESSCHECK,parent(##),%#),[u(%va/FN_JOBLIST,##,%#)],)]
		};
		@wait 0=@pemit %#=[u(%va/FN_FOOTER,* Denotes New Activity)];
	}
-

&CMD_JOBS/WHO2 Job Global Object <JGO>=
$+jobs/who:
	@switch [u(%va/HAS_ACCESS,%#)]=0*,{
		@pemit %#=Permission denied.
	},{
		@pemit %#=You must identify a player.
	}
-

&CMD_MYJOB/ADD Job Global Object <JGO>=
$+myjob/add *=*:
	@switch 
	[not(haspower(%#,guest))]
	[setq(0,u(%va/FN_FIND-JOB,%0))]
	[isdbref(%q0)]
	[and(
		u(%va/IS_PUBLIC,%q0),
		match(
			get(%q0/opened_by),
			%#
		)
	)]
	[not(u(%va/fn_hasattr,%q0,LOCKED))]
	=
	0*,{@pemit %#={This command is not available to guests.}},
	10*,{@pemit %#={That is an invalid job number.}},
	110*,{@pemit %#=Job %0 is not yours. You can only modify your own jobs.},
	1110*,{@pemit %#=That job is locked and cannot be changed at this time.},
	{
		@pemit %#=Comments to job number %0 added.;
		@trigger %va/TRIG_ADD=%q0,%1,%#,ADD;
		@trigger %va/TRIG_BROADCAST=[parent(%q0)],Comments added to job %0 by %n.
	}
-

&CMD_MYJOB/VIEW Job Global Object <JGO>=
$+myjob *:
	@switch 
	[not(haspower(%#,guest))]
	[setq(0,u(%va/FN_FIND-JOB,%0))]
	[isdbref(%q0)]
	[or(
		gt(
			member(get(%q0/TAGGED_FOR),%#),
			0
		),
		u(%va/IS_TRANSPARENT,%q0),
		and(
			get(%q0/PUBLIC),
			match(get(%q0/OPENED_BY),%#)
		)
	)]
	=
	0*,{@pemit %#=Permission denied.},
	10*,{@pemit %#=That is not a valid job number.},
	110*,{@pemit %#=Job %0 is not yours. You can only view your own jobs.},
	{
		@pemit %#=
			[center(| [ansi(hy,View Job Number %0)] |,79,=)]%r
			[ulocal(%va/DISPLAY_MYHEADERS,%q0)];
		@dolist 
			[u(%va/fn_trim,
				squish(
					iter(
						filter(%va/FIL_COMMENTS,sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))),
						switch(
							or(
								u(%q0/PUBLISH),
								hasflag(%q0/##,no_inherit),
								gt(member(get(%q0/TAGGED_FOR),%#),0),
								strmatch(extract(get(%q0/##),3,1,|),%#)
							),
							1,
								##
						)
					)
				)
			)]
		={
			@pemit %#=
				[repeat(-,79)]%r
				[ansi(h,[extract(get(%q0/##),4,1,|)] added on [convsecs(extract(get(%q0/##),2,1,|))]:)] 
				[edit(last(get(%q0/##),|),@@PIPE@@,|)];
			@wait 0=@pemit %#=[repeat(=,79)]
		}
	}
-

&CMD_MYJOBS Job Global Object <JGO>=
$+myjobs:
	@switch [haspower(%#,guest)]=1,{
		@pemit %#=Sorry, this command is not available to guests.
	},{
		@pemit %#={[u(%va/MYJOBS_HEADER)]};
		@dolist 
			revwords(lcon(%va))
		={
			@pemit %#=
				[ifelse(
					or(
						gt(member(get(##/TAGGED_FOR),%#),0),
						[or(
							and(
								get([parent(##)]/PUBLIC),
								match(get(##/OPENED_BY),%#)
							),
							u(%va/IS_TRANSPARENT,##)
						)]
					),
						[u(%va/DISPLAY_MYJOB,##)],
				)]
		};
		@wait 0=@pemit %#=[repeat(=,79)]
	}
-

&CMD_PITCH Job Global Object <JGO>=
$+pitch *=*:
	@switch [not(haspower(%#,guest))]=0*,{
		@pemit %#=Permission Denied.
	},{
		@pemit %#=
			You have pitched your idea to staff about '[secure(%0)]'. 
			Please remember that this is merely an idea [ansi(hu,pitch)], and not a request. 
			Staff, for one reason or many, may decide not to go with the idea.;
		@trigger %va/TRIG_CREATE=%#,locate(%vc,PITCH,i),1,[u(%va/fn_strtrunc,secure(%0),30)],%1,,,3
	}
-

&CMD_REQUEST Job Global Object <JGO>=
$+request *=*:
	@switch [not(haspower(%#,guest))]=0*,{
		@pemit %#=Permission denied.
	},{
		@pemit %#=
			You have requested [secure(u(%va/fn_strtrunc,%0,30))] from staff. 
			Please allow for some time to process it. Do not page staff about it - you will hear back soon.;
		@trigger %va/TRIG_CREATE=%#,[locate(%vc,REQ,i)],2,[u(%va/fn_strtrunc,secure(%0),30)],[u(%va/fn_strtrunc,%1,get(%va/BUFFER))],,,2
	}
-
&CMD_TYPO Job Global Object <JGO>=
$+typo *:
	@switch [not(haspower(%#,guest))]=0*,{
		@pemit %#=Permission denied.
	},{
		@pemit %#=
			You have notified production staff of the typo, with the details '[u(%va/fn_strtrunc,%0,get(%va/BUFFER))]';
			@trigger %va/TRIG_CREATE=%#,locate(%vc,BUILD,i),2,Typo Reported,[u(%va/fn_strtrunc,%0,get(%va/BUFFER))],,,4
	}
-

@cpattr %#/JOB_VA=Job Global Object <JGO>/VA
-

@cpattr %#/JOB_VB=Job Global Object <JGO>/VB
-

@cpattr %#/JOB_VC=Job Global Object <JGO>/VC
-

@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting controlling attributes.
-

@Startup Job Database <JD>=@drain me;@notify me
-

&BUCKET_HEADER Job Database <JD>=[repeat(=,79)]%r[ansi(hc,[ljust(Bucket,8)]Description)]%r[repeat(-,79)]
-

&CHARGRAPH Job Database <JD>=@+-/!*ox#.X$^`~O>
-

&COLORGRAPH_1 Job Database <JD>=gG
-

&COLORGRAPH_2 Job Database <JD>=yY
-

&COLORGRAPH_3 Job Database <JD>=rR
-

&COLORGRAPH_4 Job Database <JD>=cC
-

&COLORGRAPH_5 Job Database <JD>=bB
-

&COLORGRAPH_6 Job Database <JD>=mM
-

&COLORGRAPH_7 Job Database <JD>=wW
-

&COLORGRAPH_8 Job Database <JD>=hX
-

&COLORGRAPH_9 Job Database <JD>=hC
-

&COLORGRAPH_10 Job Database <JD>=hB
-

&COLORGRAPH_11 Job Database <JD>=hR
-

&COLORGRAPH_12 Job Database <JD>=hY
-

&COLORGRAPH_13 Job Database <JD>=hG
-

&COLORGRAPH_14 Job Database <JD>=hM
-

&COLORGRAPH_15 Job Database <JD>=hW
-

&COLORGRAPH_16 Job Database <JD>=hX
-

&COLORGRAPH_17 Job Database <JD>=hC
-

&DATA_31-15 Job Database <JD>=[@[@[@[@[#[#[#[#[$[$[$[^[^[^[&[&[&[*[*[([([([)[)[_[_[+[+[+[{[{[}[}[|[|[;[;['['[:[:[:["["[<[<[<[>[>[>[?[?[?[,[,[,[.[.[.[.[/[/[/ [![![@[@[@[@[#[#[#[$[$[$[^[^[^[&[&[&[*[*[([([)[)[)[_[_[+[+[{[{[}[}[|[|[;[;['['[:[:["["[<[<[<[>[>[?[?[?[,[,[,[.[.[.[.[/[/[/[/[a [![![![![@[@[@[@[#[#[#[$[$[$[^[^[&[&[&[*[*[([([)[)[_[_[+[+[{[{[}[}[|[|[;['['[:[:["["["[<[<[>[>[?[?[?[,[,[,[.[.[.[/[/[/[/[a[a[a [~[~[![![![![@[@[@[@[#[#[#[$[$[^[^[^[&[&[*[*[([([)[)[_[+[+[{[{[}[}[|[;[;['['[:[:["["[<[<[>[>[?[?[?[,[,[.[.[.[/[/[/[/[a[a[a[a[b [=[~[~[~[~[![![![@[@[@[#[#[#[$[$[^[^[^[&[&[*[*[([)[)[_[_[+[{[{[}[|[|[;[;['[:[:["["[<[<[>[>[?[?[,[,[,[.[.[/[/[/[a[a[a[a[b[b[b[b [=[=[=[~[~[~[~[![![![@[@[@[#[#[#[$[$[^[^[&[&[*[([([)[)[_[+[+[{[}[|[|[;['['[:["["[<[<[>[>[?[?[,[,[.[.[/[/[/[a[a[a[a[b[b[b[b[c[c [-[-[=[=[=[=[~[~[~[~[![![![@[@[#[#[$[$[^[^[&[&[*[([([)[_[+[+[{[}[|[|[;['[:[:["[<[<[>[?[?[,[,[.[.[.[/[/[a[a[a[b[b[b[b[c[c[c[c[d [0[-[-[-[-[=[=[=[=[~[~[~[![![![@[@[#[#[$[$[^[&[&[*[([)[)[_[+[{[}[|[;[;['[:["[<[<[>[?[?[,[,[.[.[/[/[a[a[a[b[b[b[c[c[c[c[d[d[d[d [0[0[0[0[0[-[-[-[-[=[=[=[~[~[~[![![@[@[#[$[$[^[&[&[*[([)[_[+[{[}[|[;['[:["[<[<[>[?[,[,[.[.[/[/[a[a[b[b[b[c[c[c[d[d[d[d[d[e[e[e [9[9[9[9[0[0[0[0[-[-[-[-[=[=[=[~[~[![![@[@[#[$[^[^[&[*[([)[+[{[}[|[;['[:["[<[>[?[,[.[.[/[/[a[a[b[b[c[c[c[d[d[d[d[e[e[e[e[e[f[f [8[8[8[9[9[9[9[9[0[0[0[0[-[-[-[=[=[~[~[![![@[#[#[$[^[&[([)[_[+[}[|['[:["[<[>[?[,[.[/[a[a[b[b[c[c[c[d[d[d[e[e[e[e[f[f[f[f[f[f[g [7[7[7[8[8[8[8[8[8[9[9[9[9[0[0[0[-[-[=[=[~[~[![@[#[$[^[&[([)[+[}[;['["[<[?[,[.[/[a[a[b[c[c[d[d[d[e[e[e[f[f[f[f[f[g[g[g[g[g[g[g [6[6[7[7[7[7[7[7[7[7[8[8[8[8[9[9[9[9[0[0[-[-[=[~[![@[#[^[&[([+[}[;[:[<[?[.[/[a[b[c[c[d[d[e[e[f[f[f[f[g[g[g[g[g[h[h[h[h[h[h[h[h [5[6[6[6[6[6[6[6[6[6[6[6[7[7[7[7[7[8[8[8[9[9[0[0[-[=[~[@[$[&[)[}['[<[,[/[a[c[d[d[e[f[f[f[g[g[g[h[h[h[h[h[h[i[i[i[i[i[i[i[i[i[i [5[5[5[5[5[5[5[5[5[5[5[5[5[5[5[5[6[6[6[6[6[6[7[7[8[8[9[0[=[@[&[}[<[/[c[d[f[f[g[h[h[h[i[i[i[i[i[i[i[j[j[j[j[j[j[j[j[j[j[j[j[j[j [4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l [3[3[3[3[3[3[2[2[2[2[2[2[2[2[2[2[2[2[1[1[1[1[`[`[`[Z[Y[X[V[S[O[H[B[w[u[s[r[q[p[p[o[o[o[o[n[n[n[n[n[n[n[n[m[m[m[m[m[m[m[m[m[m[m [2[2[2[2[2[1[1[1[1[1[1[1[1[`[`[`[`[`[Z[Z[Z[Y[Y[X[W[V[U[S[Q[O[L[H[E[B[y[w[v[u[t[s[r[r[q[q[p[p[p[p[o[o[o[o[o[o[o[o[n[n[n[n[n[n[n [1[1[1[1[`[`[`[`[`[`[`[Z[Z[Z[Z[Y[Y[Y[X[X[W[W[V[U[T[S[R[Q[O[M[K[H[F[D[B[z[y[w[v[u[u[t[s[s[r[r[r[q[q[q[q[p[p[p[p[p[p[o[o[o[o[o[o [`[`[`[`[Z[Z[Z[Z[Z[Z[Y[Y[Y[Y[X[X[X[W[W[V[V[U[T[S[R[Q[P[O[M[L[J[H[G[E[C[B[A[y[x[w[w[v[u[u[t[t[s[s[r[r[r[r[q[q[q[q[q[p[p[p[p[p[p [Z[Z[Z[Z[Z[Y[Y[Y[Y[X[X[X[X[W[W[W[V[V[U[U[T[S[S[R[Q[P[O[N[L[K[J[H[G[F[D[C[B[A[z[y[x[w[w[v[v[u[u[t[t[s[s[s[s[r[r[r[r[q[q[q[q[q[q [Y[Y[Y[Y[Y[X[X[X[X[W[W[W[W[V[V[U[U[T[T[S[S[R[Q[Q[P[O[N[M[L[K[J[H[G[F[E[D[C[B[A[z[y[y[x[w[w[v[v[u[u[u[t[t[t[s[s[s[s[r[r[r[r[r[q [Y[X[X[X[X[X[W[W[W[V[V[V[V[U[U[T[T[S[S[R[R[Q[P[P[O[N[M[L[K[J[I[H[G[F[E[D[D[C[B[A[z[z[y[x[x[w[w[v[v[v[u[u[u[t[t[t[s[s[s[s[s[r[r [X[X[W[W[W[W[V[V[V[V[U[U[U[T[T[S[S[R[R[Q[Q[P[P[O[N[M[M[L[K[J[I[H[H[G[F[E[D[C[C[B[A[A[z[y[y[x[x[w[w[w[v[v[u[u[u[u[t[t[t[t[s[s[s [W[W[W[V[V[V[V[U[U[U[T[T[T[S[S[S[R[R[Q[Q[P[O[O[N[N[M[L[K[K[J[I[H[H[G[F[E[E[D[C[C[B[A[A[z[z[y[y[x[x[w[w[w[v[v[v[u[u[u[u[t[t[t[t [V[V[V[V[U[U[U[U[T[T[T[S[S[S[R[R[Q[Q[P[P[O[O[N[N[M[L[L[K[J[J[I[H[H[G[F[F[E[D[D[C[B[B[A[A[z[z[y[y[y[x[x[w[w[w[v[v[v[v[u[u[u[u[t [V[V[U[U[U[U[T[T[T[S[S[S[R[R[R[Q[Q[P[P[O[O[N[N[M[M[L[K[K[J[J[I[H[H[G[F[F[E[E[D[D[C[B[B[A[A[z[z[z[y[y[x[x[x[w[w[w[v[v[v[v[u[u[u [U[U[U[T[T[T[T[S[S[S[R[R[R[Q[Q[Q[P[P[O[O[N[N[M[M[L[L[K[K[J[J[I[H[H[G[G[F[F[E[D[D[C[C[B[B[A[A[A[z[z[y[y[y[x[x[x[w[w[w[w[v[v[v[v [U[T[T[T[T[S[S[S[S[R[R[R[Q[Q[P[P[P[O[O[N[N[N[M[M[L[L[K[K[J[I[I[H[H[G[G[F[F[E[E[D[D[C[C[B[B[A[A[A[z[z[z[y[y[y[x[x[x[w[w[w[w[v[v [T[T[T[S[S[S[S[R[R[R[Q[Q[Q[P[P[P[O[O[N[N[N[M[M[L[L[K[K[J[J[I[I[H[H[G[G[F[F[E[E[D[D[D[C[C[B[B[B[A[A[z[z[z[y[y[y[x[x[x[x[w[w[w[w [T[S[S[S[S[R[R[R[R[Q[Q[Q[P[P[P[O[O[N[N[N[M[M[L[L[L[K[K[J[J[I[I[H[H[G[G[G[F[F[E[E[D[D[C[C[C[B[B[B[A[A[z[z[z[z[y[y[y[x[x[x[x[w[w
-

&DATA_CHARS Job Database <JD>=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`1234567890-=~!@#$^&*()_+{}|;':"<>?,./
-

&DATA_CHARS2 Job Database <JD>=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ `1234567890-=~!@#$%^&*()_[]\{}|;':",./<>?
-

&DISPLAY_# Job Database <JD>=[ljust(%0,8)]
-

&DISPLAY_A Job Database <JD>=
	[ljust(
		ifelse(
			isdbref(get(%0/ASSIGNED_TO)),
				name(get(%0/ASSIGNED_TO)),
			-
		),
		16
	)]
-

&DISPLAY_B Job Database <JD>=[ljust(u(%va/FN_BUCKETNAME,%0),5)]
-

&DISPLAY_C Job Database <JD>=[ljust(u(%va/FN_SHORT_DATE,convsecs(get(%0/OPENED_ON))),8)]
-

&DISPLAY_D Job Database <JD>=
	[ljust(
		switch(
			get(%0/STATUS),
			0,
				--HOLD--,
			ifelse(
				get(%0/DUE_ON),
					ifelse(
						gt(secs(),get(%0/DUE_ON)),
							OVERDUE!,
						[u(%va/FN_SHORT_DATE,convsecs(get(%0/DUE_ON)))]
					),
				--------
			)
		),
		8
	)]
-

&DISPLAY_F Job Database <JD>=
	[ifelse(u(me/IS_LOCKED,%0),ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),C,L),-)]
	[ifelse(u(me/IS_PUBLIC,%0),M,-)]
	[ifelse(u(me/IS_TAGGED,%0),T,-)]
	[ifelse(u(me/IS_PUBLISHED,%0),P,-)]
-

&DISPLAY_M Job Database <JD>=[ljust(u(%va/FN_SHORT_DATE,convsecs(get(%0/MODIFIED_ON))),8)]
-

&DISPLAY_O Job Database <JD>=[ljust(name(first(get(%0/OPENED_BY))),16)]
-

&DISPLAY_P Job Database <JD>=[ifelse(u(me/IS_LOCKED,%0),ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),C,L),-)]
-

&DISPLAY_S Job Database <JD>=
	[center(
		switch(
			[u(%va/fn_hasattrp,%0,LOCKED)][u(%va/fn_hasattrp,%0,CHECKOUT)][get(%0/STATUS)],
			1*,LOCKED,
			01*,CHECKED,
			000,ON HOLD,
			001,NEW,
			002,UNDERWAY,
			003,1/4 DONE,
			004,1/2 DONE,
			005,3/4 DONE,
			006,COMPLETE,
			NEW
		),
		8
	)]
-

&DISPLAY_T Job Database <JD>=[ljust(mid(get(%0/TITLE),0,30),30)]
-

&DISPLAY_MYHEADERS Job Database <JD>=
	[setq(0,%0)]
	[setq(x,
		u(%va/FN_ITEMIZE,
			map(MAP_NAME,get(%q0/OPENED_BY),%b,|),
			|
		)
	)]
	[ljust(
		[rjust(ansi(hc,Bucket:),10)] 
			[u(%va/FN_BUCKETNAME,%q0)],
		40
	)]
	[rjust(ansi(hc,Due On:),12)] 
	[ifelse(
		get(%q0/DUE_ON),
			ifelse(
				gt(secs(),get(%q0/DUE_ON)),
					OVERDUE!,
				convsecs(get(%q0/DUE_ON))
			),
		-
	)]%r
	[ljust(
		[rjust(ansi(hc,Title:),10)] 
			[get(%q0/TITLE)],40)]
			[rjust(ansi(hc,Assigned To:),12)] 
			[ifelse(
				isdbref(get(%q0/ASSIGNED_TO)),
					name(get(%q0/ASSIGNED_TO)),
				Nobody
			)]%r
			[ljust(
				[rjust(ansi(hc,Opened On:),10)] 
					[convsecs(get(%q0/OPENED_ON))],
				40
			)]
			[rjust(ansi(hc,Status:),12)] 
			[switch(
				get(%q0/PRIORITY),
				1,Green,
				2,Yellow,
				3,Red
			)]%r
			[rjust(ansi(hc,Opened By:),
		10
	)] %qx
-

&DISPLAY_MYJOB Job Database <JD>=
	[rjust([last(name(%0))],6)]%b%b
	[ljust(mid(get(%0/TITLE),0,40),40)]%b
	[ljust(
		ifelse(
			isdbref(get(%0/ASSIGNED_TO)),
				name(get(%0/ASSIGNED_TO)),
			Nobody
		),
		16
	)]%b
	[center(
		switch(
			get(%0/STATUS),
			0,ON HOLD,
			1,NEW,
			2,UNDERWAY,
			3,1/4 DONE,
			4,1/2 DONE,
			5,3/4 DONE,
			6,COMPLETE,
			NEW
		),
		8
	)]
-

&DISPLAY_BUCKET Job Database <JD>=
	[rjust(ansi(h,Name:),20)] [name(%q0)] 
	[ifelse(u(%va/FN_STAFFALL,%#),%(%q0%),)] 
	%([words(children(%q0))] jobs in bucket%)%r
	[rjust(ansi(h,Locked To:),20)] 
	[ifelse(
		u(%va/fn_hasattrp,%q0,ACCESS),
			[get(%q0/ACCESS)] 
			[ifelse(
				u(%va/FN_ACCESSCHECK,%q0,%#),
					%(You have access%),
				%(You do not have access%)
			)],
		*UNLOCKED*
	)]%r
	[rjust(ansi(h,Post Data:),20)] 
	%(Job system will post to these boards%)%r
	[u(%va/fn_columns,
		Complete: [u(%q0/POST_COMPLETE)]|
			Approve: [u(%q0/POST_APPROVE)]|
			Deny: [u(%q0/POST_DENY)],
		15,|,21
	)]
	[ifelse(
		u(%va/fn_hasattrp,%q0,TURNAROUND),
			%r[rjust(ansi(h,Turnaround:),20)] 
			[get(%q0/TURNAROUND)] hours 
			%([div(get(%q0/TURNAROUND),24)] days%),
	)]
	[switch(
		first(version()),
		PennMUSH,%r[rjust(ansi(h,Logfile:),20)] command.log,
		ifelse(
			u(%va/fn_hasattrp,%q0,LOGFILE),
				%r[rjust(ansi(h,Logfile:),20)] M-[u(%q0/LOGFILE)].log,
		)
	)]%r
	[rjust(ansi(h,Hidden Status:),20)] 
	[switch(
		[u(%va/fn_hasattrp,%q0,HIDDEN)][gt(member(u(%#/JOBSH),%q0),0)],
		00,Unhidden,
		01,Locally,
		11,Globally Hidden & Locally Watched,
		10,Globally,
		UNKNOWN CASE
	)]%r
	[rjust(ansi(h,+Myjobs Status:),20)] 
	[ifelse(
		u(%va/fn_hasattrp,%q0,PUBLIC),
			Accessible,
		Inaccessible
	)]%r
	[rjust(ansi(h,Avg Resolve Time:),20)] 
	[u(%va/fn_trim,u(FN_ART,%q0))]%r
	[rjust(ansi(h,Desc:),20)] 
	[get(%q0/DESC)]
	[ifelse(
		gt(
			words(
				setr(x,
					setdiff(lattr(%q0),u(%va/LIST_BADATTR,%q0))
				)
			),
			0
		),
			%r[rjust(ansi(h,Provides:),20)] %(Attributes provided to jobs in the bucket%)%r
			[u(%va/fn_columns,%qx,16,,21)],
	)]
	[ifelse(
		gt(
			words(lattr(%q0/PROCESS_*)),
			0
		),
			%r[rjust(ansi(h,Settings:),20)] %(+job/sumset settings%)%r
			[u(%va/fn_columns,
				map(MAP_SETTINGS,
					lattr(%q0/PROCESS_*)
				),
				16,,21
			)],
	)]
-

&DISPLAY_BUCKET2 Job Database <JD>=
	[rjust(ansi(h,Players:),20)] %(Connected players with access to this bucket)%r
	[u(%va/fn_columns,
		[u(%va/fn_trim,
			squish(
				iter(
					edit(
						objeval(%#,lwho()),
						%b,|
					),
					ifelse(
						and(
							u(%va/HAS_ACCESS,##),
							u(%va/FN_ACCESSCHECK,%q0,##)
						),
						name(##),
					),
					|,|
				),
				|
			),
			b,|
		)],
		15,|,21
	)]
-

&FIL_ACCESS Job Database <JD>=[u(%va/FN_ACCESSCHECK,%0,%#)]
-

&FIL_BROADCAST Job Database <JD>=[ifelse(u(%va/fn_hasattrp,%0,JOBS_SILENCE),0,u(%va/FN_ACCESSCHECK,%q0,%0))]
-

&FIL_COMMENTS Job Database <JD>=[gt(member(get(%va/LIST_VISCOMMENTS),first(get(%q0/%0),|)),0)]
-

&FIL_DELETE Job Database <JD>=[switch(parent(%0,%q0,1,0)]
-

&FIL_GOING Job Database <JD>=[not(default(%0/GOING,0))]
-

&FIL_ISPLAYER Job Database <JD>=[hastype(%0,player)]
-

&FIL_MINE Job Database <JD>=[gt(member([get(%0/assigned_to)] [get(%0/tagged_for)],%#),0)]
-

&FIL_NEW Job Database <JD>=[gt(get(%0/MODIFIED_ON),get(%q0/LAST_CONN))]
-

&FIL_NEW0 Job Database <JD>=[gt(get(%0/MODIFIED_ON),get(%q0/LAST_CONN))]
-

&FIL_NEW1 Job Database <JD>=[gt(dec(get(%0/NUM_COMMENT)),last(grab(get(%0/LIST_READERS),%q0|*),|))]
-

&FIL_NEWCOMMENTS0 Job Database <JD>=
	[and(
		gt(
			extract(get(%q0/%0),2,1,|),
			%q1
		),
		gt(
			member(
				get(%va/LIST_VISCOMMENTS),
				first(get(%q0/%0),|)
			),
			0
		)
	)]
-

&FIL_NEWCOMMENTS1 Job Database <JD>=gt(last(%0,_),last(grab(get(%q0/LIST_READERS),%#|*),|))
-

&FIL_NOSPAM Job Database <JD>=[not(u(%va/fn_hasattr,%0,JOBS_NOSPAM))]
-

&FIL_NOTPLAYER Job Database <JD>=[not(hastype(%0,player))]
-

&FIL_OVERDUE Job Database <JD>=ifelse(get(%0/DUE_ON),gt(secs(),get(%0/DUE_ON)),0)
-

&FIL_WHO Job Database <JD>=[switch(get(%0/ASSIGNED_TO),%1,1,0)]
-

&FN_ACCESSCHECK Job Database <JD>=
	[and(
		or(
			u(%va/FN_WIZONLY,%1),
			switch(
				[elock(%0/speech,%1)][gt(member(get(%1/JOBSB),%0),0)],
				01,1,
				10,1,
				11,0,
				0
			)
		),
		u(%va/HAS_ACCESS,%1)
	)]
-

&FN_ADDSTAT Job Database <JD>=
	[localize(
		[setq(x,
			ifelse(
				u(%va/fn_hasattr,%1,LIST_STATS),
					get(%1/LIST_STATS),
			)
		)]
		[setq(0,match(%qx,%0|*))]
		[setq(1,grab(%qx,%0|*))]
		[ifelse(
			gt(%q0,0),
				[set(%1,
					LIST_STATS:[setunion(
						ldelete(%qx,%q0),
						[first(%q1,|)]|
						[inc(rest(%q1,|))]
					)]
				)],
			[set(%1,
				LIST_STATS:[setunion(%qx,%0|1)]
			)]
		)]
	)]
-

&FN_ADDSTAT_ART Job Database <JD>=
	[set(%0,
		STAT_ART:[add(
			first(default(%0/STAT_ART,0 0)),
			sub(
				secs(),
				get(%1/OPENED_ON)
			)
		)] 
		[inc(last(default(%0/STAT_ART,0 0)))]
	)]
-

&FN_ANSIFY Job Database <JD>=foreach(map_ansify,%0)
-

&FN_ART Job Database <JD>=
	u(FN_TIME,
		round(
			fdiv(
				first(default(%0/STAT_ART,0 0)),
				rest(default(%0/STAT_ART,0 1))
			),
			0
		)
	)
-

&FN_ASSEMBLEPIE Job Database <JD>=
	[localize(
		[setq(1,%1)]
		[setq(0,0)]
		[map(%va/MAP_PIEDATA,%0,switch(%2,,%b,%2),|)]
	)]
-

&FN_BANNER Job Database <JD>=[u(FN_SKIN,BANNER,%0,%1,%2,%3)]
-

&FN_BARGRAPH Job Database <JD>=
	localize(
		[setq(4,ifelse(%5,%5,%B))]
		[setq(5,ifelse(%2,%2,2))]
		[setq(6,ifelse(%3,ifelse(gt(%3,16),16,%3),1))]
		[setq(7,switch(%4,,#,%4))]
		[setq(1,ifelse(%1,%1,18))]
		[setq(2,%q1)]
		[setq(0,last(sort(%0,n,%q4,%q4),%q4))]
		[setq(3,fdiv(%q1,%q0))]
		[setq(x,
			iter(
				lnum(%q1),
				[setq(9,0)]
				[switch(
					%q2,
					%q1,rjust(%q0,3),
					ifelse(
						mod(%q1,2),
							inc(div(%q1,2)),
						div(%q1,2)
					),[rjust(div(%q0,2),3)],
					[space(3)]
				)]|
				[map(MAP_GRAPH,%0,%q4,%b)]
				[setq(2,sub(%q2,1))],
				%B,%R
			)
		)]%qx%R
		[space(2)]0+
		[repeat(-,dec(add(mul(words(%0,%q4),%q5),words(%0,%q4))))]
	)
-

&FN_BREAK Job Database <JD>=[u(FN_SKIN,BREAK,%0,%1,%2,%3)]
-

&FN_BUCKETHEADER Job Database <JD>=[u(FN_SKIN,BUCKETHEADER,%0,%1,%2,%3)]
-

&FN_BUCKETLIST Job Database <JD>=[u(FN_SKIN,BUCKETLIST,%0,%1,%2,%3)]
-

&FN_BUCKETNAME Job Database <JD>=
	[ifelse(
		get(%0/GOING),
			GOING,
		ifelse(
			isdbref(parent(%0)),
				name(parent(%0)),
			ERROR
		)
	)]
-

&FN_CLEANFIND Job Database <JD>=
	t(words(
		filter(FIL_NOTPLAYER,get(%0/%1))
	))
-

&FN_CLEANFIX Job Database <JD>=
	[setq(0,filter(FIL_ISPLAYER,get(%0/%1)))]
	[ifelse(
		words(%q0),
		%q0,
		owner(me)
	)]
-

&FN_COLORPIE Job Database <JD>=
	setq(0,u(fn_equalizepie,%1,%2))
	[setq(p,%0)]
	[setq(1,
		u(fn_rotatestr,
			setr(1,v(data_chars)),
			mod(round(fdiv(mul(%3,strlen(%q1)),360),0),360)
		)
	)]
	[setq(a,%]%])]
	[setq(b,%qa%qa)]
	[setq(c,%qb%qb)]
	[map(map_colorpie,%q0,%2,@@)]
	[edit(edit(%qp,%b,%%b),\\,%%r)]
-

&FN_COORD2ANG Job Database <JD>=
	switch(
		%0:%1,
		-*:-*,add(180,atan(fdiv(%1,%0),deg))
		,-*:*,add(180,atan(fdiv(%1,%0),deg))
		,*:-*,add(360,atan(fdiv(%1,%0),deg))
		,0:0,0,atan(fdiv(%1,%0),deg)
	)
-

&FN_COLUMNS Job Database <JD>=
  [localize(switch(
  	[setr(0,[columns(%0,%1,%2,%3)])],
  	#-1*,[align([ifelse(%3,dec(%3),0)] [sub(78,ifelse(%3,dec(%3),0))],%B,[table(%0,%1,sub(78,ifelse(%3,dec(%3),0)),%2)])],
  	%q0
  ))]
-

&FN_CUTPIE Job Database <JD>=
	setq(0,inc(%2))
	[setq(1,fdiv(%1,%2))]
	[setq(2,power(%3,2))]
	[setq(5,
		iter(
			lnum(0,dec(%3)),
			round(mul(sqrt(sub(%q2,power(add(##,.7),2))),%q1),0)
		)
	)]
	[setq(5,revwords(%q5) [setr(8,inc(ceil(mul(%3,2))))] %q5)]
	[iter(
		lnum(-%3,%3),
		space(sub(%q8,setr(9,extract(%q5,#@,1))))[mid(extract(%0,add(##,%q0),1),shl(sub(%1,%q9),1),shl(%q9,2))]
		,,\\
	)]
-

&FN_EASYPIE_PENN Job Database <JD>=[setq(0,lmath(add,setr(1,iter(%1,first(rest(%i0,:),:),%2))))][setq(2,fdiv(58,%q0))][setq(2,iter(%q1,ceil(mul(%i0,%q2))))][setq(3,iter(%q2,repeat(left(extract(%1,#@,1,%2),1),%i0),%B,))][setq(4,u(me/penn%0_pie))][foreach(#lambda/setq(4,edit(\%q4,\%0,mid(\%q3,\%1,1))),v(penn_pie))][setq(4,regeditall(%q4,(.)\\1*,ansi(left(after(%2%1,%2$1),2),$0)))][align([setr(5,inc(mul(%0,4)))] [sub(77,%q5)],edit(%q4,_,%B),[repeat(%R,%3)][iter(%1,[ansi(mid(%i0,1,2),left(%i0,1))] [ansi(h,last(%i0,:))],%2,%R)])]
-

&PENN_PIE Job Database <JD>=0123456789abcdefghijklmnpqrstuvwyzABCDEFGHIJKLMNPQRSTUVWYZ
-

&PENN10_PIE Job Database <JD>=__________________gfedc__________________%R____________lkjjihgfedcba9987____________%R________nnmmllkjihgfedcba98776655________%R______pppnnmmllkjihfedba98776655444______%R____qqqqpppnnmlkjihgecba9876554443333____%R___rrrqqqqppnnmlkjigeca987655443333222___%R__rrrrrrrqqqppnmlkigeca8765443332222222__%R_ssssssrrrrrqqppnljheb975443322222111111_%R_tsssssssssrrrrqpnliea754322221111111110_%Rtttttttttttsssssrrple74221111100000000000%Ruuuuuuuuuuuuuuuuuuuu000000000000000000000%RuuuuuuuuuuuvvvvvwwzCJRUWWYYYYYZZZZZZZZZZZ%R_uvvvvvvvvvwwwwyzACFJNRTUVWWWWYYYYYYYYYZ_%R_vvvvvvwwwwwyyzzACEGJMPRTUUVVWWWWWYYYYYY_%R__wwwwwwwyyyzzABCDFHJLNQRSTUUVVVWWWWWWW__%R___wwwyyyyzzAABCDEFHJLNPQRSTTUUVVVVWWW___%R____yyyyzzzAABCDEFGHJLMNPQRSTTUUUVVVV____%R______zzzAABBCCDEFGIJKMNPQRRSSTTUUU______%R________AABBCCDEFGHIJKLMNPQRRSSTT________%R____________CDEEFGHIJKLMNPPQR____________%R__________________HIJKL__________________
-

&PENN12_PIE Job Database <JD>=______________________gfedc______________________%R_______________kkjjihggfedccba9988_______________%R___________mmmllkkjiihgfedcbaa98877666___________%R________ppnnnmmllkjjihgfedcba998776655544________%R______qppppnnnmmllkjihgfedcba98776655544443______%R_____qqqqppppnnmmllkjihfedba9877665544443333_____%R____rrrqqqqqpppnnmlkjihgecba98765544433333222____%R___rrrrrrrqqqqppnnmlkjigeca9876554433332222222___%R__ssssrrrrrrrqqqppnmlkigeca87654433322222221111__%R_ssssssssssrrrrrqqppnljheb9754433222221111111111_%R_tttttsssssssssrrrrqpnliea7543222211111111100000_%Rtttttttttttttttsssssrrple742211111000000000000000%Ruuuuuuuuuuuuuuuuuuuuuuuu0000000000000000000000000%RuuuuuuuuuuuuuuuvvvvvwwzCJRUWWYYYYYZZZZZZZZZZZZZZZ%R_uuuuuvvvvvvvvvwwwwyzACFJNRTUVWWWWYYYYYYYYYZZZZZ_%R_vvvvvvvvvvwwwwwyyzzACEGJMPRTUUVVWWWWWYYYYYYYYYY_%R__vvvvwwwwwwwyyyzzABCDFHJLNQRSTUUVVVWWWWWWWYYYY__%R___wwwwwwwyyyyzzAABCDEFHJLNPQRSTTUUVVVVWWWWWWW___%R____wwwyyyyyzzzAABCDEFGHJLMNPQRSTTUUUVVVVVWWW____%R_____yyyyzzzzAABBCCDEFGIJKMNPQRRSSTTUUUUVVVV_____%R______yzzzzAAABBCCDEFGHIJKLMNPQRRSSTTTUUUUV______%R________zzAAABBCCDEEFGHIJKLMNPPQRRSSTTTUU________%R___________BBBCCDDEFFGHIJKLMNNPQQRRSSS___________%R_______________DDEEFGHHIJKLLMNPPQQ_______________%R______________________HIJKL______________________
-

&FN_EASYPIE_TINY Job Database <JD>=u(fn_pielegend,eval(edit(u(fn_colorpie,u(fn_cutpie,v(data_31-15),31,15,%0),map(map_easypie,%1,%2),%2,%4),%%r,%\%\)),map(map_easypie2,%1,%2),%2,%3)
-

&FN_EASYPIE Job Database <JD>=
	[switch(
		first(version()),
		PennMUSH,u(fn_easypie_penn,%0,%1,%2,%3,%4),
		RhostMUSH,u(fn_easypie_penn,%0,%1,%2,%3,%4),
		u(fn_easypie_tiny,%0,%1,%2,%3,%4)
	)]
-

&FN_EQUALIZEPIE Job Database <JD>=
	setq(0,ladd(map(map_equalizepie,%0,%1),%1))
	[setq(1,strlen(v(data_chars)))]
	[map(map_equalizepie2,%0,%1)]
-

&FN_FIND-BUCKET Job Database <JD>=
  [localize(ifelse(
    strmatch(name(setr(0,locate(%vc,%0,i))),%0),
    %q0,
    #-1
  ))]
-

&FN_FIND-JOB Job Database <JD>=
  [localize(ifelse(
    strmatch(name(setr(0,locate(%va,Job %0,i))),Job %0),
    %q0,
    #-1
  ))]
-

&FN_FLAG Job Database <JD>=[ansi(h,%[)][ansi(switch(%1,,hy,%1),%0)][ansi(h,%])]
-

&FN_FLAGS Job Database <JD>=[u(FN_SKIN,FLAGS,%0,%1,%2,%3)]
-

&FN_FOOTER Job Database <JD>=[u(FN_SKIN,FOOTER,%0,%1,%2,%3)]
-

&FN_GENDATA Job Database <JD>=
	setq(0,%0)
	[setq(z,fdiv(inc(shl(%1,1)),inc(shl(%0,1))))]
	[setq(9,fdiv(dec(setr(m,strlen(setr(8,v(data_charS))))),360))]
	[setq(s,%2)]
	[map(map_gendata,lnum(-%1,%1))]
-

&FN_HASATTR Job Database <JD>=
  [switch(first(version()),PennMUSH,hasattrval(%0,%1),hasattr(%0,%1))]
-

&FN_HASATTRP Job Database <JD>=
  [switch(first(version()),PennMUSH,hasattrpval(%0,%1),hasattrp(%0,%1))]
-

&FN_HEADER Job Database <JD>=[u(FN_SKIN,HEADER,%0,%1,%2,%3)]
-

&FN_ISNEW Job Database <JD>=[localize([setq(0,%1)][u(FIL_NEW[default(%1/JOBSN,0)],%0)])]
-

&FN_ITEMIZE Job Database <JD>=
	[localize(switch(
		[setr(0,[itemize(%0,%1)])],
		#-1*,switch(
			[setr(1,[elist(%0,and,%1)])],
			#-1,u(fn_pretty,%0,%1),
			%q1
		),%q0
	))]
-

&FN_JOBLIST Job Database <JD>=[u(FN_SKIN,JOBLIST,%0,%1,%2,%3)]
-

&FN_JOBSHEADER Job Database <JD>=[u(FN_SKIN,JOBSHEADER,%0,%1,%2,%3)]
-

&FN_MAXWIDTH Job Database <JD>=last(sort(map(map_maxwidth,%0,%\,),n))
-

&FN_MONITORCHECK Job Database <JD>=
	[and(
		or(
			u(%va/FN_ACCESSCHECK,%0,%1),
			u(%va/FN_WIZONLY,%1)
		),
		switch(
			[u(%va/fn_hasattrp,%0,HIDDEN)][gt(member(get(%1/JOBSH),%0),0)]
			,01,0,
			10,0,
			11,1,
			1
		),
		isdbref(parent(%0))
	)]
-

&FN_NEW_JOBS Job Database <JD>=[setdiff(map(%va/MAP_NEW,lcon(%va)),u(%0/JOBSR))]
-

&FN_PACK Job Database <JD>=
	[localize(switch([setr(0,[pack(%0,%1)])],#-1*,[setq(0,if(lt(%0,0),sub(0,%0),%0))]
	[setq(r,edit(iter(revwords(iter(iter(lnum(0,32),power(if(%1,%1,64),%i0)),switch([div(%i0,%q0)]:[eq(%i0,%q0)],0:*,%i0,*:1,%i0))),[extract(0 1 2 3 4 5 6 7 8 9 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z @ $,add(div(%q0,%i0),1),1)]
	[setq(0,sub(%q0,mul(%i0,div(%q0,%i0))))]),%b,))]
	[if(lt(%0,0),-%qr,%qr)],%q0))]
-

&FN_PCT Job Database <JD>=%([mul(round(fdiv(%0,words(lcon(%va))),2),100)]%%%)
-

&FN_PIEESCAPE Job Database <JD>=case(ord(%0),92,%%%\,91,%%%[,93,%%%],37,%%%%,%0)
-

&FN_PIELEGEND Job Database <JD>=
	setq(d,inc(u(fn_maxwidth,%0)))
	[setq(n,%0[repeat(\\,sub(setr(a,add(words(%1,%2),%3)),setr(b,words(%0,\\))))])]
	[setq(m,repeat(\\,%3)[edit(%1,ifelse(%2,%2,%b),\\)][repeat(\\,sub(%qb,%qa))])]
	[map(map_pielegend,lnum(1,words(%qm,\\)),,%r)]
-

&FN_PLAYERLIST Job Database <JD>=[u(%va/FN_ITEMIZE,map(MAP_NAME,get(%0/OPENED_BY),%b,|),|)]
-

&FN_PRETTY Job Database <JD>=
	[switch(
		words(%0,switch(%1,,%b,%1)),
		0,%0,
		1,%0,
		[ldelete(
			edit(%0,switch(%1,,%b,%1),%,%b),
			words(%0,switch(%1,,%b,%1)),%,
		)]%band%b
		[last(%0,switch(%1,,%b,%1))]
	)]
-

&FN_READERS Job Database <JD>=
	[localize(
		[setq(0,match(get(%0/LIST_READERS),%1|*))]
		[setq(1,grab(get(%0/LIST_READERS),%1|*))]
		[setq(2,extract(%q1,1,1,|))]
		[setq(3,extract(%q1,2,1,|))]
		[set(%0,LIST_READERS:
			[setunion(
				ldelete(get(%0/LIST_READERS),%q0),
				%1|[dec(get(%0/NUM_COMMENT))]
			)]
		)]
	)]
-

&FN_READJOB Job Database <JD>=[u(FN_SKIN,READ,%0,%1,%2,%3)]
-

&FN_ROTATESTR Job Database <JD>=mid(%0,%1,3999)[mid(%0,0,%1)]
-

&FN_SHORT_DATE Job Database <JD>=
	[switch(
		extract(%0,2,1),
		Jan,01,
		Feb,02,
		Mar,03,
		Apr,04,
		May,05,
		Jun,06,
		Jul,07,
		Aug,08,
		Sep,09,
		Oct,10,
		Nov,11,
		Dec,12,
		??
	)]/
	[extract(%0,3,1)]/
	[mid(last(%0),2,2)]
-

&FN_SKIN Job Database <JD>=
	[setq(z,default(%#/JOBSKIN,DEFAULT))]
	[ifelse(
		and(u(fn_hasattr,me,%qz_SKIN),u(fn_hasattr,me,%qz_%0)),
		u(%qz_%0,%1,%2,%3,%4),
		u(DEFAULT_%0,%1,%2,%3,%4)
	)]
-

&FN_STAFFSUM Job Database <JD>=[u(FN_SKIN,STAFFSUM,%0,%1,%2,%3)]
-

&FN_STRTRUNC Job Database <JD>=
  [localize(switch([setr(0,[strtrunc(%0,%1)])],#-1*,left(%0,%1),%q0))]
-

&FN_SUMMARY Job Database <JD>=[u(FN_SKIN,SUMMARY,%0,%1,%2,%3)]
-

&FN_TIME Job Database <JD>=
	[localize(
		[setq(2,mod(%0,86400))]
		[rjust([div(%0,86400)],2,0)]:
		[rjust(div(%q2,3600),2,0)]:
		[rjust(div(mod(%q2,3600),60),2,0)]:
		[rjust(mod(%q2,60),2,0)]
	)]
-

&FN_TRIM Job Database <JD>=
  [switch(first(version()),PennMUSH,trimtiny(%0,%1,%2),trim(%0,%1,%2))]
-

&FOLD_ADD Job Database <JD>=add(%0,%1)
-

&FOREACH_COLORPIE Job Database <JD>=setq(p,edit(%qp,%[%0,%]))
-

&HEADER_# Job Database <JD>=[ljust(DB#,8)]
-

&HEADER_A Job Database <JD>=[ljust(Assigned To,16)]
-

&HEADER_B Job Database <JD>=[ljust(Type,5)]
-

&HEADER_C Job Database <JD>=[ljust(Opened,8)]
-

&HEADER_D Job Database <JD>=[ljust(Due On,8)]
-

&HEADER_F Job Database <JD>=[ljust(Flag,4)]
-

&HEADER_M Job Database <JD>=[ljust(Modified,8)]
-

&HEADER_O Job Database <JD>=[ljust(Opened By,16)]
-

&HEADER_S Job Database <JD>=[ljust(Status,8)]
-

&HEADER_T Job Database <JD>=[ljust(Title,30)]
-

&IS_HIDDEN Job Database <JD>=[udefault(%0/HIDDEN,0)]
-

&IS_LOCKED Job Database <JD>=ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),switch(first(get(%0/CHECKOUT)),%1,0,1),udefault(%0/LOCKED,0))
-

&IS_PLAYER Job Database <JD>=[switch(type(%0),PLAYER,%0,)]
-

&IS_PUBLIC Job Database <JD>=[udefault(%0/PUBLIC,0)]
-

&IS_PUBLISHED Job Database <JD>=[udefault(%0/PUBLISH,0)]
-

&IS_SUMMARY Job Database <JD>=[u(%va/fn_hasattrp,%0,SUMMARY)]
-

&IS_TAGGED Job Database <JD>=[gt(words(get(%0/TAGGED_FOR)),0)]
-

&IS_TRANSPARENT Job Database <JD>=[u(%va/fn_hasattrp,%0,TRANSPARENT)]
-

&JOBS_DEFAULT Job Database <JD>=BTDAS
-

&JOBS_HEADER Job Database <JD>=[ulocal(%va/JOBS_HEADER2,%0)]
-

&JOBS_HEADER2 Job Database <JD>=
	[u(FN_HEADER)]%r
	[setq(1,
		[secure(
			switch(
				u(%va/fn_hasattrp,%0,JOBS),
				1,lcstr(mid(get(%0/JOBS),0,20)),
				u(JOBS_DEFAULT)
			)
		)]
	)]
	[ansi(hc,*%b%b
		[ljust(Job#,5)]
		[iter(
			lnum(strlen(%q1)),
			u(HEADER_[mid(%q1,##,1)])
		)]
	)]%r
	[u(FN_BREAK)]
-

&JOBS_NUM Job Database <JD>=1
-

&LIST_ACTIONS Job Database <JD>=
	ADD Player input|
	ASN Assignment|
	CKI Check In|
	CKO Check Out|
	CLN Clone|
	CRE Create|
	DUE Due date|
	EDT Edited job|
	LOK Locked Job|
	MRG Merged job|
	NAM Re-name job|
	PUB Publication|
	SRC Source change|
	STA Status change|
	SUM Sumset change|
	TAG Job tag|
	TRN Transfer|
	UNL Unlock job|
	UNP Unpublish|
	COM +job/complete|
	DNY +job/deny|
	APR +job/approve|
	DEL +job/delete
-

&LIST_BADATTR Job Database <JD>=
	Created Modified ACCESS Desc [lattr(%0/ACCESS_*)] [lattr(%0/ERROR_*)] [lattr(%0/PROCESS_*)] LIST_STATS STAT_ART TURNAROUND
-

&LIST_VISCOMMENTS Job Database <JD>=ADD CRE COM MAI APR DEL DNY
-

&MAP_ACTIONS Job Database <JD>=[rest(%0,|)]
-

&MAP_ACTIONS2 Job Database <JD>=[first(%0,|)]
-

&MAP_ANSIFY Job Database <JD>=%%x%0
-

&MAP_ARTSGRAPH Job Database <JD>=
	[setq(0,
		iter(
			sortby(%va/SORTBY_NAME,lcon(%vc)),
			fdiv(first(get(##/STAT_ART)),rest(get(##/STAT_ART)))
		)
	)]%q0
-

&MAP_COLORPIE Job Database <JD>=
	foreach(
		foreach_colorpie,
		mid(%q1,0,setr(9,last(%0,:)))
	)
	[setq(x,u(fn_ansify,before(mid(%0,1,100),:)))]
	[setq(h,u(fn_pieescape,mid(%0,0,1)))]
	[setq(i,%qh%qh)]
	[setq(j,%qi%qi)]
	[setq(k,%qj%qj)]
	[setq(p,
		edit(
			edit(
				edit(
					edit(
						%qp,%qc,
						%qx%qk%%cn
					),
					%qb,%qx%qj%%cn
				),
				%qa,%qx%qi%%cn
			)
			,%],%qx%qh%%cn
		)
	)]
	[setq(1,mid(%q1,%q9,256))]
-

&MAP_EASYPIE Job Database <JD>=extract(%0,1,switch(%0,:*,3,2),:)
-

&MAP_EASYPIE2 Job Database <JD>=ldelete(%0,switch(%0,:*,3,2),:)
-

&MAP_EQUALIZEPIE Job Database <JD>=last(%0,:)
-

&MAP_EQUALIZEPIE2 Job Database <JD>=
	revwords(
		setr(8,
			round(
				fdiv(
					mul(
						%q1,
						setr(7,last(%0,:))
					),
					%q0
				),
				0
			)
		)
		[setq(1,sub(%q1,%q8))]
		[setq(0,sub(%q0,%q7))]:
		[rest(revwords(%0,:),:)],
	:)
-

&MAP_GENDATA Job Database <JD>=
	setq(1,%0)%[
	[map(map_gendata2,lnum(-%q0,%q0),,%[)]
-

&MAP_GENDATA2 Job Database <JD>=mid(%q8,mod(round(mul(add(u(fn_coord2ang,%0,%q1),%qs),%q9),0),%qm),1)
-

&MAP_GRAPH Job Database <JD>=
	[setq(9,
		ifelse(
			gt(inc(%q9),%q6),
			1,
			inc(%q9)
		)
	)]
	[ifelse(
		lte(%q2,mul(%0,%q3)),
		[ansi(v(COLORGRAPH_%q9),[repeat(%q7,%q5)])],
		[repeat(%b,%q5)]
	)]
-

&MAP_ISPLAYER Job Database <JD>=[isdbref(num(*%0))]
-

&MAP_MAXWIDTH Job Database <JD>=strlen(%0)
-

&MAP_NAME Job Database <JD>=[name(%0)]
-

&MAP_NAME2 Job Database <JD>=[name(*%0)]
-

&MAP_NEW Job Database <JD>=[u(fn_pack,after(%0,#))]:[u(fn_pack,u(%0/NUM_COMMENT))]
-

&MAP_PARAMS Job Database <JD>=[lcstr(rest(%0,_))]
-

&MAP_PIEDATA Job Database <JD>=
	[mid(get(%va/CHARGRAPH),%q0,1)]
	[setq(0,inc(%q0))]
	[get(me/COLORGRAPH_%q0)]
	:%0:
	[extract(%q1,%q0,1)]
-

&MAP_PIELEGEND Job Database <JD>=
	ljust(extract(%qn,%0,1,\\),%qd) [ansi(before(mid(setr(q,extract(%qm,%0,1,\\)),1,10),:),mid(%qq,0,1))] [switch(%qq,:*,extract(%qq,3,100,:),after(%qq,:))]
-

&MAP_PMATCH Job Database <JD>=[pmatch(%0)]
-

&MAP_REPORTS Job Database <JD>=[after(lcstr(%0),_)]
-

&MAP_SETTINGS Job Database <JD>=[rest(%0,_)]
-

&MAP_SOURCE Job Database <JD>=[pmatch(%0)]
-

&MAP_STAT_ESC Job Database <JD>=
	[ifelse(
		and(
			u(%va/fn_hasattrp,%0,DUE_ON),
			gt(secs(),get(%0/DUE_ON))
		),
		[setq(3,inc(%q3))],
		[switch(
			default(%0/PRIORITY,1),
			1,setq(1,inc(%q1)),
			2,setq(2,inc(%q2)),
			3,setq(3,inc(%q3)),
			setq(0,inc(%q0))
		)]
	)]
-

&MAP_STAT_STATUS Job Database <JD>=
	[ifelse(
		u(%va/FIL_OVERDUE,%0),
		setq(7,inc(%q7)),
		switch(
			default(%0/STATUS,1),
			1,setq(1,inc(%q1)),
			2,setq(2,inc(%q2)),
			3,setq(3,inc(%q3)),
			4,setq(4,inc(%q4)),
			5,setq(5,inc(%q5)),
			6,setq(6,inc(%q6)),
			setq(0,inc(%q0))
		)
	)]
-

&MYJOBS_HEADER Job Database <JD>=
	[center(| [ansi(hy,Anomaly Jobs [get(%va/VERSION)])] |,79,=)]%r
	[ansi(hc,*%b%b
		[ljust(Job#,5)]
		[ljust(Description,41)]
		[ljust(Assigned To,17)]
		Status
	)]%r
	[repeat(-,79)]
-

&REPORT_ACTBY Job Database <JD>=
	[switch(
		%0,
		,This report requires you to supply an action code.%r%rUse: '+jobs/reports ACTBY=<action code>'.%r,
		[setq(0,
			squish(
				iter(
					lcon(%vc),
					ifelse(
						eq(words(grab(u(##/LIST_STATS),%0|*)),0),
						,##
					)
				)
			)
		)]
		[setq(1,
			squish(
				iter(
					%q0,
					rest(grab(u(##/LIST_STATS),%0|*),|)
				)
			)
		)]
		[ifelse(
			lt(words(%q1),1),
			There is no action code '[ucstr(%0)]' presently in the system.%r,
			[ulocal(FN_BARGRAPH,%q1,10,2,16,#)]%r
				[space(4)]
				[iter(
					%q0,
					[center(u(%va/fn_strtrunc,name(##),2),2)]
				)]
				%r%r[center([ucstr(%0)] Actions by Bucket,79)]
		)]
	)]
-

&REPORT_ACTIONS Job Database <JD>=
	[localize(
		[ulocal(FN_BARGRAPH,
			setr(0,map(MAP_ACTIONS,v(LIST_STATS))),
			15,
			2,
			16,
			#
		)]
		[setq(0,fold(FOLD_ADD,%q0,0))]%r
		[space(4)]
		[setq(1,map(MAP_ACTIONS2,sort(v(LIST_STATS))))]
		[iter(%q1,[mid(##,0,1)]%b)]%r[space(4)]
		[iter(%q1,[mid(##,1,1)]%b)]%r[space(4)]
		[iter(%q1,[mid(##,2,1)]%b)]
		%r
		%r
		[center(%q0 Actions Performed Since [v(INSTALL_DATE)],79)]
	)]
-

&REPORT_ARTS Job Database <JD>=
	[iter(
		sortby(
			%va/SORTBY_NAME,
			lcon(%vc)
		),
		[ifelse(
			u(%va/fn_hasattr,##,STAT_ART),
			u(%va/FN_TIME,
				round(fdiv(first(get(##/STAT_ART)),rest(get(##/STAT_ART))),0)
			),
			[rjust(-,11)]
		)]%b
		[ljust(ansi(hc,[name(##)]),20)],
		%B,%R
	)]%R
	[rjust(
		u(%va/FN_TIME,
			round(
				fdiv(
					first(default(%vc/STAT_ART,0 0)),
					rest(default(%vc/STAT_ART,0 1))
				)
				,0
			)
		),
		11
	)]%b
	[ansi(hy,Total ART)]%r
	[center(Average Resolution Times by Bucket,79)]
-

&REPORT_ARTSGRAPH Job Database <JD>=
	[setq(0,
		iter(
			setr(1,sortby(%va/SORTBY_NAME,lcon(%vc))),
			ifelse(
				u(%va/fn_hasattr,##,STAT_ART),
				[div(
					round(fdiv(
						first(get(##/STAT_ART)),
						rest(get(##/STAT_ART))
					),0),
					86400
				)],
				0
			)
		)
	)]
	[ulocal(%va/FN_BARGRAPH,%q0,15,2,16,#)]%r
	[space(4)]
	[iter(
		%q1,
		mid([name(##)]%B,0,2)
	)]%r%r
	[center(Average Resolution Time by Bucket %(in days%),79)]
-

&REPORT_BACT Job Database <JD>=
	[switch(
		%0,
		,This report requires you to supply a bucket name.%r%rUse: '+jobs/reports BACT=<bucket name>' to specify a bucket.%r,
		[setq(0,u(%va/FN_FIND-BUCKET,%0))]
		[ifelse(
			isdbref(%q0),
			[localize(
				[ulocal(FN_BARGRAPH,map(MAP_ACTIONS,get(%q0/LIST_STATS)),15,1,	16,#)]%r
				[space(4)]
				[setq(1,
					map(MAP_ACTIONS2,sort(get(%q0/LIST_STATS)))
				)]
				[iter(
					%q1,
					mid(##,0,1)
				)]%r
				[space(4)]
				[iter(
					%q1,
					mid(##,1,1)
				)]%r
				[space(4)]
				[iter(
					%q1,
					mid(##,2,1)
				)]
			)]%r%r
			[center(Number of Actions Performed on Bucket [name(%q0)],79)],
			That is not a valid bucket name. See '+buckets' for a list of valid buckets.
		)]
	)]
-

&REPORT_BUCKETS Job Database <JD>=
	[localize(
		[ulocal(
			FN_BARGRAPH,
			iter(
				sortby(SORTBY_NAME,lcon(%vc)),
				words(children(##))
			)
			,15,2,16,#
		)]
	)]%r
	[space(4)]
	[iter(
		sortby(SORTBY_NAME,lcon(%vc)),
		mid([name(##)]%b,0,2)
	)]%r%r
	[center(# of Jobs in Buckets,79)]
-

&REPORT_CLOSURE Job Database <JD>=
	[localize(
		[setq(0,
			iter(
				APR DNY COM DEL,
				grab(get(%va/LIST_STATS),##|*)
			)
		)]
		[u(%va/FN_EASYPIE,
			10,
			u(%va/FN_ASSEMBLEPIE,
				map(MAP_ACTIONS,%q0)
				,iter(
					map(MAP_ACTIONS2,%q0),
					case(##,APR,Approved,DNY,Denied,COM,Completed,Deleted)
				)
			),
			|,
			10
		)]
	)]
-

&REPORT_CODES Job Database <JD>=
	[center(List of Action Codes:,79)]%r%r
	[setq(0,sort(get(%va/LIST_ACTIONS),b,|,|))]
	[u(%va/fn_columns,%q0,25,|,2)]%r
-

&REPORT_ESC Job Database <JD>=
	[localize(
		[setq(z,
			[iter(
				lnum(1,3),
				setq(##,0)
			)]
			[map(
				%va/MAP_STAT_ESC,
				lcon(%va)
			)]
		)]
		[u(FN_EASYPIE,10,@Gg:%q1:Green|#Yy:%q2:Yellow|.Rr:%q3:Red,|,16,45)]
	)]%r%r
	[center(Job Escalation Colors,79)]%r
-

&REPORT_JACT Job Database <JD>=
	[switch(
		%0,
		,This report requires you to supply a job.%r%rUse: +jobs/reports JACT=<#>%r,
		[setq(0,u(%va/FN_FIND-JOB,%0))]
		[ifelse(
			isdbref(%q0),
			[localize(
				ifelse(
					u(%va/fn_hasattr,%q0,LIST_STATS),
					[ulocal(FN_BARGRAPH,map(MAP_ACTIONS,get(%q0/LIST_STATS)),15,1,16,#)]%r
					[space(4)]
					[setq(1,map(MAP_ACTIONS2,sort(get(%q0/LIST_STATS))))]
					[iter(
						%q1,
						mid(##,0,1)
					)]%r
					[space(4)]
					[iter(
						%q1,
						mid(##,1,1)
					)]%r
					[space(4)]
					[iter(
						%q1,
						mid(##,2,1)
					)],
					No actions recorded for this job.
				)
			)]%r%r
			[center(Actions Performed on [name(%q0)],79)],
			That is not a valid job.%r
		)]	
	)]
-

&REPORT_STATS Job Database <JD>=
	[rjust(ansi(hc,Install:),20)]%b
		[get(%va/INSTALL_DATE)]%r
	[rjust(ansi(hc,Version:),20)]%b
		Anomaly Jobs [get(%va/VERSION)][space(5)]%r
	[rjust(ansi(hc,Release:),20)]%b
		[get(%va/RELEASE)]%r
	[rjust(ansi(hc,Memory:),20)]%b
		[setr(a,
			fold(
				%va/FOLD_ADD,
				iter(
					setr(b,[num(me)] [loc(me)] %vb %vc [lcon(%vc)] [lcon(me)]),
					objmem(##)
				)
			)
		)]%b
		%([round(fdiv(%qa,1024),1)]k in [words(%qb)] objects%)%r
	[rjust(ansi(hc,Open Jobs:),20)]%b
		[setr(0,words(lcon(%va)))]%r
	[rjust(ansi(hc,Capacity:),20)]%b
		[setr(1,u(%va/MAX_JOBS))]%b
		%([mul(round(fdiv(%q0,%q1),2),100)]%% Full%)%r
	[rjust(ansi(hc,Next Job:),20)]%b
		[inc(u(%va/JOBS_NUM))]%r
	[rjust(ansi(hc,Buckets:),20)]%b
		[words(lcon(%vc))]%r
	[rjust(ansi(hc,Opened:),20)]%b
		[last(grab(get(%va/LIST_STATS),CRE|*),|)]
		[setq(x,iter(APR DNY COM DEL,grab(get(%va/LIST_STATS),##|*)))]
		[setq(y,map(%va/MAP_ACTIONS,%qx))]%r
	[rjust(ansi(hc,Closed:),20)]%b
		[fold(%va/FOLD_ADD,%qy,0)]%r
	[rjust(ansi(hc,Actions To Date:),20)]%b
		[fold(FOLD_ADD,map(MAP_ACTIONS,v(LIST_STATS)),0)]%r
	[rjust(ansi(hc,ART:),20)]%b
		[u(%va/FN_ART,%vc)][space(10)] ART=Average Resolution Time%r
	[rjust(ansi(hc,REQ ART:),20)]%b
		[u(%va/FN_ART,locate(%vc,REQ,i))][space(18)]DD:HH:MM:SS%r
	[rjust(ansi(hc,CODE ART:),20)]%b
		[u(%va/FN_ART,locate(%vc,CODE,i))]%r
	[rjust(ansi(hc,TPS ART:),20)]%b
		[u(%va/FN_ART,locate(%vc,TPS,i))]%r
	[rjust(ansi(hc,BUILD ART:),20)]%b
		[u(%va/FN_ART,locate(%vc,BUILD,i))]%r
-

&REPORT_STATUS Job Database <JD>=
	[localize(
		[setq(x,
			[iter(
				lnum(10),
				setq(##,0)
			)]
			[map(
				%va/MAP_STAT_STATUS,
				lcon(%va)
			)]
		)]
		[u(
			FN_EASYPIE,
			12,
			XRr:%q7:Overdue|-Bb:%q0:Hold|xGg:%q1:New|+Cc:%q2:Begun|*Ww:%q3:1/4|oYy:%q4:1/2|@Mm:%q5:3/4|/Xh:%q6:Done,
			|,
			10,
			45
		)]
	)]
-

&RTITLE_ACTBY Job Database <JD>=BAR|Graph of one action across all buckets
-

&RTITLE_ACTIONS Job Database <JD>=BAR|System-wide Actions
-

&RTITLE_ARTS Job Database <JD>=STATS|Average Resolution Times by Bucket
-

&RTITLE_ARTSGRAPH Job Database <JD>=BAR|Average Resolution Times Graph
-

&RTITLE_BACT Job Database <JD>=BAR|All actions on a specified bucket
-

&RTITLE_BUCKETS Job Database <JD>=BAR|Job Dispersal Among Buckets
-

&RTITLE_CLOSURE Job Database <JD>=PIE|Job Closure Patterns
-

&RTITLE_CODES Job Database <JD>=STATS|A list of system-generated action codes
-

&RTITLE_ESC Job Database <JD>=PIE|Job Escalation Status
-

&RTITLE_JACT Job Database <JD>=BAR|Actions performed on a job
-

&RTITLE_STATS Job Database <JD>=STATS|General System Stats
-

&RTITLE_STATUS Job Database <JD>=PIE|Job Status Settings
-

&SORTBY_COMMENTS Job Database <JD>=[sub(after(%0,_),after(%1,_))]
-

&SORTBY_DATE Job Database <JD>=[comp(get(%0/MODIFIED_ON),get(%1/MODIFIED_ON))]
-

&SORTBY_JOB Job Database <JD>=[sort(%0,n)]
-

&SORTBY_NAME Job Database <JD>=[comp(name(%0),name(%1))]
-

&SORTBY_OLDEST Job Database <JD>=[comp(rjust(get(%0/MODIFIED_ON),20,0),rjust(get(%1/MODIFIED_ON),20,0))]
-

&SORTBY_PRI Job Database <JD>=[comp(get(%0/PRIORITY),get(%1/PRIORITY))]
-

&SORTBY_SORT Job Database <JD>=[comp(parent(%0),parent(%1))]
-

&TRIG_ADD Job Database <JD>=
	think 
		[setq(0,default(%0/NUM_COMMENT,1))]
		[u(FN_ADDSTAT,%3,%va)][u(FN_ADDSTAT,%3,%0)]
		[u(FN_ADDSTAT,%3,parent(%0))];
	&COMMENT_%q0 %0=
		%3|
		[secs()]|
		%2|
		[name(%2)]|
		[ifelse(
			u(%va/fn_hasattrp,%0,ALETTER_%3),
			u(%va/fn_strtrunc,u(%0/ALETTER_%3,%0,%2,edit(%1,|,@@PIPE@@)),get(%va/BUFFER)),
			u(%va/fn_strtrunc,edit(%1,|,@@PIPE@@),get(%va/BUFFER))
		)];
	&NUM_COMMENT %0=[inc(%q0)];
	&MODIFIED_ON %0=[secs()];
	&MODIFIED_BY %0=%2;
	@trigger parent(%0)/HOOK_%3=%0,%2,[parent(%0)];
	@trigger %va/TRIG_POST=%0,%3,%2,%1;
	@trigger %va/TRIG_MAIL=%0,%3,%2,%1
-

&TRIG_APPLY Job Database <JD>=
	@trigger %va/TRIG_CREATE=
		%0,
		[locate(%vc,APPS,i)],
		2,
		Application by [name(%0)],
-

&TRIG_BROADCAST Job Database <JD>=
	@pemit/list 
		[setq(0,%0)][filter(%va/FIL_BROADCAST,setunion(lwho(),))]=
		[ansi(hc,JOBS:)] %1
-

&TRIG_CLEAN Job Database <JD>=
	@dolist 
		lcon(me)
		={
			@switch 
				[u(FN_CLEANFIND,##,OPENED_BY)]
				[u(FN_CLEANFIND,##,ASSIGNED_TO)]
				[u(FN_CLEANFIND,##,TAGGED_FOR)]
				[u(FN_CLEANFIND,##,PLAYERS)]
				[u(FN_CLEANFIND,##,WRITER)]
				=1????,{&OPENED_BY ##=U(FN_CLEANFIX,##,OPENED_BY)},
				 ?1???,{&ASSIGNED_TO ##=U(FN_CLEANFIX,##,ASSIGNED_TO)},
				 ??1??,{&TAGGED_FOR ##=U(FN_CLEANFIX,##,TAGGED_FOR)},
				 ???1?,{&PLAYERS ##=U(FN_CLEANFIX,##,PLAYERS)},
				 ????1,{&WRITER ##=U(FN_CLEANFIX,##,WRITER)}
		 }
-

&TRIG_CREATE Job Database <JD>=
	@switch 
		gt(words(lcon(%va)),u(%va/MAX_JOBS))
		=
		1,
		{
			@pemit %0=[ansi(hr,JOBS ERROR:)] Creation failed. The +jobs system is full. Contact staff immediately.;
			@trigger #1430/TRIG_BROADCAST=%1,JOBS SYSTEM IS FULL! Please complete jobs or boost your MAX_JOBS configuration.
		},
		{
			think [setq(0,inc(u(%va/JOBS_NUM)))][setq(1,create(Job %q0,10))][setq(y,case(%7,1,CRE,OTH))];
			@tel %q1=%va;
			@link %q1=%va;
			&OPENED_BY %q1=[switch(%5,,%0,%5)];
			&OPENED_ON %q1=[secs()];
			&MODIFIED_ON %q1=[secs()];
			&STATUS %q1=1;
			&TITLE %q1=%3;
			@parent %q1=[locate(%vc,%1,i)];
			&NUM_COMMENT %q1=2;
			&PRIORITY %q1=%2;
			&COMMENT_1 %q1=CRE|[secs()]|%0|[name(%0)]|[ifelse(u(%va/fn_hasattrp,%q0,ALETTER_%qy),u(%va/fn_strtrunc,u(%q0/ALETTER_%qy,%q1,%0,edit(%4,|,@@PIPE@@)),get(%va/BUFFER)),u(%va/fn_strtrunc,edit(%4,|,@@PIPE@@),get(%va/BUFFER)))];
			&ASSIGNED_TO %q1=%6;
			&JOBS_NUM %va=%q0;
			&DUE_ON %q1=[ifelse(u(%va/fn_hasattrp,%q1,TURNAROUND),add(secs(),mul(60,60,get(%q1/TURNAROUND))),)];
			@trigger %va/TRIG_BROADCAST=%1,New [name(%1)] job # %q0 submitted by [name(%0)]: %3;
			@trigger %1/HOOK_%qy=%q1,%0,%1;
			@trigger %va/TRIG_POST=%q1,%qy,%0,%4;
			@trigger %va/TRIG_MAIL=%q1,%qy,%0,%4;
			think [u(FN_ADDSTAT,CRE,%va)][u(FN_ADDSTAT,CRE,parent(%q1))]
		}
-

&TRIG_DESTROY Job Database <JD>=
	&going %0=1;
	@wait 60=
	{
		@switch 
			get(%0/GOING)
			=
			1,{@set %0=DESTROY_OK;@parent %0;@nuke %0}
	}
-

&TRIG_LOG Job Database <JD>=
	@switch 
		[u(%va/fn_hasattrp,%va,JOB_LOGGING)]
		[setq(0,%0)]
		[setq(1,parent(%q0))]
		[setq(x,u(%va/FN_ITEMIZE,map(MAP_NAME,get(%q0/OPENED_BY),%b,|),|))]
		=
		0,{@@},
		{
			@trigger %va/TRIG_LOG_WRITE=
				[u(%q1/LOGFILE)],
				[center(| [name(%q0)] |,79,=)];
			@trigger %va/TRIG_LOG_WRITE=
				[u(%q1/LOGFILE)],
				[ljust([rjust(ansi(hc,Bucket:),10)]%b
					[u(FN_BUCKETNAME,%q0)],40)]
					[rjust(ansi(hc,Due On:),12)]%b
					[ifelse(
						get(%q0/DUE_ON),
						ifelse(
							gt(secs(),get(%q0/DUE_ON)),
							OVERDUE!,
							convsecs(get(%q0/DUE_ON))),-
					)];
			@trigger %va/TRIG_LOG_WRITE=
				[u(%q1/LOGFILE)],
				[ljust([rjust(ansi(hc,Title:),10)]%b
					[get(%q0/TITLE)],40)]
					[rjust(ansi(hc,Assigned To:),12)]%b
					[ifelse(
						isdbref(get(%q0/ASSIGNED_TO)),
						name(get(%q0/ASSIGNED_TO)),
						Nobody
					)];
			@trigger %va/TRIG_LOG_WRITE=
				[u(%q1/LOGFILE)],
				[ljust([rjust(ansi(hc,Opened On:),10)]%b
					[convsecs(get(%q0/OPENED_ON))],40)]
					[rjust(ansi(hc,Status:),12)]%b
					[switch(
						get(%q0/PRIORITY),
						1,Green,
						2,Yellow,
						3,Red
					)]%b%(
					[switch(
						get(%q0/STATUS),
						0,On Hold,
						1,New,
						2,Underway,
						3,25%%,
						4,50%%,
						5,75%%,
						6,100%%,
						?
					)]%);
			@trigger %va/TRIG_LOG_WRITE=
				[u(%q1/LOGFILE)],
				[rjust(ansi(hc,Opened By:),10)] %qx;
			@dolist sortby(%va/SORTBY_COMMENTS,lattr(%q0/COMMENT_*))=
			{
				@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[repeat(-,79)];
				@trigger %va/TRIG_LOG_WRITE=
					[u(%q1/LOGFILE)],
					[extract(get(%q0/##),4,1,|)]%b
						added on%b
						[convsecs(extract(get(%q0/##),2,1,|))]:%b
						[edit(last(get(%q0/##),|),@@PIPE@@,|)]
			};
			@wait 1={@trigger %va/TRIG_LOG_WRITE=[u(%q1/LOGFILE)],[repeat(=,79)]}
		}
-

&TRIG_LOG_WRITE Job Database <JD>=
	@switch 
		[first(version())]
		=
		RhostMUSH,{@log/file %0=%1},
		PennMUSH,{@log/cmd %1},
		{@log %0=%1}
-

&TRIG_MAIL Job Database <JD>=
	@switch 
		[u(%va/fn_hasattrp,%0,MLETTER_%1)]
		=
		1,
		{
			@wait 1=
			{
				@trigger %vb/TRIG_MAIL=
					[switch(
						%1,
						MAI,[get(%0/OPENED_BY)],
						APR,[get(%0/OPENED_BY)],
						DNY,[get(%0/OPENED_BY)],
						filter(
							%va/FIL_NOSPAM,
							setunion(get(%0/OPENED_BY),)
						)
					)],
					[switch(
						%1,
						APR,Approved:,
						DEL,Deleted:,
						DNY,Denied:,
						COM,Complete:,
						[name(%0)]:
					)]%b[get(%0/TITLE)],
					[u(parent(%0)/MLETTER_%1,%0,%1,%2,%3)]
			};
		}
-

&TRIG_POST Job Database <JD>=
	@switch 
		[u(%va/fn_hasattrp,%0,PLETTER_%1)]
		=
		1,
		{
			@wait 1=
			{
				@trigger %vb/TRIG_POST=
					[u(%0/POST_
						[case(
							%1,
							APR,APPROVE,
							DEL,DELETE,
							DNY,DENY,
							COM,COMPLETE,
							APPROVE
						)]
					)],
					[switch(
						%1,
						APR,A:,
						DNY,D:,
						COM,C:,
						[name(%0)]:
					)]%b[get(%0/TITLE)],
					[u(parent(%0)/PLETTER_%1,%0,%1,%2,%3)]
				};
		}
	
-

@cpattr %#/JOB_VA=Job Database <JD>/VA
-

@cpattr %#/JOB_VB=Job Database <JD>/VB
-

@cpattr %#/JOB_VC=Job Database <JD>/VC
-



# SKINS Setup

&DEFAULT_SKIN Job Database <JD>=1
-

&DEFAULT_BANNER Job Database <JD>=
	[setq(0,%0)]
	[setq(x,
		u(%va/FN_ITEMIZE,
			map(
				MAP_NAME,
				get(%q0/OPENED_BY),
				%b,
				|
			),
		|)
	)]
	[ljust(
		[rjust(
			ansi(hc,Bucket:),
			10
		)]%b
		[u(%va/FN_BUCKETNAME,%q0)],
		40
	)]
	[rjust(ansi(hc,Due On:),12)]%b
	[ifelse(
		get(%q0/DUE_ON),
		ifelse(
			gt(secs(),get(%q0/DUE_ON)),
			OVERDUE!,
			convsecs(get(%q0/DUE_ON))
		),
		-
	)]%r
	[ljust(
		[rjust(ansi(hc,Title:),10)]%b
		[get(%q0/TITLE)]
		,40
	)]
	[rjust(ansi(hc,Status:),12)]%b
	[switch(
		get(%q0/PRIORITY),
		1,Green,
		2,Yellow,
		3,Red
	)]%b%(
	[switch(
		get(%q0/STATUS),
		0,On Hold,
		1,New,
		2,Underway,
		3,25%%,
		4,50%%,
		5,75%%,
		6,100%%,
		?
	)]%)%r
	[ljust(
		[rjust(ansi(hc,Opened On:),10)] [convsecs(get(%q0/OPENED_ON))],
		40
	)]
	[rjust(ansi(hc,Assigned To:),12)]%b
	[ifelse(
		isdbref(get(%q0/ASSIGNED_TO)),
		name(get(%q0/ASSIGNED_TO)),
		Nobody
	)]%r
	[rjust(ansi(hc,Opened By:),10)]%b%qx
-

&DEFAULT_BREAK Job Database <JD>=
	switch(
		%0,
		,repeat(-,79),
		rjust(%[%0%],79,-)
	)
-

&DEFAULT_BUCKETHEADER Job Database <JD>=
	[u(FN_HEADER,Bucket List)]%r
	[ifelse(
		u(%va/FN_WIZONLY,%#),
		[ansi(hc,
			[ljust(Name,9)]
			[ljust(Flags,6)]%b%b
			[ljust(Description,30)]
			[rjust(#Jobs,5)]
			[rjust(Pct,5)]
			[space(3)]C%b%bA%b%bD%b%bDue
			[space(3)]
			ARTS
		)],
		[ansi(hc,
			[ljust(NAME,8)]
			[ljust(Description,50)]%b
			[rjust(Viewing,20)]
		)]
	)]%r
	[u(FN_BREAK)]
-

&DEFAULT_BUCKETLIST Job Database <JD>=
	[ifelse(
		u(%va/FN_WIZONLY,%#),
		[ljust(name(%0),6)]%b%b
			[ifelse(u(%va/FN_MONITORCHECK,%0,%#),V,-)]
			[ifelse(u(%va/IS_HIDDEN,%0),H,-)]
			[ifelse(u(%va/IS_LOCKED,%0),ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),C,L),-)]
			[ifelse(u(%va/IS_TAGGED,%0),T,-)]
			[ifelse(u(%va/IS_PUBLIC,%0),M,-)]
			[ifelse(u(%va/IS_PUBLISHED,%0),P,-)]
			[ifelse(u(%va/IS_SUMMARY,%0),S,-)]%b%b
			[u(%va/fn_strtrunc,ljust(get(%0/DESC),40),30)]
			[rjust(words(children(%0)),5)]
			[rjust(
				mul(
					round(
						fdiv(
							words(children(%0)),
							words(lcon(%va))
						),
						2
					),
					100
				)%%,
				5
			)]%b%b
			[rjust(get(%0/POST_COMPLETE),2)]%b
			[rjust(get(%0/POST_APPROVE),2)]%b
			[rjust(get(%0/POST_DENY),2)]
			[rjust(default(%0/TURNAROUND,0),5)]
			[rjust(
				[ifelse(
					u(%va/fn_hasattr,%0,STAT_ART),
					[round(
						fdiv(
							fdiv(
								first(get(%0/STAT_ART)),
								rest(get(%0/STAT_ART))
							),
							86400
						),
						0
					)]d,
					-
				)],
				7
			)],
		[ljust(name(%0),6)]%b%b
			[u(%va/fn_strtrunc,ljust(get(%0/DESC),50),50)]%b
			[rjust(
				ifelse(
					u(%va/FN_MONITORCHECK,%0,%#),
					Yes,
					-
				),
				20
			)]
	)]
-

&DEFAULT_FLAGS Job Database <JD>=
	[ifelse(
		u(me/IS_LOCKED,%0),
		u(me/FN_FLAG,ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),CHECKED OUT,LOCKED),hr),
	)]
	[ifelse(
		u(me/IS_PUBLIC,%0),
		u(me/FN_FLAG,Myjobs),
	)]
	[ifelse(
		u(me/IS_PUBLISHED,%0),
		u(me/FN_FLAG,Published),
	)]
	[ifelse(
		u(me/IS_TAGGED,%0),
		u(me/FN_FLAG,Tags),
	)]
-

&DEFAULT_FOOTER Job Database <JD>=
	[switch(
		%0,
		,repeat(=,79),
		center(| %0 |,79,=)
	)]
-

&DEFAULT_HEADER Job Database <JD>=
	[switch(
		%0,
		,[repeat(=,79)],
		[center(| [ansi(hy,%0)] |,79,=)]
	)]
-

&DEFAULT_JOBLIST Job Database <JD>=
	[setq(0,
		secure(
			ifelse(
				u(%va/fn_hasattrp,%1,JOBS),
				lcstr(mid(get(%1/JOBS),0,20)),
				get(%va/JOBS_DEFAULT)
			)
		)
	)]
	[setq(1,
		ifelse(
			get(%0/DUE_ON),
			ifelse(
				gt(secs(),get(%0/DUE_ON)),
				r,switch(
					get(%0/PRIORITY),
					1,g,
					2,y,
					3,r,
					g
				)
			),
			switch(
				get(%0/PRIORITY),
				1,g,
				2,y,
				3,r
			)
		)
	)]
	[ifelse(
		u(%va/FN_ISNEW,%0,%1),
		[ansi(hr,*)]%b,
		%b%b
	)]
	[ansi(h%q1,
		[rjust(
			[last(name(%0))],
			5
		)]%b
		[iter(
			lnum(strlen(%q0)),
			[u(%va/DISPLAY_[mid(%q0,##,1)],%0,%1)]
		)]
	)]
-

&DEFAULT_JOBSHEADER Job Database <JD>=
	localize(
		[u(FN_HEADER,Anomaly Jobs [u(VERSION)])]%r
		[setq(1,
			[secure(
				switch(
					u(%va/fn_hasattrp,%0,JOBS),
					1,lcstr(mid(get(%0/JOBS),0,20)),
					u(JOBS_DEFAULT)
				)
			)]
		)]
		[ansi(hc,*%b%b
			[ljust(Job#,5)]
			[iter(
				lnum(strlen(%q1)),
				u(HEADER_[mid(%q1,##,1)])
			)]
		)]%r
		[u(FN_BREAK)])
-

&DEFAULT_READ Job Database <JD>=
	[repeat(-,79)]%r
	[ifelse(
		u(%va/EDIT_ACCESS,%#),
		[ansi(h,%[)]
			[ifelse(
				and(
					or(
						u(%va/IS_PUBLISHED,%1),
						switch(
							extract(get(%1/%0),3,1,|),
							u(%1/OPENED_BY),1,
							0),
						hasflag(%1/%0,no_inherit)
					),
					u(%va/IS_PUBLIC,%1)
				),
				ansi(hc,[rest(%0,_)]+),
				ansi(hc,[rest(%0,_)]-)
			)]
			[ansi(h,%])]%b,
	)]
	[ansi(h,[extract(get(%1/%0),4,1,|)]%b
		added on%b
		[convsecs(
			extract(
				get(%1/%0),2,1,|)
		)]:%b 
	)]
	[edit(last(get(%1/%0),|),@@PIPE@@,|)]
-

&DEFAULT_STAFFSUM Job Database <JD>=
	[localize(
		%r
		[repeat(-,79)]%r
		[rjust(ansi(hc,DB#:),10)] %0[space(10)]
			[rjust(ansi(hc,Comments:),10)] [setr(z,words(lattr(%0/COMMENT_*)))]%r%r
		[rjust(ansi(hc,Players:),10)] %(Players contributing to this job%)%r
		[setq(y,
			setunion(
				iter(
					lattr(%0/COMMENT_*),
					extract(get(%0/##),4,1,|),%b,|
				),,|
			)
		)]
		[u(%va/fn_columns,%qy,20,|,11)]
		[ifelse(
			u(%va/fn_hasattr,%0,LIST_READERS),
			%r[rjust(ansi(hc,Readers:),10)]%b
				%(Players who have read this job in the past%)%r
			[setq(z,
				iter(
					get(%0/LIST_READERS),
					first(##,|)
				)
			)]
			[u(%va/fn_columns,map(%va/MAP_NAME,%qz,%b,|),20,|,11)],
		)]
		[ifelse(
			u(%va/fn_hasattr,%0,TAGGED_FOR),
			%r[rjust(ansi(hc,Tags:),10)]%b
				%(Players this job has been tagged for%)%r
				[u(%va/fn_columns,map(%va/MAP_NAME,get(%0/TAGGED_FOR),%b,|),20,|,11)],)]%r
				[rjust(ansi(hc,Stats:),10)]%r
				[u(%va/fn_columns,
					iter(
						ifelse(
							u(%va/fn_hasattr,%0,LIST_STATS),
							sort(get(%0/LIST_STATS)),
						),
						[first(##,|)]%b[last(##,|)],%b,|
					),20,|,11
				)]%r
	)]
-

&DEFAULT_SUMMARY Job Database <JD>=%r[repeat(-,79)]%r[u(parent(%0)/SUMMARY,%0)]
-


# Chrome Skin Setup

&CHROME_SKIN Job Database <JD>=1
-

&CHROME_BANNER Job Database <JD>=
	%r
	[setq(0,%0)]
	[setq(x,
		u(%va/FN_ITEMIZE,
			map(
				MAP_NAME,
				get(%q0/OPENED_BY),
				%b,
				|
			),
		|)
	)]
	[ljust(
		[rjust(ansi(hc,Bucket:),10)]%b
		[u(%va/FN_BUCKETNAME,%q0)]
		,40
	)]
	[rjust(ansi(hc,Due On:),12)]%b
	[ifelse(
		get(%q0/DUE_ON),
		ifelse(
			gt(secs(),get(%q0/DUE_ON)),
			OVERDUE!,
			convsecs(get(%q0/DUE_ON))
		),
		-
	)]%r
	[ljust(
		[rjust(ansi(hc,Title:),10)]%b
		[get(%q0/TITLE)]
		,40
	)]
	[rjust(ansi(hc,Status:),12)]%b
	[switch(
		get(%q0/PRIORITY),
		1,Green,
		2,Yellow,
		3,Red
	)]%b
	%([switch(
		get(%q0/STATUS),
		0,On Hold,
		1,New,
		2,Underway,
		3,25%%,
		4,50%%,
		5,75%%,
		6,100%%,?
	)]%)%r
	[ljust(
		[rjust(ansi(hc,Opened On:),10)]%b
		[convsecs(get(%q0/OPENED_ON))]
		,40
	)]
	[rjust(ansi(hc,Assigned To:),12)]%b
	[ifelse(
		isdbref(get(%q0/ASSIGNED_TO)),
		name(get(%q0/ASSIGNED_TO)),
		Nobody
	)]%r
	[rjust(ansi(hc,Opened By:),10)]%b%qx
-

&CHROME_BREAK Job Database <JD>=[repeat(_,79)]
-

&CHROME_FLAGS Job Database <JD>=
	[edit(
		u(%va/fn_trim,
			squish(
				[ifelse(
					u(me/IS_LOCKED,%0),
					%b[ansi(hr,ifelse(u(%va/fn_hasattrp,%0,CHECKOUT),CHECKED_OUT,LOCKED))]%b,
				)]
				[ifelse(
					u(me/IS_PUBLIC,%0),
					%bMYJOBS%b,
				)]
				[ifelse(
					u(me/IS_PUBLISHED,%0),
					%bPUBLISHED%b,
				)]
				[ifelse(
					u(me/IS_TAGGED,%0),
					%bTAGS%b,
				)]
			)
		),%b,%b-%b
	)]
-

&CHROME_FOOTER Job Database <JD>=
	%r
	[switch(
		%0,
		,[repeat(~,79)],
		[repeat(~,sub(73,strlen(%0)))]|[ansi(Chw,%b[stripansi(%0)]%b)]|~~
	)]
-

&CHROME_HEADER Job Database <JD>=
	[switch(
		%0,
		,[repeat(_,79)],
		__|[ansi(Chw,%b%0%b)]|[repeat(_,sub(73,strlen(%0)))]
	)]
-

&CHROME_JOBLIST Job Database <JD>=
	[setq(0,
		secure(
			ifelse(
				u(%va/fn_hasattrp,%1,JOBS),
				lcstr(mid(get(%1/JOBS),0,20)),
				get(%va/JOBS_DEFAULT)
			)
		)
	)]
	[setq(1,
		ifelse(
			get(%0/DUE_ON),
			ifelse(
				gt(secs(),get(%0/DUE_ON)),
				h,
				switch(
					get(%0/PRIORITY),
					1,hx,
					2,n,
					3,h,hx
				)
			),
			switch(
				get(%0/PRIORITY),
				1,hx,
				2,n,
				3,h
			)
		)
	)]
	[ifelse(
		u(%va/FN_ISNEW,%0,%1),
		[ansi(hr,*)]%b,
		%b%b
	)]
	[ansi(h%q1,
		[rjust([last(name(%0))],5)]%b
		[iter(
			lnum(strlen(%q0)),
			[u(%va/DISPLAY_[mid(%q0,##,1)],%0,%1)]
		)]
	)]
-

&CHROME_JOBSHEADER Job Database <JD>=
	localize(
		[u(FN_HEADER,Anomaly Jobs [u(VERSION)])]%r
		[setq(1,
			[secure(
				switch(
					u(%va/fn_hasattrp,%0,JOBS),
					1,lcstr(mid(get(%0/JOBS),0,20)),
					u(JOBS_DEFAULT)
				)
			)]
		)]
		[ansi(Chcu,*%b%b
			[ljust(Job#,5)]
			[iter(
				lnum(strlen(%q1)),
				u(HEADER_[mid(%q1,##,1)])
			)]
		)])%r
-

&CHROME_READ Job Database <JD>=
	%r[ansi(u,
			[ifelse(
				u(%va/EDIT_ACCESS,%#),
				[ansi(Xh,%b[rest(%0,_)]:%b)],
				[ansi(Xh,%b)]
			)]|
			[ansi(Xhc,%b[extract(get(%1/%0),4,1,|)])]%b|
			[ansi(Xhu,repeat(%b,sub(28,strlen(extract(get(%1/%0),4,1,|)))))]
			[ifelse(
				and(
					or(
						u(%va/IS_PUBLISHED,%1),
						switch(
							extract(get(%1/%0),3,1,|),
							u(%1/OPENED_BY),1,
							0
						),
						hasflag(%1/%0,no_inherit)
					),
					u(%va/IS_PUBLIC,%1)
				),
				|[ansi(Xc,%b+Published+%b)][ansi(Xh,|___)],
				[ansi(Xhu,repeat(%b,17))]
			)]
			[ansi(Xhu,
				[convsecs(extract(get(%1/%0),2,1,|))]%b
			)]
		)]%r
		
		[space(4)]
		[edit(last(get(%1/%0),|),@@PIPE@@,|)]

-


&CHROME_SUMMARY Job Database <JD>=%r[repeat(_,79)]%r[u(parent(%0)/SUMMARY,%0)]
-

# WhiteBG Skin Setup

&WHITEBG_SKIN Job Database <JD>=
  1
-
&WHITEBG_JOBLIST Job Database <JD>=
  [setq(0,secure(ifelse(
    u(%va/fn_hasattrp,%1,JOBS),
    lcstr(mid(get(%1/JOBS),0,20)),
    get(%va/JOBS_DEFAULT)
  )))]
  [setq(1,ifelse(
    get(%0/DUE_ON),
    ifelse(
      gt(secs(),get(%0/DUE_ON)),
      r,
      switch(
        get(%0/PRIORITY),
        1,g,
        2,y,
        3,r,
        g
      )
    ),
    switch(
      get(%0/PRIORITY),
      1,g,
      2,y,
      3,r
    )
  ))]
  [ifelse(
    u(%va/FN_ISNEW,%0,%1),
    [ansi(hr,*)]%b,
    %b%b
  )]
  [ansi(%q1,
    [rjust([last(name(%0))],5)]%b
    [iter(
      lnum(strlen(%q0)),
      [u(%va/DISPLAY_[mid(%q0,##,1)],%0,%1)]
    )]
  )]
-

&WHITEBG_FOOTER Job Database <JD>=
  [ansi(x,switch(%0,,repeat(=,79),center(| [stripansi(%0)] |,79,=)))]
-

&WHITEBG_JOBSHEADER Job Database <JD>=
  [localize(
    [u(FN_HEADER,Anomaly Jobs [u(VERSION)])]%r
    [setq(1,[secure(switch(
      u(%va/fn_hasattrp,%0,JOBS),
      1,lcstr(mid(get(%0/JOBS),0,20)),
      u(JOBS_DEFAULT)
    ))])]
    [ansi(c,
      *%b%b[ljust(Job#,5)][iter(
        lnum(strlen(%q1)),
        u(HEADER_[mid(%q1,##,1)])
      )]
    )]%r
    [u(FN_BREAK)]
  )]
-

&WHITEBG_HEADER Job Database <JD>=
  [ansi(x,switch(%0,,[repeat(=,79)],[center(| [stripansi(%0)] |,79,=)]))]
-
&WHITEBG_READ Job Database <JD>=
  [repeat(-,79)]%r
  [ifelse(
    u(%va/EDIT_ACCESS,%#),
    [ansi(x,%[)]
    [ifelse(
      and(
        or(
          u(%va/IS_PUBLISHED,%1),
          switch(
            extract(get(%1/%0),3,1,|),
            u(%1/OPENED_BY),1,
            0
          ),
          hasflag(%1/%0,no_inherit)
        ),
        u(%va/IS_PUBLIC,%1)
      ),
      ansi(c,[rest(%0,_)]+),
      ansi(c,[rest(%0,_)]-)
    )]
    [ansi(x,%])]%b
  ,)]
  [ansi(x,
    [extract(get(%1/%0),4,1,|)] added on [convsecs(extract(get(%1/%0),2,1,|))]: %b
  )]
  [edit(last(get(%1/%0),|),@@PIPE@@,|)]
-

&WHITEBG_BUCKETHEADER Job Database <JD>=
  [u(FN_HEADER,Bucket List)]%r
  [ifelse(
    u(%va/FN_WIZONLY,%#),
    [ansi(c,
      [ljust(Name,9)]
      [ljust(Flags,6)]%b%b
      [ljust(Description,30)]
      [rjust(#Jobs,5)]
      [rjust(Pct,5)]
      [space(3)]C%b%bA%b%bD%b%b
      Due[space(3)]ARTS
    )],
    [ansi(c,
      [ljust(NAME,8)]
      [ljust(Description,50)]%b
      [rjust(Viewing,20)]
    )]
  )]%r
  [u(FN_BREAK)]
-

&WHITEBG_STAFFSUM Job Database <JD>=
  [localize(
    %r[repeat(-,79)]%r
    [rjust(ansi(c,DB#:),10)] %0
    [space(10)]
    [rjust(ansi(c,Comments:),10)] [setr(z,words(lattr(%0/COMMENT_*)))]%r
    %r[rjust(ansi(c,Players:),10)] %(Players contributing to this job%)%r
    [setq(y,setunion(
      iter(
        lattr(%0/COMMENT_*),
        extract(get(%0/##),4,1,|),
        %b,|
      ),,|
    ))]
    [u(%va/fn_columns,%qy,20,|,11)]
    [ifelse(
      u(%va/fn_hasattr,%0,LIST_READERS),
      %r[rjust(ansi(c,Readers:),10)] %(Players who have read this job in the past%)%r
      [setq(z,iter(get(%0/LIST_READERS),first(##,|)))]
      [u(%va/fn_columns,map(%va/MAP_NAME,%qz,%b,|),20,|,11)],
    )]
    [ifelse(
      u(%va/fn_hasattr,%0,TAGGED_FOR),
      %r[rjust(ansi(c,Tags:),10)] %(Players this job has been tagged for%)%r
      [u(%va/fn_columns,map(%va/MAP_NAME,get(%0/TAGGED_FOR),%b,|),20,|,11)],
    )]%r
    [rjust(ansi(c,Stats:),10)]%r
    [u(%va/fn_columns,iter(
      ifelse(
        u(%va/fn_hasattr,%0,LIST_STATS),
        sort(get(%0/LIST_STATS)),
      ),
      [first(##,|)] [last(##,|)],
      %b,|
    ),20,|,11)]%r
  )]
-

&WHITEBG_BANNER Job Database <JD>=
  [setq(0,%0)]
  [setq(x,u(%va/FN_ITEMIZE,map(MAP_NAME,get(%q0/OPENED_BY),%b,|),|))]
  [ljust([rjust(ansi(c,Bucket:),10)] [u(%va/FN_BUCKETNAME,%q0)],40)]
  [rjust(ansi(c,Due On:),12)] [ifelse(
    get(%q0/DUE_ON),
    ifelse(
      gt(secs(),get(%q0/DUE_ON)),
      OVERDUE!,
      convsecs(get(%q0/DUE_ON))
    ),
    -
  )]%r
  [ljust([rjust(ansi(c,Title:),10)] [get(%q0/TITLE)],40)]
  [rjust(ansi(c,Status:),12)] [switch(
    get(%q0/PRIORITY),
    1,Green,
    2,Yellow,
    3,Red
  )] %([switch(
    get(%q0/STATUS),
    0,On Hold,
    1,New,
    2,Underway,
    3,25%%,
    4,50%%,
    5,75%%,
    6,100%%,
    ?
  )]%)%r
  [ljust([rjust(ansi(c,Opened On:),10)] [convsecs(get(%q0/OPENED_ON))],40)]
  [rjust(ansi(c,Assigned To:),12)] [ifelse(
    isdbref(get(%q0/ASSIGNED_TO)),
    name(get(%q0/ASSIGNED_TO)),
    Nobody
  )]%r
  [rjust(ansi(c,Opened By:),10)] %qx
-

# Version/Etc

&CREDITS Job Database <JD>=Starfleet@Anomaly (eye1movies@aol.com)
-

&MAINTAINER Job Database <JD>=Halmar@Gamma One (grey419@gmail.com)
-

&CONTRIBUTORS Job Database <JD>=Firestorm@Ephemera, Grey@Anomaly, Ian@MUX, Minion@Crossroads
-

&LICENSE Job Database <JD>=You may port this code to any game provided that these credits remain intact. Please report any and all bugs, feedback or whatnot to the email address provided above. The most recent version of this code can be found at project's home: http://code.google.com/p/anomalyjobs/
-

&RELEASE Job Database <JD>=Dec ??, 2009
-

&VERSION Job Database <JD>=v5.2
-

&VERSION Job Parent Object <JPO>=v5.2
-

# Job Tracker Setup

@switch 
	first(version())
	=
	RhostMUSH,{&TRIG_MAIL Job Tracker=@mail %[remove%(%%0,owner%(me%)%)%]=%%1/%%2},
	PennMUSH,{&TRIG_MAIL Job Tracker=@mail %[remove%(%%0,owner%(me%)%)%]=%%1/%%2},
	{&TRIG_MAIL Job Tracker=@mail/quick %[remove%(%%0,owner%(me%)%)%]/%%1=%%2}
-

&TRIG_POST Job Tracker=+bbpost %0/%1=%2
-



# Job Parent Object <JPO> Setup

@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting up master parent.
-
# This will accomplish the same thing as @daily
# Penn users will need to add to a CRON
&daily Job Parent Object <JPO>=
	@dolist 
		lcon(me)
		={
			@switch 
				[u(%va/fn_hasattr,##,HOOK_AUT)]
				=1,{@trigger ##/HOOK_AUT=[u(%va/fn_trim,## [children(##)],b)],[owner(%va)]}
		 }
-
@switch 
	first(version())
	=
	PennMUSH,{
		@pemit %#=[ansi(hc,ANOMALY JOBS:)] PennMUSH does not have @daily.%B
		Add a daily trigger to [num(Job Parent Object <JPO>)]/DAILY to your CRON object.
	}
-

&ACCESS Job Parent Object <JPO>=[u(%va/FN_STAFFALL,%#)]
-

&ACCESS_DESC Job Parent Object <JPO>=[u(%va/FN_STAFFALL,%0)]
-

&ACCESS_HELP Job Parent Object <JPO>=[u(%va/FN_STAFFALL,%0)]
-

&ACCESS_HIDDEN Job Parent Object <JPO>=[u(%va/FN_WIZONLY,%0)]
-

&ACCESS_LOCKED Job Parent Object <JPO>=[u(%va/FN_WIZONLY,%0)]
-

&ACCESS_LOGFILE Job Parent Object <JPO>=[u(%va/FN_WIZONLY,%0)]
-

&ACCESS_MYJOBS Job Parent Object <JPO>=[u(%va/FN_WIZONLY,%0)]
-

&ACCESS_POST_APPROVE Job Parent Object <JPO>=[u(%va/FN_WIZONLY,%0)]
-

&ACCESS_POST_COMPLETE Job Parent Object <JPO>=[u(%va/FN_WIZONLY,%0)]
-

&ACCESS_POST_DENY Job Parent Object <JPO>=[u(%va/FN_WIZONLY,%0)]
-

&ACCESS_TURNAROUND Job Parent Object <JPO>=[u(%va/FN_WIZONLY,%0)]
-

&ERROR_HIDDEN Job Parent Object <JPO>=Valid options for the HIDDEN parameter are 'yes' and 'no'.
-

&ERROR_LOCKED Job Parent Object <JPO>=Valid settings for the LOCKED parameter are 'yes' and 'no'.
-

&ERROR_MYJOBS Job Parent Object <JPO>=Valid settings for the MYJOBS parameter are 'yes' and 'no'.
-

&ERROR_POST_APPROVE Job Parent Object <JPO>=The setting for the POST_APPROVE parameter must be a positive integer.
-

&ERROR_POST_COMPLETE Job Parent Object <JPO>=The setting for the POST_COMPLETE parameter must be a positive integer.
-

&ERROR_POST_DENY Job Parent Object <JPO>=The setting for the POST_DENY parameter must be a positive integer.
-

&ERROR_TURNAROUND Job Parent Object <JPO>=You must provide a turnaround time in hours.
-

&HELP Job Parent Object <JPO>=%rThere is no help available for that bucket. To set help information for the [name(me)] bucket, use:%r%r[space(5)]+bucket/set [lcstr(name(me))]/help=<information>%r
-

&HOOK_CKO Job Parent Object <JPO>=@cpattr %0/ASSIGNED_TO=%0/TEMP_ASN;&ASSIGNED_TO %0=%1
-

&HOOK_CKI Job Parent Object <JPO>=&ASSIGNED_TO %0=[get(%0/TEMP_ASN)];&TEMP_ASN %0=
-

&HOOK_MAI Job Parent Object <JPO>=@set %0/[last(sortby(%va/SORTBY_COMMENTS,lattr(%0/COMMENT_*)))]=no_inherit
-

&MLETTER_APR Job Parent Object <JPO>=[name(%0)] has been approved:%r%r[last(get(%0/COMMENT_1),|)]%r[repeat(-,75)]%r[ansi(h,Comments added by [name(%2)]:)] %3
-

&MLETTER_DNY Job Parent Object <JPO>=[name(%0)] has been denied:%r%r[last(get(%0/COMMENT_1),|)]%r[repeat(-,75)]%r[ansi(h,Comments added by [name(%2)]:)] %3
-

&MLETTER_MAI Job Parent Object <JPO>=[name(%2)] is mailing you regarding [name(%0)]:%r%r%3%r[repeat(-,75)]%rUnless this letter indicates otherwise%, you should respond with the following command:%r%r[space(5)]%xh+myjob/add [last(name(%0))]=<your comments>%xn
-

&PLETTER_APR Job Parent Object <JPO>=
	[space(10)]%xhJob:%xn #[last(name(%0))]%r
	[space(8)]%xhTitle:%xn [get(%0/TITLE)]%r
	[space(4)]%xhOpened By:%xn [u(%va/FN_PLAYERLIST,%0)]%r
	[space(4)]%xhOpened On:%xn [convsecs(get(%0/OPENED_ON))]%r
	%b%xhCompleted By:%xn [name(%2)]%r%b%xhCompleted On:%xn [time()]%r%r
	[last(get(%0/COMMENT_1),|)]%r
	[repeat(-,78)]%r
	[ansi(h,Comments from [name(%2)]:)] %3%r%r
	This job was approved.
-

&PLETTER_COM Job Parent Object <JPO>=
	Job [last(name(%0))] has been completed by [name(%2)]:%r%r[last(get(%0/COMMENT_1),|)]%r[repeat(-,78)]%r[ansi(h,Comments from [name(%2)]:)] %3
-

&PLETTER_DNY Job Parent Object <JPO>=
	[space(10)]%xhJob:%xn #[last(name(%0))]%r
	[space(8)]%xhTitle:%xn [get(%0/TITLE)]%r
	[space(4)]%xhOpened By:%xn [u(%va/FN_PLAYERLIST,%0)]%r
	[space(4)]%xhOpened On:%xn [convsecs(get(%0/OPENED_ON))]%r
	%b%xhCompleted By:%xn [name(%2)]%r%b%xhCompleted On:%xn [time()]%r%r
	[last(get(%0/COMMENT_1),|)]%r
	[repeat(-,78)]%r
	[ansi(h,Comments from [name(%2)]:)] %3%r%r
	This job was denied.
-

&PROCESS_DESC Job Parent Object <JPO>=[setq(3,DESC)][setq(1,%0)]1
-

&PROCESS_HELP Job Parent Object <JPO>=[setq(3,HELP)][setq(1,%0)]1
-

&PROCESS_HIDDEN Job Parent Object <JPO>=[setq(3,HIDDEN)][setq(1,switch(lcstr(%0),yes,1,no,,0))][switch(%q1,,1,%q1)]
-

&PROCESS_LOCKED Job Parent Object <JPO>=[setq(3,LOCKED)][setq(1,switch(lcstr(%0),yes,1,no,,0))][switch(%q1,,1,%q1)]
-

&PROCESS_LOGFILE Job Parent Object <JPO>=[setq(3,LOGFILE)][setq(1,%0)]1
-

&PROCESS_MYJOBS Job Parent Object <JPO>=[setq(3,PUBLIC)][setq(1,switch(lcstr(%0),yes,1,no,,0))][switch(%q1,,1,%q1)]
-

&PROCESS_POST_APPROVE Job Parent Object <JPO>=[setq(3,POST_APPROVE)][setq(1,%0)][gt(%0,0)]
-

&PROCESS_POST_COMPLETE Job Parent Object <JPO>=[setq(3,POST_COMPLETE)][setq(1,%0)][gt(%0,0)]
-

&PROCESS_POST_DENY Job Parent Object <JPO>=[setq(3,POST_DENY)][setq(1,%0)][gt(%0,0)]
-

&PROCESS_TURNAROUND Job Parent Object <JPO>=[setq(3,TURNAROUND)][setq(1,%0)][isnum(%0)]
-

&STAT_ART Job Parent Object <JPO>=0 0
-

@set Job Parent Object <JPO>/STAT_ART=NO_INHERIT
-

@cpattr %#/JOB_VA=Job Parent Object <JPO>/VA
-

@cpattr %#/JOB_VB=Job Parent Object <JPO>/VB
-

@cpattr %#/JOB_VC=Job Parent Object <JPO>/VC
-


# Bucket Setup

@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting up buckets.
-

# ADMIN Bucket

@create ADMIN=10
-

@Desc ADMIN=For game administrative issues.
-

@lock/Speech ADMIN=ACCESS/1
-

&ACCESS ADMIN=[u(%va/FN_STAFFALL,%#)]
-

@parent ADMIN=Job Parent Object <JPO>
-

@tel ADMIN=Job Parent Object <JPO>
-

# APPS Bucket

@create APPS=10
-

@Desc APPS=Character applications submitted for review.
-

@lock/Speech APPS=ACCESS/1
-

&ALETTER_OTH APPS=Application for approval submitted by [name(%1)].
-

&MLETTER_OTH APPS=You have submitted an application for approval. Please give staff some time to process the application. You will hear back soon.
-

&MLETTER_APR APPS=You have been approved by [name(%2)].
-

&PLETTER_APR APPS=[name(%2)] has approved [name(get(%0/OPENED_BY))] for roleplay.
-

&ACCESS APPS=[u(%va/FN_STAFFALL,%#)]
-

@parent APPS=Job Parent Object <JPO>
-

@tel APPS=Job Parent Object <JPO>
-


# BUILD Buckets

@create BUILD=10
-

@Desc BUILD=For building issues and typo reports.
-

@lock/Speech BUILD=ACCESS/1
-

&PUBLIC BUILD=1
-

&ACCESS BUILD=[or(haspower(%#,builder),u(%va/FN_STAFFALL,%#))]
-

@set BUILD=SAFE
-

@parent BUILD=Job Parent Object <JPO>
-

@tel BUILD=Job Parent Object <JPO>
-

# CGEN Bucket

@create CGEN=10
-

@Desc CGEN=For character generation problems and updates.
-

@lock/Speech CGEN=ACCESS/1
-

&ACCESS CGEN=[u(%va/FN_STAFFALL,%#)]
-

@parent CGEN=Job Parent Object <JPO>
-

@tel CGEN=Job Parent Object <JPO>
-


# CODE Bucket

@create CODE=10
-

@Desc CODE=For bugs and code enhancements.
-

@lock/Speech CODE=ACCESS/1
-

&PUBLIC CODE=1
-

&ACCESS CODE=[u(%va/FN_STAFFALL,%#)]
-

@set CODE=SAFE
-

@parent CODE=Job Parent Object <JPO>
-

@tel CODE=Job Parent Object <JPO>
-


# FEEP Bucket

@create FEEP=10
-

@Desc FEEP=Storage for unimplemented game ideas.
-

@lock/Speech FEEP=ACCESS/1
-

&HIDDEN FEEP=1
-

&ACCESS FEEP=[u(%va/FN_STAFFALL,%#)]
-

@parent FEEP=Job Parent Object <JPO>
-

@tel FEEP=Job Parent Object <JPO>
-


# FORUM Bucket

@create FORUM=10
-

@Desc FORUM=Tabled discussion jobs. Feedback needed.
-

@lock/Speech FORUM=ACCESS/1
-

&ACCESS FORUM=[u(%va/FN_STAFFALL,%#)]
-

@parent FORUM=Job Parent Object <JPO>
-

@tel FORUM=Job Parent Object <JPO>
-


# PITCH Bucket

@create PITCH=10
-

@Desc PITCH=Pitched plots and stories.
-

@lock/Speech PITCH=ACCESS/1
-

&ACCESS PITCH=[u(%va/FN_STAFFALL,%#)]
-

&HIDDEN PITCH=1
-

@set PITCH=SAFE
-

@parent PITCH=Job Parent Object <JPO>
-

@tel PITCH=Job Parent Object <JPO>
-


# PUB Bucket

@create PUB=10
-

@Desc PUB=Public jobs. Everyone has +myjobs access.
-

@lock/Speech PUB=ACCESS/1
-

&ACCESS PUB=[u(%va/FN_STAFFALL,%#)]
-

&TRANSPARENT PUB=1
-

&PUBLIC PUB=1
-

&HOOK_CRE PUB=@set %0/COMMENT_1=no_inherit
-

@parent PUB=Job Parent Object <JPO>
-

@set PUB=SAFE
-

@tel PUB=Job Parent Object <JPO>
-


# QUERY Bucket


@create QUERY=10
-

@Desc QUERY=Query bucket.
-

@lock/Speech QUERY=ACCESS/1
-

&PRIORITY QUERY=2
-

&PUBLIC QUERY=1
-

&ACCESS QUERY=[u(%va/FN_STAFFALL,%#)]
-

&TURNAROUND QUERY=168
-

&HOOK_OTH QUERY=@set %0/COMMENT_1=no_inherit;&ASSIGNED_TO %0=%1
-

&MLETTER_OTH QUERY=You have been issued an official query by the jobs system by [name(%2)]. You have [div(v(TURNAROUND),24)] days at the time of this mail to respond to the query%, otherwise staff may need to act on the issue without your input. To see your query%, please type '+myjob [last(name(%0))]'.
-

@set QUERY=SAFE
-

@parent QUERY=Job Parent Object <JPO>
-

@tel QUERY=Job Parent Object <JPO>
-


# REQ

@create REQ=10
-

@Desc REQ=Player requests.
-

@lock/Speech REQ=ACCESS/1
-

&PUBLIC REQ=1
-

&PRIORITY REQ=2
-

&ACCESS REQ=[u(%va/FN_STAFFALL,%#)]
-

&TURNAROUND REQ=72
-

&LOGFILE REQ=reqlog
-

&MLETTER_OTH REQ=You have requested '[name(%0)]: [get(%0/TITLE)]' from staff: %r%r%3%r%r[repeat(-,75)]%rSee '[ansi(h,+help myjobs)]' for help on how to display and add to your jobs.%r%rPlease give staff at least [u(me/TURNAROUND)] hours from the date of this mail to process your request.
-

@set REQ=SAFE
-

@parent REQ=Job Parent Object <JPO>
-

@tel REQ=Job Parent Object <JPO>
-

# RP Bucket

@create RP=10
-

@Desc RP=For storing potential plots.
-

@lock/Speech RP=ACCESS/1
-

&ACCESS RP=[u(%va/FN_STAFFALL,%#)]
-

&ACCESS_APPROVED RP=[u(%va/FN_WIZONLY,%0)]
-

&ACCESS_ARC RP=[u(%va/FN_STAFFALL,%0)]
-

&ACCESS_PLAYERS RP=[u(%va/FN_STAFFALL,%0)]
-

&ACCESS_SCHEDULE RP=[u(%va/FN_STAFFALL,%0)]
-

&ACCESS_STAFF RP=[u(%va/FN_STAFFALL,%0)]
-

&ACCESS_SYNOPSIS RP=[u(%va/FN_STAFFALL,%0)]
-

&ERROR_PLAYERS RP=I don't recognize [ansi(h,%qp)] as a player.
-

&ERROR_STAFF RP=I don't recognize [ansi(h,%qp)] as a player.

-
&HIDDEN RP=1

-
&MAP_NAME RP=[name(*%0)]
-

&PROCESS_APPROVED RP=[setq(3,APPROVED)][setq(1,%0)]1
-

&PROCESS_ARC RP=[setq(3,PLOT_ARC)][setq(1,u(%va/fn_strtrunc,%0,50))]
-

&PROCESS_PLAYERS RP=
	[setq(3,PLAYERS)]
	[ifelse(
		not(gt(strlen(u(%va/fn_trim,squish(
			iter(
				%0,
				if(
					not(isdbref(pmatch(itext(0)))),
					[setr(p,itext(0))]
				)
			)
		))),0)),
		[setq(9,
			iter(
				%0,
				pmatch(itext(0))
			)
		)]
		[setq(8,get(%1/PLAYERS))]
		[iter(
			%q9,
			ifelse(
				gt(member(%q8,##),0),
				setq(8,setdiff(%q8,##)),
				setq(8,setunion(%q8,##))
			)
		)]
		[setq(1,%q8)]
		1,
		0
	)]
-

&PROCESS_SCHEDULE RP=[setq(3,SCHEDULE)][setq(1,u(%va/fn_strtrunc,%0,50))]1
-

&PROCESS_STAFF RP=
	[setq(3,WRITER)]
	[ifelse(
		not(gt(strlen(u(%va/fn_trim,squish(
			iter(
				%0,
				if(
					not(isdbref(pmatch(itext(0)))),
					[setr(p,itext(0))]
				)
			)
		))),0)),
		[setq(9,
			iter(
				%0,
				pmatch(itext(0))
			)
		)]
		[setq(8,get(%1/WRITER))]
		[iter(
			%q9,
			ifelse(
				gt(member(%q8,##),0),
				setq(8,setdiff(%q8,##)),
				setq(8,setunion(%q8,##))
			)
		)]
		[setq(1,%q8)]
		1,
		0
	)]
-

&PROCESS_SYNOPSIS RP=[setq(3,BRIEF)][setq(1,%0)]1
-

&SUMMARY RP=
	[rjust(ansi(hc,Approved:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,APPROVED),
			get(%0/APPROVED),
			Unapproved
		)]%r
	[rjust(ansi(hc,Players:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,PLAYERS),
			u(%va/FN_ITEMIZE,map(me/MAP_NAME,get(%0/PLAYERS),%b,|),|),
			Nobody
		)]%r
	[rjust(ansi(hc,Schedule:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,SCHEDULE),
			get(%0/SCHEDULE),
			Unset
		)]%r
	[rjust(ansi(hc,Arc:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,PLOT_ARC),
			get(%0/PLOT_ARC),
			Unset
		)]%r
	[rjust(ansi(hc,Staff:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,WRITER),
			u(%va/FN_ITEMIZE,map(me/MAP_NAME,get(%0/WRITER),%b,|),|),
			Nobody
		)]%r
	[rjust(ansi(hc,Synopsis:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,BRIEF),
			get(%0/BRIEF),
			Unset
		)]
-

&HELP RP=%r[space(5)]This bucket is for plots that have potential but aren't yet ready to run. Jobs in this bucket should remain here until the plot is approved to be run.%r%r[u(%va/FN_BREAK,ansi(hc,Settings for +job/sumset))]%r[ljust(ansi(h,PLAYERS),10)] Accepts <player> as a valid parameter.%r[ljust(ansi(h,SCHEDULE),10)] Describe when the plot is in effect.%r[ljust(ansi(h,ARC),10)] Describes the story arc associated to this plot.%r[ljust(ansi(h,STAFF),10)] Accepts <player> as a valid parameter.%r[ljust(ansi(h,SYNOPSIS),10)] A brief synopsis of the plot.%r[ljust(ansi(h,APPROVED),10)] Wiz-only, for approving plots. Accepts 'yes' or 'no'.
-

@parent RP=Job Parent Object <JPO>
-

@tel RP=Job Parent Object <JPO>
-


# TECH Bucket


@create TECH=10
-

@Desc TECH=Technology issues - weapon objects, etc.
-

@lock/Speech TECH=ACCESS/1
-

&ACCESS TECH=[u(%va/FN_STAFFALL,%#)]
-

@parent TECH=Job Parent Object <JPO>
-

@tel TECH=Job Parent Object <JPO>
-


# THEME Bucket 

@create THEME=10
-

@Desc THEME=Thematic issues and discussion.
-

@lock/Speech THEME=ACCESS/1
-

&ACCESS THEME=[u(%va/FN_STAFFALL,%#)]
-

@parent THEME=Job Parent Object <JPO>
-

@tel THEME=Job Parent Object <JPO>
-

# TPS bucket.

@create TPS=10
-

@Desc TPS=Actively running tiny plots.
-

@lock/Speech TPS=ACCESS/1
-

&SUMMARY TPS=
	[rjust(ansi(hc,Approved:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,APPROVED),
			get(%0/APPROVED),
			Unapproved
		)]%r
	[rjust(ansi(hc,Players:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,PLAYERS),
			u(%va/FN_ITEMIZE,map(me/MAP_NAME,get(%0/PLAYERS),%b,|),|),
			Nobody
		)]%r
	[rjust(ansi(hc,Schedule:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,SCHEDULE),
			get(%0/SCHEDULE),
			Unset
		)]%r
	[rjust(ansi(hc,Arc:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,PLOT_ARC),
			get(%0/PLOT_ARC),
			Unset
		)]%r
	[rjust(ansi(hc,Staff:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,WRITER),
			u(%va/FN_ITEMIZE,map(me/MAP_NAME,get(%0/WRITER),%b,|),|),
			Nobody
		)]%r
	[rjust(ansi(hc,Synopsis:),10)]%b
		[ifelse(
			u(%va/fn_hasattrp,%0,BRIEF),
			get(%0/BRIEF),
			Unset
		)]
-

&MAP_NAME TPS=[name(*%0)]
-

&ACCESS TPS=[u(%va/FN_STAFFALL,%#)]
-

&ACCESS_PLAYERS TPS=[u(%va/FN_STAFFALL,%0)]
-

&PROCESS_PLAYERS TPS=
	[setq(3,PLAYERS)]
	[ifelse(
		not(gt(strlen(u(%va/fn_trim,squish(
			iter(
				%0,
				if(
					not(isdbref(pmatch(itext(0)))),
					[setr(p,itext(0))]
				)
			)
		))),0)),
		[setq(9,
			iter(
				%0,
				pmatch(itext(0))
			)
		)]
		[setq(8,get(%1/PLAYERS))]
		[iter(
			%q9,
			ifelse(
				gt(member(%q8,##),0),
				setq(8,setdiff(%q8,##)),
				setq(8,setunion(%q8,##))
			)
		)]
		[setq(1,%q8)]
		1,
		0
	)]
-

&ERROR_PLAYERS TPS=I don't recognize [ansi(h,%qp)] as a player.
-

&ACCESS_SCHEDULE TPS=[u(%va/FN_STAFFALL,%0)]
-

&PROCESS_SCHEDULE TPS=[setq(3,SCHEDULE)][setq(1,u(%va/fn_strtrunc,%0,50))]1
-

&ERROR_SCHEDULE TPS=You must enter a valid date string.
-

&ACCESS_ARC TPS=[u(%va/FN_STAFFALL,%0)]
-

&PROCESS_ARC TPS=[setq(3,PLOT_ARC)][setq(1,u(%va/fn_strtrunc,%0,50))]
-

&ACCESS_STAFF TPS=[u(%va/FN_STAFFALL,%0)]
-

&PROCESS_STAFF TPS=
	[setq(3,WRITER)]
	[ifelse(
		not(gt(strlen(u(%va/fn_trim,squish(
			iter(
				%0,
				if(
					not(isdbref(pmatch(itext(0)))),
					[setr(p,itext(0))]
				)
			)
		))),0)),
		[setq(9,
			iter(
				%0,
				pmatch(itext(0))
			)
		)]
		[setq(8,get(%1/WRITER))]
		[iter(
			%q9,
			ifelse(
				gt(member(%q8,##),0),
				setq(8,setdiff(%q8,##)),
				setq(8,setunion(%q8,##))
			)
		)]
		[setq(1,%q8)]
		1,
		0
	)]
-

&ERROR_STAFF TPS=I don't recognize [ansi(h,%qp)] as a player.
-

&ACCESS_SYNOPSIS TPS=[u(%va/FN_STAFFALL,%0)]
-

&PROCESS_SYNOPSIS TPS=[setq(3,BRIEF)][setq(1,%0)]1
-

&ACCESS_APPROVED TPS=[u(%va/FN_WIZONLY,%0)]
-

&PROCESS_APPROVED TPS=[setq(3,APPROVED)][setq(1,%0)]1
-

&HELP TPS=%r[space(5)]This bucket is for currently active plots that are running on the grid. Care should be taken to keep the headers of these jobs up-to-date, especially in terms of Progress settings and due dates. When the plot is completed, the job should be set complete and left open until follow-up requests are completed.%r%r[u(%va/FN_BREAK,ansi(hc,Settings for +job/sumset))]%r[ljust(ansi(h,PLAYERS),10)] Accepts <player> as a valid parameter.%r[ljust(ansi(h,SCHEDULE),10)] Describe when the plot is in effect.%r[ljust(ansi(h,ARC),10)] Describes the story arc associated to this plot.%r[ljust(ansi(h,STAFF),10)] Accepts <player> as a valid parameter.%r[ljust(ansi(h,SYNOPSIS),10)] A brief synopsis of the plot.%r[ljust(ansi(h,APPROVED),10)] Wiz-only, for approving plots. Accepts 'yes' or 'no'.
-

@parent TPS=Job Parent Object <JPO>
-

@tel TPS=Job Parent Object <JPO>
-


# General setup and access Jobs stuff.

&HAS_ACCESS Job Database <JD>=[or(haspower(%0,builder),u(%va/FN_STAFFALL,%0))]
-

&ADD_ACCESS Job Database <JD>=[u(%va/FN_STAFFALL,%0)]
-

&APPROVE_ACCESS Job Database <JD>=[u(%va/FN_STAFFALL,%0)]
-

&COMPLETE_ACCESS Job Database <JD>=[u(%va/FN_STAFFALL,%0)]
-

&CREATE_ACCESS Job Database <JD>=[u(%va/FN_STAFFALL,%0)]
-

&DENY_ACCESS Job Database <JD>=[u(%va/FN_STAFFALL,%0)]
-

&EDIT_ACCESS Job Database <JD>=[u(%va/FN_STAFFALL,%0)]
-

&GIVE_ACCESS Job Database <JD>=[u(%va/FN_WIZONLY,%0)]
-

&LOG_ACCESS Job Database <JD>=[u(%va/FN_WIZONLY,%0)]
-

&MAIL_ACCESS Job Database <JD>=[u(%va/FN_STAFFALL,%0)]
-

&STATS_ACCESS Job Database <JD>=[u(%va/FN_STAFFALL,%0)]
-

&CONFIG_ACCESS Job Database <JD>=[u(%va/FN_STAFFALL,%0)]
-

@switch 
	first(version())
	=
	RhostMUSH,{&FN_WIZONLY Job Database <JD>=%[gte%(bittype%(%%0%),5%)%]},
	{&FN_WIZONLY Job Database <JD>=%[hasflag%(%%0,WIZARD%)%]}
-

@switch 
	first(version())
	=
	RhostMUSH,{&FN_STAFFALL Job Database <JD>=%[gte%(bittype%(%%0%),2%)%]},
	PennMUSH,{&FN_STAFFALL Job Database <JD>=%[orflags%(%%0,Wr%)%]},
	{&FN_STAFFALL Job Database <JD>=%[orflags%(%%0,WZ%)%]}
-

&MAX_JOBS Job Database <JD>=200
-

&JOB_LOGGING Job Database <JD>=1
-

&LOGFILE Job Parent Object <JPO>=joblog
-

@switch 
	[first(version())]
	=
	TinyMUSH,{&BUFFER Job Database <JD>=4000},
	RhostMUSH,{&BUFFER Job Database <JD>=3999},
	{&BUFFER Job Database <JD>=8000}
-

@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting flags.
-

@switch [first(version())]=PennMUSH,{@set Job Global Object <JGO>=WIZARD},{@set Job Global Object <JGO>=INHERIT}
-

@switch [first(version())]=TinyMUSH,{@set Job Global Object <JGO>=COMMANDS},{@set Job Global Object <JGO>=!NO_COMMAND}
-

@switch [first(version())]=PennMUSH,{@set Job Global Object <JGO>=!HALT},{@set Job Global Object <JGO>=!HALTED}
-

@set Job Global Object <JGO>=UNFINDABLE
-

@set Job Global Object <JGO>=SAFE
-

@switch [first(version())]=RhostMUSH,{@set Job Global Object <JGO>=SIDEFX}
-

@switch [first(version())]=PennMUSH,{@set Job Database <JD>=WIZARD},{@set Job Database <JD>=INHERIT}
-

@set Job Database <JD>=UNFINDABLE
-

@switch [first(version())]=TinyMUSH,{@set Job Database <JD>=COMMANDS},{@set Job Database <JD>=!NO_COMMAND}
-

@switch [first(version())]=PennMUSH,{@set Job Database <JD>=!HALT},{@set Job Database <JD>=!HALTED}
-

@set Job Database <JD>=SAFE
-

@switch [first(version())]=RhostMUSH,{@set Job Database <JD>=SIDEFX}
-

@set Job Tracker=UNFINDABLE
-

@switch [first(version())]=TinyMUSH,{@set Job Tracker=!COMMANDS},{@set Job Tracker=NO_COMMAND}
-

@switch [first(version())]=PennMUSH,{@set Job Tracker=!HALT},{@set Job Tracker=!HALTED}
-

@set Job Tracker=SAFE
-

@switch [first(version())]=PennMUSH,{@set Job Parent Object <JPO>=WIZARD},{@set Job Parent Object <JPO>=INHERIT}
-

@set Job Parent Object <JPO>=SAFE
-

@set Job Parent Object <JPO>=UNFINDABLE
-

@switch [first(version())]=TinyMUSH,{@set Job Parent Object <JPO>=COMMANDS},{@set Job Parent Object <JPO>=!NO_COMMAND}
-

@switch [first(version())]=PennMUSH,{@set Job Parent Object <JPO>=!HALT},{@set Job Parent Object <JPO>=!HALTED}
-

@switch [first(version())]=RhostMUSH,{@set Job Parent Object <JPO>=SIDEFX}
-

@dolist 
	lcon(Job Parent Object <JPO>)
	={
		@switch [first(version())]=PennMUSH,{@set ##=!HALT},{@set ##=!HALTED};
		@switch [first(version())]=TinyMUSH,{@set ##=COMMANDS},{@set ##=!NO_COMMAND};
		@set ##=UNFINDABLE;
		@switch [first(version())]=PennMUSH,{@set ##=WIZARD},{@set ##=INHERIT};
	 }
-


@fo me={&INSTALL_DATE Job Database <JD>=[time()]}
-

@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting locks.
-

@lock jgo=me
-

@lock jd=me
-

@lock Job Tracker=me
-

@pemit %#=[ansi(hc,ANOMALY JOBS:)] Creating initial job.
-

@create Job 1=10
-

@fo me=&OPENED_BY Job 1=%#
-

@fo me=&OPENED_ON Job 1=[secs()]
-

@fo me=&MODIFIED_ON Job 1=[secs()]
-

&STATUS Job 1=1
-

&TITLE Job 1=Welcome
-

@fo me={@parent Job 1=[locate(Job Parent Object <JPO>,ADMIN,i)]}
-

&NUM_COMMENT Job 1=3
-

&LIST_STATS Job 1=ADD|1
-

&PRIORITY Job 1=1
-

@fo me=
{
	&COMMENT_1 Job 1=CRE|[secs()]|#0|Anomaly Jobs|Thank you for choosing Anomaly Jobs. This is fully-featured task tracking code that helps to keep games organized. Please see '+jobs/credits' for information on version, license and other credits.
}
-

@fo me=
{
	&COMMENT_2 Job 1=ADD|[secs()]|#0|Anomaly Jobs|Remember that /complete posts to the public BBS (unless changed for a bucket - see the help file on buckets). /approve and /deny sends mail to the job-creator, and posts to private BBS.
}
-

@set Job 1=UNFINDABLE
-

@switch [first(version())]=TinyMUSH,{@set Job 1=!COMMANDS},{@set Job 1=NO_COMMAND}
-
@switch 
	[setq(0,switch(
	  first(version()),
	  PennMUSH,lsearch(all,eobjects,\[strmatch(name(##),bbpocket)\]),
	  search(object=bbpocket)
	))]
	[isdbref(%q0)]
	=
	0,{@pemit %#=[ansi(hc,ANOMALY JOBS:)] Couldn't find Myrddin's BBS. Installation is not complete.},
	{
		@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting up the BBS..;
		+bbnewgroup Job Tracker;
		@wait 2={+bbnewgroup Staff Job Tracker};
		@wait 5=
		{
			&POST_COMPLETE 
				[setq(1,extract(u(%q0/GROUPS),dec(words(u(%q0/GROUPS))),1))]
				[setq(2,last(u(%q0/GROUPS)))]
				[setq(3,num(Job Tracker))]
				[setq(4,switch(
					first(version()),
					RhostMUSH,gte%(bittype%(%%0%)%,2%),
					PennMUSH,orflags%(%%0%,Wr%),
					orflags%(%%0%,WZ%)
				))]
				Job Parent Object <JPO>=member(u(%q0/GROUPS),%q1);
			&POST_APPROVE Job Parent Object <JPO>=member(u(%q0/GROUPS),%q2);
			&POST_DENY Job Parent Object <JPO>=member(u(%q0/GROUPS),%q2);
			&POST_DELETE Job Parent Object <JPO>=member(u(%q0/GROUPS),%q2);
			&CANREAD %q1=1;
			&CANWRITE %q1=%[or%(strmatch%(%%0,%q3%),%q4%)%];
			&CANREAD %q2=%q4;
			&CANWRITE %q2=%[or%(strmatch%(%%0,%q3%),%q4%)%];
		}
	}
-


# The following waits are used to let the rest of the code catch up before final
# cleanup.

@wait 7=@tel Job 1=jd
-

@wait 8=@tel jd=jgo
-

@wait 9=@tel Job Tracker=jgo
-

@wait 9=@tel Job Parent Object <JPO>=jgo
-

&JOBSH me=
-

&JOBSB me=
-

&LAST_CONN me=
-

&JOBSKIN me=
-

&JOBS me=
-

@wait 10=
	{
		@pemit %#=[ansi(hc,ANOMALY JOBS:)] Restarting the game in 25 seconds.;
		@wait 25=
		@switch [first(version())]=
			PennMUSH,@shutdown/reboot,
			@restart
	}
-

@wait 11=
{
	@pemit %#=[ansi(hc,ANOMALY JOBS:)] Script complete. Thanks for using Anomaly Jobs! You should drop the Job Global Object <JGO> in the master room. If you have opened up the system to more than just ROYALTY and WIZARD, you must have #1 lock and hide the attribute LAST_CONN. You should hide & lock JOBSH and JOBSB no matter what. For example:%r%r@attribute/access JOBSB=WIZARD%r@attribute/access JOBSH=HIDDEN
	[switch(first(version()),PennMUSH,%r\(On PennMUSH\, you must use /retroactive and also add these to a wizard's @startup.\))];
	@set me=!quiet
}
-
